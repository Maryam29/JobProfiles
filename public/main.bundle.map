{"version":3,"sources":["webpack:///./src/$_gendir async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/home/Keys.pipe.ts","webpack:///./src/app/home/Times.pipe.ts","webpack:///./src/app/home/applicant-form/applicant-form.component.ts","webpack:///./src/app/home/applicant-list/applicant-list.component.ts","webpack:///./src/app/home/applicant-profile/applicant-profile.component.ts","webpack:///./src/app/home/create-form/create-form.component.ts","webpack:///./src/app/home/create-template/create-template.component.ts","webpack:///./src/app/home/field.model.ts","webpack:///./src/app/home/form-control.model.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/preview-form/preview-form.component.ts","webpack:///./src/app/home/section.model.ts","webpack:///./src/app/home/view-forms/view-forms.component.ts","webpack:///./src/app/signin/signin.component.ts","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/home/custom-form.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/home/applicant-form/applicant-form.component.css","webpack:///./src/app/home/applicant-list/applicant-list.component.css","webpack:///./src/app/home/applicant-profile/applicant-profile.component.css","webpack:///./src/app/home/create-form/create-form.component.css","webpack:///./src/app/home/create-template/create-template.component.css","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/preview-form/preview-form.component.css","webpack:///./src/app/home/view-forms/view-forms.component.css","webpack:///./src/app/signin/signin.component.css","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/home/applicant-form/applicant-form.component.html","webpack:///./src/app/home/applicant-list/applicant-list.component.html","webpack:///./src/app/home/applicant-profile/applicant-profile.component.html","webpack:///./src/app/home/create-form/create-form.component.html","webpack:///./src/app/home/create-template/create-template.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/preview-form/preview-form.component.html","webpack:///./src/app/home/view-forms/view-forms.component.html","webpack:///./src/app/signin/signin.component.html","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/home/form.model.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 296;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir async\n// module id = 296\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Job Portal';\n  IsAuthenticated = false;\n  constructor(private AuthService:  AuthService){}\n\n  ngOnInit(){\n    //console.log(\"Nginit app compo\");\n    this.AuthService.isAuthenticated.subscribe((isauth) => {\n      //console.log(\"Set Is Authenticated\");\n      this.IsAuthenticated = isauth;\n    });\n    \n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FilterPipeModule } from 'ngx-filter-pipe';\n\nimport { AuthGuard } from './auth/auth-guard.service';\nimport { AuthService } from './auth/auth.service';\nimport { CustomFormService } from './home/custom-form.service';\n\nimport { AppComponent } from './app.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { CreateFormComponent } from './home/create-form/create-form.component';\nimport { CreateTemplateComponent } from './home/create-template/create-template.component'\nimport { ApplicantFormComponent } from './home/applicant-form/applicant-form.component';\nimport { ViewFormsComponent } from './home/view-forms/view-forms.component';\nimport { ApplicantListComponent } from './home/applicant-list/applicant-list.component';\nimport { PreviewFormComponent } from './home/preview-form/preview-form.component';\nimport { ApplicantProfileComponent } from './home/applicant-profile/applicant-profile.component';\n\nimport { KeysPipe } from './home/Keys.pipe';\nimport { TimesPipe } from './home/Times.pipe';\n\nconst appRoutes: Routes = [\n  { path: 'signin', component: SigninComponent},\n  { path: 'signup', component: SignupComponent},\n  { path: 'home', component: HomeComponent, canActivate:[AuthGuard],children: [\n    // { path: 'createform', component: CreateFormComponent, canActivate:[AuthGuard]},\n    { path: 'forms', component: ViewFormsComponent, canActivate:[AuthGuard]},\n    { path: 'applicants', component: ApplicantListComponent, canActivate:[AuthGuard]},\n    { path: 'profile', component: ApplicantFormComponent, canActivate:[AuthGuard]},\n    { path: 'ViewProfile/:id', component: ApplicantProfileComponent, canActivate:[AuthGuard]},\n    { path: 'templates', component: CreateTemplateComponent, canActivate:[AuthGuard]}\n]},\n  { path: '**', redirectTo: '/home', pathMatch: 'full' }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SigninComponent,\n    HomeComponent,\n    SignupComponent,\n    CreateFormComponent,\n    ApplicantFormComponent,\n    ViewFormsComponent,\n    ApplicantListComponent,\n    PreviewFormComponent,\n    CreateTemplateComponent,\n    ApplicantProfileComponent,\n    KeysPipe,\n    TimesPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    ReactiveFormsModule,\n    FilterPipeModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [AuthService, AuthGuard, CustomFormService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { CanActivate, CanLoad, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route, ActivatedRoute } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/observable';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate, CanLoad {\r\n\r\n    constructor(private route: ActivatedRoute, private router: Router, private authService: AuthService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean>|boolean{\r\n    // return true;\r\n    //    2.) If token is not set, which means a new tab is opened, then check the node server if session is still open. if open then take action similar to 1, ese redirect to sigin page\r\n    //     console.log(\"Check for session\");\r\n        return this.authService.isSessionOpen().take(1).map(obj => {\r\n            //console.log(obj);\r\n            if (obj == true) {\r\n                return obj;\r\n            }\r\n            else {\r\n                this.router.navigate(['/signin']);\r\n                return obj;\r\n            }\r\n        }\r\n        );\r\n    }\r\n\r\n    canLoad(route: Route) {\r\n        return true;\r\n        // if(this.authService.isAuthenticated()){\r\n        //     return true;\r\n        // }\r\n        // else\r\n        // {\r\n        //     this.router.navigate(['/signin']);\r\n        // }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/auth-guard.service.ts","import { PipeTransform, Pipe } from '@angular/core';\r\n\r\n@Pipe(\r\n    {name: 'keys'}\r\n)\r\nexport class KeysPipe implements PipeTransform {\r\n  transform(value) : any {\r\n    let keys = [];\r\n    for(let key in value) {\r\n        keys.push({key: key, value: value[key]});\r\n    }\r\n    \r\n    return keys;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/Keys.pipe.ts","import { PipeTransform, Pipe } from '@angular/core';\r\n\r\n@Pipe(\r\n    {name: 'times'}\r\n)\r\nexport class TimesPipe implements PipeTransform {\r\n  transform(value) : any {\r\n    return (new Array(value)).fill(1);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/Times.pipe.ts","import { Component, OnInit } from '@angular/core';\r\nimport { CustomFormService } from '../custom-form.service';\r\nimport { AuthService } from '../../auth/auth.service';\r\nimport { FormControl, FormGroup, Validators, FormArray, FormBuilder } from '@angular/forms';\r\nimport { concat } from 'rxjs/operator/concat';\r\nimport { SectionModel } from '../Section.model';\r\n\r\n@Component({\r\n    selector: 'app-applicant-form',\r\n    templateUrl: './applicant-form.component.html',\r\n    styleUrls: ['./applicant-form.component.css']\r\n})\r\nexport class ApplicantFormComponent implements OnInit {\r\n    type: string;\r\n    isApplicationFilled: boolean;\r\n    fieldcount: number;\r\n    FormFields = new Array();\r\n    Sections = new Array();\r\n    ProfileForm: FormGroup;\r\n    FormTitle: string;\r\n    sessionData;\r\n    ProfileDetails;\r\n    isSelected: any[];\r\n    constructor(private customFormService: CustomFormService, private authService: AuthService, private fb: FormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        //console.log(this.authService.sessionData);\r\n        this.sessionData = this.authService.sessionData;\r\n        this.type = this.sessionData.type;\r\n        this.ProfileForm = this.fb.group({\r\n            customcontrols: new FormArray([])\r\n        });\r\n\r\n        this.GetApplicantProfile();\r\n    }\r\n\r\n    onSaveForm() {\r\n        const FormAllSections = this.ProfileForm.get('customcontrols') as FormArray;\r\n        var FormValues = FormAllSections.value;\r\n        //console.log(FormValues);\r\n\r\n        var obj = { _id: this.sessionData._id, type: this.sessionData.type };\r\n        for (var secindex = 0; secindex < this.Sections.length; secindex++) {\r\n            obj[this.Sections[secindex].SectionID] = [];\r\n\r\n            for (var subsecindex = 0; subsecindex < this.Sections[secindex].count; subsecindex++) {\r\n                var fieldsobj = {};\r\n                for (var i = 0; i < this.Sections[secindex].Fields.length; i++) {\r\n                    var field = this.Sections[secindex].Fields[i];\r\n                    var fieldid = field.FieldID;\r\n                    var fieldvalue = FormValues[secindex][subsecindex][i];\r\n                    //console.log(fieldvalue);\r\n\r\n                    if (field.FieldType === \"Checkbox\") {\r\n                        fieldsobj[fieldid] = new Array();\r\n                        for (var j = 0; j < field.options.length; j++) {\r\n                            if (fieldvalue[j]) {\r\n                                fieldsobj[fieldid].push(field.options[j]);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        fieldsobj[fieldid] = fieldvalue;\r\n                    }\r\n                }\r\n                obj[this.Sections[secindex].SectionID].push(fieldsobj);\r\n            }\r\n        }\r\n        //console.log(obj);\r\n\r\n        this.customFormService.SaveApplicantForm(obj).subscribe(res => {\r\n            //console.log(res);\r\n            if (res) {\r\n                this.isApplicationFilled = true;\r\n                this.ProfileDetails = res;\r\n            }\r\n        });\r\n    }\r\n\r\n    EditField(sectionindex) {\r\n        this.Sections[sectionindex].isEditMode = true;\r\n    }\r\n\r\n    GetFieldValue(SectionID, subindex, FieldID) {\r\n        var existingsubindex = this.ProfileDetails[SectionID];\r\n        var no_subindex = existingsubindex.length;\r\n\r\n        if (subindex < no_subindex) {\r\n            return existingsubindex[subindex][FieldID];\r\n        }\r\n        return \"\";\r\n    }\r\n    //----------------For Checkbox---------------//\r\n    checkOptionInProfile(sectionid, subsectionindex, option, fieldid) {\r\n        if (this.ProfileDetails[sectionid][subsectionindex][fieldid] && this.ProfileDetails[sectionid][subsectionindex][fieldid].length > 0)\r\n            return this.ProfileDetails[sectionid][subsectionindex][fieldid].includes(option);\r\n        else\r\n            return false;\r\n    }\r\n\r\n    onSaveSection(secindex) {\r\n\r\n        var obj = {};\r\n        var oldobj = { _id: this.sessionData._id };\r\n\r\n        const FormAllSections = this.ProfileForm.get('customcontrols') as FormArray;\r\n        var FormValues = FormAllSections.value;\r\n        //console.log(FormValues);\r\n        obj[this.Sections[secindex].SectionID] = [];\r\n\r\n        for (var subsecindex = 0; subsecindex < this.Sections[secindex].count; subsecindex++) {\r\n            var fieldsobj = {};\r\n            for (var findex = 0; findex < this.Sections[secindex].Fields.length; findex++) {\r\n                var field = this.Sections[secindex].Fields[findex];\r\n                var fieldid = field.FieldID;\r\n                //console.log(fieldid);\r\n                var fieldvalue = FormValues[secindex][subsecindex][findex];\r\n                //console.log(fieldvalue);\r\n                if (field.FieldType === \"Checkbox\") {\r\n                    fieldsobj[fieldid] = new Array();\r\n                    for (var j = 0; j < field.options.length; j++) {\r\n                        if (fieldvalue[j]) {\r\n                            fieldsobj[fieldid].push(field.options[j]);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    fieldsobj[fieldid] = fieldvalue;\r\n                }\r\n            }\r\n            obj[this.Sections[secindex].SectionID].push(fieldsobj);\r\n        }\r\n        this.customFormService.UpdateApplicantProfile(oldobj, obj).subscribe((res) => {\r\n            if (res) {\r\n                this.ProfileDetails = res;\r\n            }\r\n            this.Sections[secindex].isEditMode = false;\r\n        })\r\n    }\r\n\r\n    GetApplicantProfile() {\r\n        this.customFormService.GetApplicantProfile(this.sessionData._id).subscribe((obj) => {\r\n            if (obj) {\r\n                this.isApplicationFilled = true;\r\n                this.ProfileDetails = obj;\r\n                this.CreateForm();\r\n            }\r\n            else {\r\n                this.isApplicationFilled = false;\r\n                console.log(this.type);\r\n                this.CreateEmptyForm();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    CreateForm() {\r\n        this.customFormService.GetForm(this.type).subscribe((obj) => {\r\n            this.Sections = new Array();\r\n\r\n            if (obj) {\r\n                this.FormTitle = obj.FormTitle;\r\n                var FormAllSections = this.ProfileForm.get('customcontrols') as FormArray;\r\n\r\n                for (var i = 0; i < obj.Sections.length; i++) {\r\n\r\n                    let currsection = obj.Sections[i];\r\n                    var existingdetails = this.ProfileDetails[obj.Sections[i].SectionID];\r\n                    //console.log(existingdetails);\r\n\r\n                    var isSectionDetailAvailable = false;\r\n\r\n                    if (existingdetails.length > 0) {\r\n                        currsection.count = existingdetails.length;\r\n                        isSectionDetailAvailable = true;\r\n                    }\r\n                    else {\r\n                        currsection.count = 1;\r\n                    }\r\n                    currsection.isEditMode = false;\r\n                    this.Sections.push(currsection);\r\n                    var fields = currsection.Fields;\r\n                    //console.log(currsection);\r\n\r\n                    const Formcurrsection = new FormArray([]);\r\n                    for (var j = 0; j < currsection.count; j++) {\r\n                        var Formfields = new FormGroup({});\r\n\r\n                        for (var findex = 0; findex < fields.length; findex++) {\r\n\r\n                            if (fields[findex].FieldType == 'Checkbox') {\r\n                                const checkboxoptionArray = new FormArray([]);\r\n\r\n                                for (var count = 0; count < fields[findex].options.length; count++) {\r\n                                    var option = fields[findex].options[count];\r\n                                    var optioncontrol;\r\n\r\n                                    if (isSectionDetailAvailable) {\r\n                                        if (this.checkOptionInProfile(obj.Sections[i].SectionID, j, option, fields[findex].FieldID)) {\r\n                                            optioncontrol = new FormControl(true, Validators.required);\r\n                                        }\r\n                                        else\r\n                                            optioncontrol = new FormControl(false, Validators.required);\r\n                                    }\r\n                                    else {\r\n                                        optioncontrol = new FormControl(false, Validators.required);\r\n                                    }\r\n                                    checkboxoptionArray.push(optioncontrol);\r\n                                }\r\n                                Formfields.addControl(findex.toString(), checkboxoptionArray);\r\n                            }\r\n                            else {\r\n                                var newcontrol;\r\n                                if (isSectionDetailAvailable) {\r\n                                    var val = existingdetails[j][fields[findex].FieldName];\r\n                                    if (val) {\r\n                                        newcontrol = new FormControl(val, Validators.required);\r\n                                    }\r\n                                    else {\r\n                                        newcontrol = new FormControl(null, Validators.required);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    newcontrol = new FormControl(null, Validators.required);\r\n                                }\r\n                                Formfields.addControl(findex.toString(), newcontrol);\r\n                            }\r\n                        }\r\n                        //console.log(j);\r\n                        Formcurrsection.push(Formfields);\r\n                    }\r\n                    FormAllSections.push(Formcurrsection);\r\n                }\r\n                console.log(FormAllSections);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    CreateEmptyForm() {\r\n        console.log(this.type);\r\n        this.customFormService.GetForm(this.type).subscribe((obj) => {\r\n            this.Sections = new Array();\r\n            if (obj) {\r\n                this.FormTitle = obj.FormTitle;\r\n                const FormAllSections = this.ProfileForm.get('customcontrols') as FormArray;\r\n\r\n                for (var i = 0; i < obj.Sections.length; i++) {\r\n\r\n                    let currsection = obj.Sections[i];\r\n                    currsection.count = 1;\r\n                    currsection.isEditMode = false;\r\n\r\n                    this.Sections.push(currsection);\r\n                    var fields = currsection.Fields;\r\n\r\n                    const Formcurrsection = new FormArray([]);\r\n                    for (var j = 0; j < currsection.count; currsection++) {\r\n                        var Formfields = new FormGroup({});\r\n\r\n                        for (var findex = 0; findex < fields.length; findex++) {\r\n\r\n                            if (fields[findex].FieldType == 'Checkbox') {\r\n                                const checkboxoptionArray = new FormArray([]);\r\n\r\n                                for (var count = 0; count < fields[findex].options.length; count++) {\r\n                                    var option = fields[findex].options[count];\r\n                                    var optioncontrol;\r\n                                    optioncontrol = new FormControl(false, Validators.required);\r\n\r\n                                    checkboxoptionArray.push(optioncontrol);\r\n                                }\r\n                                Formfields.addControl(findex.toString(), checkboxoptionArray);\r\n                            }\r\n                            else {\r\n                                var newcontrol = new FormControl(null, Validators.required);\r\n                                Formfields.addControl(findex.toString(), newcontrol);\r\n                            }\r\n                        }\r\n                        Formcurrsection.push(Formfields);\r\n                    }\r\n                    FormAllSections.push(Formcurrsection);\r\n                    console.log(FormAllSections);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    AddSection(currsectionindex) {\r\n        let currsection = this.Sections[currsectionindex];\r\n        var fields = currsection.Fields;\r\n\r\n        const FormAllSections = this.ProfileForm.get('customcontrols') as FormArray;\r\n        //console.log(FormAllSections);\r\n        const Formcurrsection = FormAllSections.controls[currsectionindex] as FormArray;\r\n\r\n        var Formfields = new FormGroup({});\r\n        for (var findex = 0; findex < fields.length; findex++) {\r\n\r\n            if (fields[findex].FieldType == 'Checkbox') {\r\n                const checkboxoptionArray = new FormArray([]);\r\n\r\n                for (var count = 0; count < fields[findex].options.length; count++) {\r\n                    var option = fields[findex].options[count];\r\n                    var optioncontrol;\r\n                    optioncontrol = new FormControl(false, Validators.required);\r\n\r\n                    checkboxoptionArray.push(optioncontrol);\r\n                }\r\n                Formfields.addControl(findex.toString(), checkboxoptionArray);\r\n            }\r\n            else {\r\n                var newcontrol = new FormControl(null, Validators.required);\r\n                Formfields.addControl(findex.toString(), newcontrol);\r\n            }\r\n        }\r\n\r\n        Formcurrsection.push(Formfields);\r\n        this.Sections[currsectionindex].count++;\r\n    }\r\n\r\n    RemoveSection(currsectionindex, subindex) {\r\n        let currsection = this.Sections[currsectionindex];\r\n        var fields = currsection.Fields;\r\n\r\n        const FormAllSections = this.ProfileForm.get('customcontrols') as FormArray;\r\n        //console.log(FormAllSections);\r\n        const Formcurrsection = FormAllSections.controls[currsectionindex] as FormArray;\r\n        Formcurrsection.removeAt(subindex);\r\n\r\n        this.Sections[currsectionindex].count--;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/applicant-form/applicant-form.component.ts","import { Component, OnInit,Input, ViewChildren, QueryList } from '@angular/core';\nimport { CustomFormService } from '../custom-form.service';\nimport * as _ from 'lodash';\nimport * as jsPDF from 'jspdf';\nimport { FormModel } from '../form.model';\nimport { SectionModel } from '../Section.model';\n\n@Component({\n  selector: 'app-applicant-list',\n  templateUrl: './applicant-list.component.html',\n  styleUrls: ['./applicant-list.component.css']\n})\nexport class ApplicantListComponent implements OnInit{\n  AllApplicants : any[];\n  FormsList : FormModel[];\n  ApplicantsDetails: any[];\n  FilterText:string;\n  userFilter:any ={};\n  PersonalDetailsID = \"5b1539c2f5e086aa37d87b6b\";  // Should be same across all the forms\n\n  SelectedType = {\n    type:\"\",\n    fields:[],\n    applicants:[],\n    count_applicants:0\n  };\n  isApplicantFiltered: boolean[];\n  isApplicantChecked: boolean[];\n  @ViewChildren('ApplicantProfiles') ApplicantProfiles : QueryList<any>;\n\n  constructor(private customFormService:CustomFormService){}\n\n  ngOnInit() {\n    \n    this.customFormService.GetAllApplicantsPersonalDetails(this.PersonalDetailsID).subscribe(obj =>{\n      if(obj && obj.length){\n        this.AllApplicants = obj;\n\n        this.customFormService.GetAllForms().subscribe(obj =>{\n          if(obj && obj.length){\n            this.FormsList = obj;\n          }\n          this.CategorizeApplicant();\n        });\n      }\n    });\n\n  }\n\n  isEmpty(text){\n    return _.isEmpty(text)\n  }\n\n  OnSearch(){\n  //console.log(\"OnFilterchnage\");\n    if(_.isEmpty(this.FilterText)){\n      this.isApplicantFiltered.fill(true,0);\n    }\n    else{\n      var searchedtext = _.toLower(this.FilterText);\n      \n      this.SelectedType.applicants.forEach((item,index) => {\n        \n          this.SelectedType.fields.some((field) => {\n            var val = _.toLower(item[field.FieldName]);\n           // console.log(val);\n            if(val.indexOf(searchedtext) != -1){\n              this.isApplicantFiltered[index] = true;\n              return true;\n            }\n            else{\n              this.isApplicantFiltered[index] = false;\n            }\n          });\n      });\n    }\n  }\n  \n  OnClearSearch(){\n    this.FilterText = \"\";\n    this.isApplicantFiltered.fill(true,0);\n  }\n\n  OnSelectApplicantType(index){\n    //console.log(\"OnSelectApplicantType\");\n    this.SelectedType = this.ApplicantsDetails[index];\n    this.FilterText = \"\";\n    this.isApplicantChecked = new Array(this.SelectedType.count_applicants);\n    this.isApplicantFiltered = new Array(this.SelectedType.count_applicants);\n\n    this.isApplicantChecked.fill(false,0);\n    this.isApplicantFiltered.fill(true,0);\n    //console.log(this.isApplicantFiltered);\n    //console.log(this.isApplicantChecked);\n   }\n\n   ToggleApplicantSelection(index){\n     //console.log(this.isApplicantChecked);\n    this.isApplicantChecked[index] = !this.isApplicantChecked[index];\n   //console.log(this.isApplicantChecked);\n   }\n   \n  CategorizeApplicant(){\n    this.ApplicantsDetails = new Array();\n\n    this.FormsList.forEach((form) => {\n      var obj = {};\n      obj[\"type\"] = form.FormTypeName; //form type\n      obj[\"fields\"] = [];\n\n      var section = form.Sections.filter(section => {\n        return section.SectionID.includes(this.PersonalDetailsID);\n      });\n\n      if(section.length){\n        obj[\"fields\"] = section[0].Fields\n      }\n      \n      obj[\"applicants\"] = [];\n\n      //---------For each applicant get Personal Details----------//\n      this.AllApplicants.forEach((applicant)=>{\n        \n        //----Check if Applicant type, is of current Form type and has PersonalDetials section----//\n        if(applicant.type === form.FormType && applicant[this.PersonalDetailsID] && applicant[this.PersonalDetailsID].length>0){\n\n          var values = applicant[this.PersonalDetailsID][0]; // values object stores values for differnent field.\n\n          var singleapplicant = {applicantID:applicant._id};\n          obj[\"fields\"].forEach(field => {\n            singleapplicant[field.FieldName] = values[field.FieldID];\n          });\n          \n          obj[\"applicants\"].push(singleapplicant);\n        }\n      });\n      \n      obj[\"count_applicants\"] = obj[\"applicants\"].length;\n      this.ApplicantsDetails.push(obj);     //Applicant Details categorizes applicants in number of applicant type category, Each element of ApplicantDetials has list of applicants under that category\n    })\n    //console.log(this.ApplicantsDetails);\n  }\n\n  ExportSelectedProfiles(){\n    console.log(\"Export to pdf\");\n    this.ApplicantProfiles.forEach((profile,index)=>{\n      if(this.isApplicantChecked[index]){\n\n        let doc = new jsPDF();\n        let specialElementHandlers = {\n          '#editor':function(element,renderer){\n            return true;\n          }\n        };\n\n        let content = profile.nativeElement;\n        doc.fromHTML(content.innerHTML,15,15,{\n          'width':190,\n          'elementHandlers':specialElementHandlers\n        });\n        var filename = \"Applicant\"+this.SelectedType.applicants[index][\"Name\"]+\".pdf\"\n        doc.save(filename);\n      }\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/applicant-list/applicant-list.component.ts","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { CustomFormService } from '../custom-form.service';\nimport { FormModel } from '../form.model';\nimport * as jsPDF from 'jspdf';\n\n@Component({\n  selector: 'app-applicant-profile',\n  templateUrl: './applicant-profile.component.html',\n  styleUrls: ['./applicant-profile.component.css']\n})\nexport class ApplicantProfileComponent implements OnInit {\n\n  Applicant;\n  Form: FormModel;\n  TemplateList: any[];\n  @ViewChild('ApplicantProfile') ApplicantProfile: ElementRef;\n  constructor(private route: ActivatedRoute, private router: Router, private customFormService: CustomFormService) { }\n\n  ngOnInit() {\n    this.Form = new FormModel();\n    this.Applicant = {};\n\n    this.route.params.subscribe((params: Params) => {\n      let id = params['id'];\n      this.customFormService.GetApplicantProfile(id).subscribe((obj) => {\n        if (obj) {\n          this.Applicant = obj;\n          this.customFormService.GetForm(this.Applicant.type).subscribe((form) => {\n            if (form) {\n              this.Form = form;\n              this.OnSelectForm();\n              this.GetAllFormTemplates(this.Form._id);\n            }\n          });\n        }\n      });\n    });\n\n  }\n\n  OnSelectForm() {\n    // Inititally all the fields of the form are displayed.\n    for (var sec = 0; sec < this.Form.Sections.length; sec++) {\n      var currsec = this.Form.Sections[sec];\n      for (var findex = 0; findex < currsec.Fields.length; findex++) {\n        currsec.Fields[findex].isFieldChecked = true;\n      }\n    }\n  }\n\n  GetFieldValue(SectionID, index, FieldID) {\n    if (this.Applicant[SectionID]) {\n      return this.Applicant[SectionID][index][FieldID];\n    }\n    return \"\";\n  }\n\n  GetSectionCount(SectionID) {\n    if (this.Applicant[SectionID]) {\n      return this.Applicant[SectionID].length;\n    }\n    return 0;\n  }\n\n  GetAllFormTemplates(formID) {\n    this.customFormService.GetTemplatesByFormID(formID).subscribe((temp) => {\n      if (temp && temp.length) {\n        this.TemplateList = temp;\n      }\n    });\n  }\n\n  CheckedFieldCount(secindex){\n    return this.Form.Sections[secindex].Fields.filter((field) =>{\n      return field.isFieldChecked == true;\n    }).length;\n  }\n\n  OnSelectTemplate(val) {\n    let index: number = val.target[\"selectedIndex\"];\n\n    if (index == 0) {\n      this.OnSelectForm();\n    }\n    else {\n      var SelectedTemplate = this.TemplateList[index-1];\n      let Section = {};\n\n      for (var sec = 0; sec < this.Form.Sections.length; sec++) {\n        var currsec = this.Form.Sections[sec];\n        Section[currsec.SectionID] = sec; // storing the index\n      }\n\n      for (var i = 0; i < SelectedTemplate.Sections.length; i++) {\n        var templatesec = SelectedTemplate.Sections[i];\n\n        // If Section is present in template section look for fields in Template\n        if (Section.hasOwnProperty(templatesec.SectionID)) {\n          let secindex = Section[templatesec.SectionID]\n\n          var currsec = this.Form.Sections[secindex];\n          var formfields = currsec.Fields;\n\n          for (var findex = 0; findex < formfields.length; findex++) {\n\n            var isFieldpresent = templatesec.Fields.filter((field) => {\n              return field == formfields[findex].FieldID;\n            });\n\n            if (isFieldpresent.length) {\n              currsec.Fields[findex].isFieldChecked = true;\n            }\n            else {\n              currsec.Fields[findex].isFieldChecked = false;\n            }\n\n          }\n          console.log(SelectedTemplate);\n        }\n      }\n    }\n\n  }\n\n  PrintToPdf() {\n    console.log(\"Export to pdf\");\n\n    let doc = new jsPDF();\n    let specialElementHandlers = {\n      '#editor': function (element, renderer) {\n        return true;\n      }\n    };\n    let content = this.ApplicantProfile.nativeElement;\n    doc.fromHTML(content.innerHTML, 15, 15, {\n      'width': 190,\n      'elementHandlers': specialElementHandlers\n    });\n\n    console.log(content);\n    var filename = \"Applicant\" + this.Applicant._id + \".pdf\"\n    doc.save(filename);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/applicant-profile/applicant-profile.component.ts","import { Component, OnInit, Input ,OnChanges, Output, EventEmitter} from '@angular/core';\nimport { CustomFormService } from '../custom-form.service';\nimport { AuthService } from '../../auth/auth.service';\n\nimport { SectionModel } from '../section.model';\nimport { FormModel } from '../form.model';\nimport { FormControlModel } from '../form-control.model';\nimport { FieldModel } from '../field.model';\nvar ObjectID = require(\"bson-objectid\");\n\n\n@Component({\n  selector: 'app-create-form',\n  templateUrl: './create-form.component.html',\n  styleUrls: ['./create-form.component.css']\n})\n\nexport class CreateFormComponent implements OnInit, OnChanges {\n  @Input() SelectedForm = new FormModel();\n  @Output() FormSaved = new EventEmitter();\n\n  controls : Array<FormControlModel>;\n  totalcontrols : number;\n  TotalSections = 0;\n  ApplicantType;\n  FormSuccessMessage = \"\"\n\n  ngOnChanges(){\n      this.TotalSections = this.SelectedForm.Sections.length;\n  }\n \n  constructor(private customFormService:CustomFormService, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authService.getApplicantType().subscribe(obj =>{\n      //console.log(obj);\n      this.ApplicantType = obj;\n    })\n\n    this.customFormService.GetFormControls().subscribe((obj) =>{\n      this.controls = new Array();\n      for(var i=0;i<obj.length;i++){\n        const control = new FormControlModel();\n        control.Type = obj[i].FieldType;\n        control.isMultipleOption = obj[i].isMultipleOption;\n        control.Total = 0;\n        if(control.isMultipleOption){\n          control.optionCount = 1;\n        }\n        else{\n          control.optionCount = 0;\n        }\n        this.controls.push(control);\n      }\n      this.totalcontrols = this.controls.length;\n      //console.log(this.controls);\n    });\n  }\n\n  OnSave(){\n    //console.log(this.SelectedForm);\n    this.customFormService.SaveForm(this.SelectedForm)\n    .subscribe(obj =>{\n      if(obj){\n        this.SelectedForm._id = obj._id;\n        this.FormSaved.emit(this.SelectedForm);\n        this.FormSuccessMessage = \"Form Saved successfully\";\n      }\n      else{\n        this.FormSuccessMessage = \"Form couldn't be saved.\"\n      }\n  });\n  }\n\n  OnSelectFormType(event){\n    let index: number = event.target[\"selectedIndex\"];\n    this.SelectedForm.FormTypeName = this.ApplicantType[index].type;\n   // console.log(this.SelectedForm.FormTypeName);\n  }\n\n  OnOptionChange(sectionindex,fieldindex,newvalue,optionindex){\n    this.SelectedForm.Sections[sectionindex].Fields[fieldindex].options[optionindex] = newvalue;\n  }\n\n  AddOption(sectionindex,fieldindex){\n    var optionlabel = \"Option \"+this.SelectedForm.Sections[sectionindex].Fields[fieldindex].options.length;\n    this.SelectedForm.Sections[sectionindex].Fields[fieldindex].options.push(optionlabel);\n  }\n\n  RemoveOption(sectionindex, fieldindex,optionindex){\n    this.SelectedForm.Sections[sectionindex].Fields[fieldindex].options.splice(optionindex,1);\n  }\n\n  AddSection(){\n    var newSection = new SectionModel();\n    newSection.SectionID = ObjectID();\n    newSection.SectionName = \"Section \"+ this.TotalSections;\n    newSection.CanBeMultiple = false;\n    newSection.Fields = new Array<FieldModel>();\n    var fieldcount = 0;\n    //Add Fields logic\n    for(var i=0;i<this.totalcontrols;i++){\n      {\n        for(var j=0;j<this.controls[i].Total;j++){\n          var newField = new FieldModel();\n          newField.FieldID = ObjectID();\n          newField.FieldName = \"Field \"+ fieldcount;\n          newField.FieldType = this.controls[i].Type;\n          newField.options = new Array();\n          var optioncount = this.controls[i].optionCount;\n\n          for(var count=0;count<optioncount;count++){\n            var optionlabel = \"Option \"+count;\n            newField.options.push(optionlabel);\n          }\n\n          newSection.Fields.push(newField);\n          fieldcount++;\n        }\n      }\n    }\n    this.SelectedForm.Sections.push(newSection);\n    //console.log(this.SelectedForm.Sections);\n    this.TotalSections++\n  }\n\n  RemoveSection(sectionindex){\n    this.SelectedForm.Sections.splice(sectionindex,1);\n  }\n\n  AddField(SectionIndex, control:FormControlModel){\n    var fieldcount = this.SelectedForm.Sections[SectionIndex].Fields.length;\n    var newField = new FieldModel();\n    newField.FieldID = ObjectID();\n    newField.FieldName = \"Field \"+fieldcount;\n    newField.FieldType = control.Type;\n    newField.options = new Array();\n    for(var count=0;count<control.optionCount;count++){\n      var optionlabel = \"Option \"+count;\n      newField.options.push(optionlabel);\n    }\n    this.SelectedForm.Sections[SectionIndex].Fields.push(newField);\n  }\n  \n  RemoveField(sectionindex,fieldindex){\n    this.SelectedForm.Sections[sectionindex].Fields.splice(fieldindex,1);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/create-form/create-form.component.ts","import { Component, OnInit } from '@angular/core';\nimport { CustomFormService } from '../custom-form.service';\nimport { FormModel } from '../form.model';\nimport { TemplateModel } from '../template.model';\nimport { SectionModel } from '../Section.model';\nimport { FieldModel } from '../field.model';\n\n@Component({\n  selector: 'app-create-template',\n  templateUrl: './create-template.component.html',\n  styleUrls: ['./create-template.component.css']\n})\nexport class CreateTemplateComponent implements OnInit {\n  TemplatesList: any[];\n  FormsList: FormModel[];\n  isFieldChecked: any[];\n  SelectedForm:FormModel;\n  createMode: boolean;\n  FieldCheckedCount: number;\n  TemplateTitle: string;\n  TemplateID:string;\n  TotalFieldsChecked: number;\n\n  constructor(private customFormService: CustomFormService) { }\n\n  ngOnInit() {\n    this.GetAllTemplates();\n    this.GetAllForms();\n  }\n\n  GetAllTemplates() {\n    this.customFormService.GetAllTemplates().subscribe(obj => {\n      if (obj && obj.length) {\n        this.TemplatesList = obj;\n      }\n    });\n  }\n\n  GetAllForms() {\n    this.customFormService.GetAllForms().subscribe(obj => {\n      if (obj && obj.length) {\n        this.FormsList = obj;\n      }\n    });\n  }\n\n  OnEditTemplate(index) {\n    var SelectedTemplate = this.TemplatesList[index];\n    this.TemplateTitle = SelectedTemplate.TemplateTitle;\n    this.TemplateID = SelectedTemplate._id;\n    var Form = this.FormsList.filter(form => {\n      return form._id == SelectedTemplate.FormID;\n    });\n\n    if (Form.length) {\n      this.SelectedForm = Form[0];\n      this.TotalFieldsChecked = 0;\n      var Section = {};\n\n      // Check if Form section is present in the selected Template Sections\n      for (var sec = 0; sec < this.SelectedForm.Sections.length; sec++) {\n        var currsec = this.SelectedForm.Sections[sec];\n        Section[currsec.SectionID] = sec; // storing the index\n      }\n\n      for (var i = 0; i < SelectedTemplate.Sections.length; i++) {\n        var templatesec = SelectedTemplate.Sections[i];\n\n        // If Section is present in template section look for fields in Template\n        if (Section.hasOwnProperty(templatesec.SectionID)) {\n          let secindex = Section[templatesec.SectionID]\n\n          var currsec = this.SelectedForm.Sections[secindex];\n          var formfields = currsec.Fields;\n\n          for (var findex = 0; findex < formfields.length; findex++) {\n\n            var isFieldpresent = templatesec.Fields.filter((field) => {\n              return field == formfields[findex].FieldID;\n            });\n\n            if (isFieldpresent.length) {\n              currsec.Fields[findex].isFieldChecked = true;\n              this.TotalFieldsChecked++;\n            }\n            else {\n              currsec.Fields[findex].isFieldChecked = false;\n            }\n\n          }\n          //console.log(this.SelectedForm);\n        }\n      }\n    }\n    this.createMode = true;\n  }\n\n  OnSelectForm(val) {\n\n    let index: number = val.target[\"selectedIndex\"];\n    this.SelectedForm = this.FormsList[index];\n    for (var sec = 0; sec < this.SelectedForm.Sections.length; sec++) {\n      var currsec = this.SelectedForm.Sections[sec];\n      for (var findex = 0; findex < currsec.Fields.length; findex++) {\n        currsec.Fields[findex].isFieldChecked = true;\n        this.TotalFieldsChecked++;\n      }\n    }\n  }\n\n  ToggleFieldSelection(secindex, fieldindex) {\n    this.SelectedForm.Sections[secindex].Fields[fieldindex].isFieldChecked = !this.SelectedForm.Sections[secindex].Fields[fieldindex].isFieldChecked;\n\n    if (this.SelectedForm.Sections[secindex].Fields[fieldindex].isFieldChecked) {\n      this.TotalFieldsChecked++;\n    }\n    else {\n      this.TotalFieldsChecked--;\n    }\n  }\n\n  CheckedFieldCount(secindex){\n    return this.SelectedForm.Sections[secindex].Fields.filter((field) =>{\n      return field.isFieldChecked == true;\n    }).length;\n  }\n\n  OnCreateTemplate() {\n    this.createMode = true;\n    this.SelectedForm = new FormModel();\n    this.TemplateTitle = \"Template Title\";\n    this.TemplateID = null;\n    this.SelectedForm.Sections = new Array();\n    this.TotalFieldsChecked = 0;\n  }\n\n  OnSaveTemplate() {\n    var template = { FormID: this.SelectedForm._id, FormType: this.SelectedForm.FormType, TemplateTitle: this.TemplateTitle, _id:this.TemplateID };\n    template[\"Sections\"] = new Array();\n\n    for (var secindex = 0; secindex < this.SelectedForm.Sections.length; secindex++) {\n      var fields = this.SelectedForm.Sections[secindex].Fields;\n      var currsec = this.SelectedForm.Sections[secindex];\n\n      var checkedfields = fields.filter(field => {\n        return field.isFieldChecked == true;\n      }).map(field => {\n        return field.FieldID;\n      });\n\n      if (checkedfields.length > 0) {\n        var currobj = {};\n        currobj[\"SectionID\"] = currsec.SectionID;\n        currobj[\"Fields\"] = checkedfields;\n        template[\"Sections\"].push(currobj);\n      }\n\n    }\n\n    this.customFormService.SaveTemplate(template).subscribe((obj) => {\n      if (obj) {\n        this.GetAllTemplates();\n      }\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/create-template/create-template.component.ts","import { FormControlModel } from \"./form-control.model\";\r\n\r\nexport class FieldModel{\r\n    FieldID:string;\r\n    FieldName:string;\r\n    FieldType:string;\r\n    options: string[];\r\n    isFieldChecked:boolean;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/field.model.ts","export class FormControlModel{\r\n    Type:string;\r\n    isMultipleOption:boolean;\r\n    optionCount:number;\r\n    Total:number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/form-control.model.ts","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  UserType:string\r\n\r\n  constructor(private authService:AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.UserType = this.authService.sessionData.type;\r\n  }\r\n\r\n  OnLogout(){\r\n    this.authService.Logout();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-preview-form',\n  templateUrl: './preview-form.component.html',\n  styleUrls: ['./preview-form.component.css']\n})\nexport class PreviewFormComponent implements OnInit {\n  @Input() SelectedForm;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/preview-form/preview-form.component.ts","import { FieldModel } from './field.model';\r\n\r\nexport class SectionModel {\r\n    SectionID:string;\r\n    SectionName:string;\r\n    CanBeMultiple:boolean;\r\n    Fields: FieldModel[];\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/section.model.ts","import { Component, OnInit } from '@angular/core';\nimport { CustomFormService } from '../custom-form.service';\nimport { FormModel } from '../form.model';\nimport { SectionModel } from '../Section.model';\n\n@Component({\n  selector: 'app-view-forms',\n  templateUrl: './view-forms.component.html',\n  styleUrls: ['./view-forms.component.css']\n})\nexport class ViewFormsComponent implements OnInit {\n  FormsList : FormModel[];\n  SelectedForm : FormModel;\n  isSelected:boolean = false;\n  FormsCount:number = 0;\n  constructor(private customFormService:CustomFormService){}\n\n  ngOnInit() {\n    this.getAllForms();\n  }\n\n  OnSelectForm(index){\n    this.isSelected = true;\n    //console.log(this.FormsList[index]);\n    this.SelectedForm = this.FormsList[index];\n  }\n\n  OnSaveForm(event){\n    this.SelectedForm = event;\n    this.isSelected = true;\n    this.getAllForms();\n  }\n\n  CreateNewForm(){\n    this.SelectedForm = new FormModel();\n    this.SelectedForm.Sections = new Array<SectionModel>();\n    this.isSelected = true;\n  }\n\n  getAllForms(){\n    this.customFormService.GetAllForms().subscribe(obj =>{\n      if(obj && obj.length){\n        this.FormsList = obj;\n        this.FormsCount = this.FormsList.length;\n      }\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/view-forms/view-forms.component.ts","import { Component, OnInit,Input } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.css']\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  @Input() message:string;\r\n  constructor(private router:Router, private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  OnSignIn(form:NgForm){\r\n    const userid = form.value.userid;\r\n    const password = form.value.password;\r\n    this.authService.Signin(userid, password).subscribe(obj => {\r\n      if(obj.user == false){\r\n          this.message = \"Your username or password is incorrect\";\r\n      }\r\n      else{\r\n        this.authService.sessionData = obj.user;\r\n        this.authService.isAuthenticated.next(true);\r\n        this.router.navigate(['/']);\r\n      }\r\n  }, error => this.router.navigate(['/signin']));;\r\n  }\r\n\r\n  GoToSignup(){\r\n    this.router.navigate(['/signup']);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/signin/signin.component.ts","import { Component, OnInit , Input} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { concat } from 'rxjs/operator/concat';\r\nimport { Router } from '@angular/router';\r\nimport 'rxjs/rx';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  @Input() otptext:string;\r\n  @Input() phoneno:string;\r\n  @Input() message:string;\r\n  \r\n  ApplicantType: any[];\r\n  isPhoneVerified = false;\r\n  isSMSSent = false;\r\n  constructor(private router: Router, private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.getApplicantType().subscribe(obj =>{\r\n      //console.log(obj);\r\n      this.ApplicantType = obj;\r\n    })\r\n  }\r\n\r\n  OnSignUp(form:NgForm){\r\n    const userid = form.value.userid;\r\n    const password = form.value.password;\r\n    const type = form.value.type;\r\n    this.authService.Signup(userid, password, type).subscribe(obj => {\r\n      if(obj.user == false){\r\n        this.message = \"Some Error Occured. Try Again\";\r\n      }\r\n      else{\r\n        this.authService.sessionData = obj.user;\r\n        this.authService.isAuthenticated.next(true);\r\n        this.router.navigate(['/']);\r\n      }\r\n  }, error => this.router.navigate(['/signup']));\r\n  }\r\n\r\n  SendOTP(){\r\n    this.authService.SendOTP(this.phoneno).subscribe(obj =>{\r\n        if(obj.OTPSent){\r\n        this.isSMSSent = true;\r\n        this.message = \"SMS successfully sent.\";\r\n      }\r\n      else{\r\n        this.message = obj.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  VerifyOTP(){\r\n    this.authService.VerifyOTP(this.otptext,this.phoneno).subscribe(obj =>{\r\n      if(obj.OTPVerified){\r\n        this.isPhoneVerified = true;\r\n        this.message = \"Phone No. verified.\";\r\n      }\r\n      else{\r\n        this.message = obj.message;\r\n      }\r\n    });\r\n  }\r\n  OnLoginPage(){\r\n    this.router.navigate(['/signin']);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/signup/signup.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { Http } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { error } from 'util';\r\nimport 'rxjs/rx';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    isAuthenticated = new Subject<boolean>();\r\n    sessionData;\r\n    constructor(private router: Router, private http: Http) { }\r\n\r\n    Signin(userid, password) {\r\n        //console.log(userid,password);\r\n        return this.http.post(`login`, { username: userid, password: password }).map(res => {\r\n            if (res.status === 400) {\r\n                this.router.navigate(['/signin']);\r\n                throw new Error(\"\" + res.status);\r\n            }\r\n            else {\r\n                this.sessionData = res.json().sessionData;\r\n                return res.json();\r\n            }\r\n        })\r\n    }\r\n\r\n    Signup(userid, password, type) {\r\n        return this.http.post(`register`, {userid:userid, password: password , type}).map(res => {\r\n           if (res.status == 400) {\r\n                this.router.navigate(['/signup']);\r\n                throw new Error(\"\"+res.status);\r\n            }\r\n            else {\r\n                return res.json();\r\n            }\r\n        });\r\n    }\r\n\r\n    getApplicantType(){\r\n        return this.http.get('getApplicantType').map(res =>{\r\n            if(res.status == 400){\r\n                throw new Error(\"400\");\r\n            }\r\n            else{\r\n                return res.json();\r\n            }\r\n        })\r\n    }\r\n\r\n    isSessionOpen() {\r\n        //console.log(\"isSession Open\");\r\n        return this.http.get(`isSessionOpen`).map(res => {\r\n            if (res.status !== 200)\r\n                throw new Error(\"Couldn't authenticate. Some Error Occured\" + res.status);\r\n            else {\r\n                var obj = res.json();\r\n                \r\n                if (obj.isSessionOpen === true) {\r\n                    this.isAuthenticated.next(true);\r\n                    this.sessionData = obj.sessionData;\r\n                    //console.log(this.sessionData);\r\n                    return true;\r\n                }\r\n                else {\r\n                    this.isAuthenticated.next(false);\r\n                    this.sessionData = null;\r\n                    return false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    SendOTP(phoneno){\r\n        console.log(\"SendOTP Auth\")\r\n       return this.http.post('sendOTP',{phoneno:phoneno}).map(res =>{\r\n            if(res.status == 400){\r\n                throw new Error(\"Couldn't Verify. Some Error Occured\" + res.status);\r\n            }\r\n            else{\r\n              return res.json();\r\n            }\r\n          })\r\n        }\r\n\r\n    VerifyOTP(otp, phoneno){\r\n        console.log(\"Verify OTP\")\r\n        return this.http.post('verifyOTP',{phoneno:phoneno, otp:otp}).map(res =>{\r\n             if(res.status == 400){\r\n                 throw new Error(\"Couldn't Verify. Some Error Occured\" + res.status);\r\n             }\r\n             else{\r\n               return res.json();\r\n             }\r\n           })\r\n    }\r\n    Logout() {\r\n        return this.http.get('logout').subscribe(obj => {\r\n            console.log(\"Logged out successfully\");\r\n            this.isAuthenticated.next(false);\r\n            this.router.navigate(['/signin']);\r\n        })\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/auth.service.ts","import { Http } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport * as _ from 'lodash';\r\nimport { map } from 'rxjs/operators/map';\r\n//import 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/observable';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { FormModel } from './form.model';\r\n\r\n@Injectable()\r\nexport class CustomFormService {\r\n    constructor(private router: Router, private http: Http) { }\r\n\r\n    GetFormControls() {\r\n        return this.http.get('getformcontrols').map(res => {\r\n            if (res.status === 400) {\r\n                throw new Error(\"Couldn't get form controls\");\r\n            }\r\n            else {\r\n                return res.json();\r\n            }\r\n        })\r\n    }\r\n\r\n    SaveForm(form: FormModel) {\r\n        return this.http.post('saveForm', form).map(res => {\r\n            if (res.status == 400) {\r\n                throw new Error(\"Couldn't Save Forms\");\r\n            }\r\n            else {\r\n                return res.json();\r\n            }\r\n        })\r\n    }\r\n\r\n    GetForm(type) {\r\n        //console.log(\"Get form\");\r\n        return this.http.post('getForm', { type }).map(res => {\r\n            if (res.status == 400) {\r\n                throw new Error(\"Couldn't Get Forms\");\r\n            }\r\n            else {\r\n                var obj = res.json();\r\n                if (!_.isEmpty(obj))\r\n                    return res.json();\r\n\r\n                return null;\r\n            }\r\n        });\r\n    }\r\n\r\n    GetAllForms() {\r\n        //console.log(\"Get form\");\r\n        return this.http.get('getAllForms').map(res => {\r\n            if (res.status == 400) {\r\n                throw new Error(\"Couldn't Get Forms\");\r\n            }\r\n            else {\r\n                var obj = res.json();\r\n                if (!_.isEmpty(obj))\r\n                    return res.json();\r\n\r\n                return null;\r\n            }\r\n        });\r\n    }\r\n\r\n    // GetAllApplicants(){\r\n    //     return this.http.get('getAllApplicants').map(res =>{\r\n    //         if(res.status == 400){\r\n    //             throw new Error(\"Couldn't Get Applicants List\");\r\n    //         }\r\n    //         else{\r\n    //             var obj = res.json();\r\n    //             return res.json();\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    GetAllApplicantsPersonalDetails(PersonalDetailsID) {\r\n        console.log(PersonalDetailsID);\r\n        return this.http.post('GetAllApplicantsPersonalDetails',{id:PersonalDetailsID}).map(res => {\r\n            if (res.status == 400) {\r\n                throw new Error(\"Couldn't Get Applicants List\");\r\n            }\r\n            else {\r\n                var obj = res.json();\r\n                return res.json();\r\n            }\r\n        });\r\n    }\r\n\r\n    SaveApplicantForm(ApplicantDetails) {\r\n        return this.http.post('saveApplicantData', ApplicantDetails).map(res => {\r\n            if (res.status == 400) {\r\n                throw new Error(\"Couldn't Get Forms\");\r\n            }\r\n            else {\r\n                var obj = res.json();\r\n                console.log(obj);\r\n\r\n                if (!_.isEmpty(obj))\r\n                    return res.json();\r\n\r\n                return null;\r\n            }\r\n        });\r\n    }\r\n\r\n    SaveTemplate(template) {\r\n        return this.http.post('saveTemplate', template).map(res => {\r\n            if (res.status == 400) {\r\n                throw new Error(\"Couldn't Save Template\");\r\n            }\r\n            else {\r\n                var obj = res.json();\r\n                console.log(obj);\r\n\r\n                if (!_.isEmpty(obj))\r\n                    return res.json();\r\n\r\n                return null;\r\n            }\r\n        });\r\n    }\r\n\r\n    GetAllTemplates(){\r\n        return this.http.get('getAllTemplates').map(res => {\r\n            if (res.status == 400) {\r\n                throw new Error(\"Couldn't Get Template\");\r\n            }\r\n            else {\r\n                var obj = res.json();\r\n                if (!_.isEmpty(obj))\r\n                    return res.json();\r\n\r\n                return null;\r\n            }\r\n        });\r\n    }\r\n\r\n    GetTemplatesByFormID(formID){\r\n        console.log(formID);\r\n        return this.http.post('getTemplatesByFormID', {formID}).map(res => {\r\n            if (res.status == 400) {\r\n                throw new Error(\"Couldn't Get Templates\");\r\n            }\r\n            else {\r\n                var obj = res.json();\r\n                if (!_.isEmpty(obj))\r\n                    return res.json();\r\n\r\n                return null;\r\n            }\r\n        });\r\n    }\r\n\r\n    GetApplicantProfile(_id) {\r\n        return this.http.post('getApplicantProfile', { _id }).map(res => {\r\n            if (res.status == 400) {\r\n                throw new Error(\"Couldn't Get Applicant\");\r\n            }\r\n            else {\r\n                var obj = res.json();\r\n                if (!_.isEmpty(obj))\r\n                    return res.json();\r\n\r\n                return null;\r\n            }\r\n        });\r\n    }\r\n\r\n    UpdateApplicantProfile(oldobj, newobj) {\r\n        return this.http.post('UpdateApplicantProfile', { oldobj, newobj }).map(res => {\r\n            if (res.status == 400) {\r\n                throw new Error(\"Couldn't Get Forms\");\r\n            }\r\n            else {\r\n                var obj = res.json();\r\n                console.log(obj);\r\n\r\n                if (!_.isEmpty(obj))\r\n                    return res.json();\r\n\r\n                return null;\r\n            }\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/custom-form.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 479\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-form/applicant-form.component.css\n// module id = 480\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-list/applicant-list.component.css\n// module id = 481\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-profile/applicant-profile.component.css\n// module id = 482\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/create-form/create-form.component.css\n// module id = 483\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/create-template/create-template.component.css\n// module id = 484\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = 485\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/preview-form/preview-form.component.css\n// module id = 486\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/view-forms/view-forms.component.css\n// module id = 487\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signin/signin.component.css\n// module id = 488\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signup/signup.component.css\n// module id = 489\n// module chunks = 1","module.exports = \"<div id=\\\"wrapper\\\">\\n  <div id=\\\"page-wrapper\\\" style=\\\"margin:100px\\\">\\n      <router-outlet></router-outlet>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 490\n// module chunks = 1","module.exports = \"<!--Empty Form-->\\r\\n<div *ngIf=\\\"!isApplicationFilled\\\">\\r\\n    <form (ngSubmit)=\\\"onSaveForm()\\\" [formGroup]=\\\"ProfileForm\\\">\\r\\n        <h3>{{FormTitle}}</h3>\\r\\n        <div formArrayName=\\\"customcontrols\\\" *ngFor=\\\"let currsection of ProfileForm.get('customcontrols').controls; let currsectionindex = index;\\\">\\r\\n            <h4>{{Sections[currsectionindex].SectionName}}</h4>\\r\\n            <span>\\r\\n                <a *ngIf=\\\"Sections[currsectionindex].CanBeMultiple\\\" (click)=\\\"AddSection(currsectionindex)\\\">+</a>\\r\\n            </span>\\r\\n\\r\\n            <div *ngFor=\\\"let subsection of currsection.controls; let subindex = index\\\" [formArrayName]=\\\"currsectionindex\\\">\\r\\n                <div *ngFor=\\\"let field of Sections[currsectionindex].Fields; let fieldindex = index\\\" [formGroupName]=\\\"subindex\\\">\\r\\n                    <div [ngSwitch]=\\\"field.FieldType\\\">\\r\\n                        <label>{{field.FieldName}}</label>\\r\\n\\r\\n                        <!-----------------------For Radio Button------------------>\\r\\n                        <div *ngSwitchCase=\\\"'Radio'\\\">\\r\\n                            <div *ngFor=\\\"let option of field.options;let optionindex = index\\\">\\r\\n                                {{option}}\\r\\n                                <input type=\\\"radio\\\" [formControlName]=\\\"fieldindex\\\" [value]=\\\"option\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <!-----------------------End Radio Button------------------>\\r\\n\\r\\n                        <!-----------------------For Checkbox Button------------------>\\r\\n                        <div *ngSwitchCase=\\\"'Checkbox'\\\">\\r\\n                            <div *ngFor=\\\"let option of field.options; let optionindex = index\\\" [formArrayName]=\\\"fieldindex\\\">\\r\\n                                {{option}}\\r\\n                                <input type=\\\"checkbox\\\" [formControlName]=\\\"optionindex\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <!-----------------------End Checkbox Button------------------>\\r\\n                        <!-----------------------For Textbox Button------------------>\\r\\n                        <div *ngSwitchCase=\\\"'Textbox'\\\" class=\\\"form-group\\\">\\r\\n                            <input type=\\\"text\\\" [formControlName]=\\\"fieldindex\\\">\\r\\n                        </div>\\r\\n                        <!----------------------End Textbox Button------------------>\\r\\n\\r\\n                        <!-----------------------For Paragraph Button------------------>\\r\\n                        <div *ngSwitchCase=\\\"'Textarea'\\\" class=\\\"form-group\\\">\\r\\n                            <textarea [formControlName]=\\\"fieldindex\\\"></textarea>\\r\\n                        </div>\\r\\n                        <!----------------------End Paragraph Button------------------>\\r\\n\\r\\n\\r\\n                        <!-----------------------For Dropbox Button------------------>\\r\\n                        <div *ngSwitchCase=\\\"'Dropdown'\\\" class=\\\"form-group\\\">\\r\\n                            <select [formControlName]=\\\"fieldindex\\\">\\r\\n                                <option selected disabled>Choose one</option>\\r\\n                                <option *ngFor=\\\"let option of field.options;\\\">{{option}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                        <!----------------------End Dropbox Button------------------>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <hr>\\r\\n        </div>\\r\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\r\\n    </form>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<div *ngIf=\\\"isApplicationFilled\\\">\\r\\n    <ul>\\r\\n        <div *ngFor=\\\"let currsection of Sections;let currsectionindex = index\\\">\\r\\n            <h4>{{Sections[currsectionindex].SectionName}}</h4>\\r\\n            <a (click)=\\\"EditField(currsectionindex)\\\">Edit</a>\\r\\n            <table class=\\\"table-bordered table-striped\\\">\\r\\n                <tr>\\r\\n                    <th *ngFor=\\\"let field of Sections[currsectionindex].Fields; let fieldindex = index\\\">{{field.FieldName}}</th>\\r\\n                </tr>\\r\\n\\r\\n                <tr *ngFor=\\\"let subsection of currsection.count|times; let subindex = index\\\">\\r\\n                    <td *ngFor=\\\"let field of Sections[currsectionindex].Fields; let fieldindex = index\\\">\\r\\n                        {{GetFieldValue(Sections[currsectionindex].SectionID,subindex,field.FieldID)}}\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n            <form *ngIf=\\\"Sections[currsectionindex].isEditMode\\\" (ngSubmit)=\\\"onSaveSection(currsectionindex)\\\" [formGroup]=\\\"ProfileForm\\\">\\r\\n\\r\\n                <div formArrayName=\\\"customcontrols\\\">\\r\\n                    <span>\\r\\n                        <a *ngIf=\\\"Sections[currsectionindex].CanBeMultiple\\\" (click)=\\\"AddSection(currsectionindex)\\\">Add Section</a>\\r\\n                    </span>\\r\\n\\r\\n                    <div *ngFor=\\\"let subsection of currsection.count|times; let subindex = index\\\" [formArrayName]=\\\"currsectionindex\\\">\\r\\n                        <span>\\r\\n                            <a (click)=\\\"RemoveSection(currsectionindex,subindex)\\\">Remove Section</a>\\r\\n                        </span>\\r\\n                        <div *ngFor=\\\"let field of Sections[currsectionindex].Fields; let fieldindex = index\\\" [formGroupName]=\\\"subindex\\\">\\r\\n                            <div [ngSwitch]=\\\"field.FieldType\\\">\\r\\n                                <label>{{field.FieldName}}</label>\\r\\n\\r\\n                                <!-----------------------For Radio Button------------------>\\r\\n                                <div *ngSwitchCase=\\\"'Radio'\\\">\\r\\n                                    <div *ngFor=\\\"let option of field.options;let optionindex = index\\\">\\r\\n                                        {{option}}\\r\\n                                        <input type=\\\"radio\\\" [formControlName]=\\\"fieldindex\\\" [value]=\\\"option\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <!-----------------------End Radio Button------------------>\\r\\n\\r\\n                                <!-----------------------For Checkbox Button------------------>\\r\\n                                <div *ngSwitchCase=\\\"'Checkbox'\\\">\\r\\n                                    <div *ngFor=\\\"let option of field.options; let optionindex = index\\\" [formArrayName]=\\\"fieldindex\\\">\\r\\n                                        {{option}}\\r\\n                                        <input type=\\\"checkbox\\\" [formControlName]=\\\"optionindex\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <!-----------------------End Checkbox Button------------------>\\r\\n                                <!-----------------------For Textbox Button------------------>\\r\\n                                <div *ngSwitchCase=\\\"'Textbox'\\\" class=\\\"form-group\\\">\\r\\n                                    <input type=\\\"text\\\" [formControlName]=\\\"fieldindex\\\">\\r\\n                                </div>\\r\\n                                <!----------------------End Textbox Button------------------>\\r\\n\\r\\n                                <!-----------------------For Paragraph Button------------------>\\r\\n                                <div *ngSwitchCase=\\\"'Textarea'\\\" class=\\\"form-group\\\">\\r\\n                                    <textarea [formControlName]=\\\"fieldindex\\\"></textarea>\\r\\n                                </div>\\r\\n                                <!----------------------End Paragraph Button------------------>\\r\\n\\r\\n\\r\\n                                <!-----------------------For Dropbox Button------------------>\\r\\n                                <div *ngSwitchCase=\\\"'Dropdown'\\\" class=\\\"form-group\\\">\\r\\n                                    <select [formControlName]=\\\"fieldindex\\\">\\r\\n                                        <option selected disabled>Choose one</option>\\r\\n                                        <option *ngFor=\\\"let option of field.options;\\\">{{option}}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                                <!----------------------End Dropbox Button------------------>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <hr>\\r\\n                </div>\\r\\n                <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\r\\n            </form>\\r\\n\\r\\n        </div>\\r\\n    </ul>\\r\\n</div>\\r\\n<!-- Profile Already Filled-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-form/applicant-form.component.html\n// module id = 491\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n  <h3>\\n    Applicant List\\n  </h3>\\n  <div class=\\\"col-md-2\\\">\\n    <ul>\\n      <li *ngFor=\\\"let item of ApplicantsDetails;let j=index\\\">\\n        <a (click)=\\\"OnSelectApplicantType(j)\\\">{{item.type}}</a>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"col-md-10\\\" *ngIf=\\\"SelectedType.count_applicants > 0\\\"><!---->\\n    <!-- <select [(ngModel)]=\\\"FilterType\\\">\\n      <option selected disabled>Choose one</option>\\n      <option *ngFor=\\\"let col of SelectedType.fields\\\">{{col.FieldName}}</option>\\n    </select> -->\\n\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"FilterText\\\">\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"OnSearch()\\\">Search</button>\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"OnClearSearch()\\\">Clear Search</button>\\n    <!-- <button class=\\\"btn btn-success\\\" (click)=\\\"ExportSelectedProfiles()\\\">Export to pdf</button> -->\\n    <!---When Filter Text is not empty show filtered results-->\\n    <table class=\\\"table table-striped table-bordered\\\">\\n      <tr>\\n        <th></th>\\n        <th *ngFor=\\\"let col of SelectedType.fields\\\">\\n          {{col.FieldName}}\\n        </th>\\n      </tr>\\n      <ng-container *ngFor=\\\"let applicant of SelectedType.applicants;let j=index\\\">\\n          <tr *ngIf=\\\"isApplicantFiltered[j]\\\">\\n              <input type=\\\"checkbox\\\" [checked]=\\\"isApplicantChecked[j]\\\" (change)=\\\"ToggleApplicantSelection(j)\\\">\\n              <td *ngFor=\\\"let col of SelectedType.fields\\\">\\n                {{applicant[col.FieldName]}}\\n              </td>\\n              <td><a [routerLink]=\\\"['../ViewProfile',applicant.applicantID]\\\">View Profile</a></td>\\n            </tr>\\n        <!-- <tr *ngIf=\\\"isApplicantFiltered[j]\\\">\\n          <input type=\\\"checkbox\\\" [checked]=\\\"isApplicantChecked[j]\\\" (change)=\\\"ToggleApplicantSelection(j)\\\">\\n          <td *ngFor=\\\"let col of SelectedType.fields | filterBy:userFilter\\\">\\n            {{applicant[\\\"Personal Details\\\"][0][col.FieldName]}}\\n          </td>\\n        </tr> -->\\n\\n        <!--PDF template-->\\n        <div [hidden]=true #ApplicantProfiles>\\n          <ul>\\n            <li *ngFor=\\\"let col of SelectedType.fields\\\">\\n              <label>{{col.FieldName}}:</label>{{applicant[col.FieldName]}}\\n            </li>\\n          </ul>\\n        </div>\\n      </ng-container>\\n    </table>\\n    <br>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-list/applicant-list.component.html\n// module id = 492\n// module chunks = 1","module.exports = \"<h3>{{Form.FormTitle}}</h3>\\n\\n<div #ApplicantProfile>\\n  <div *ngFor=\\\"let section of Form.Sections;let secindex = index\\\">\\n    <ng-container *ngIf=\\\"CheckedFieldCount(secindex) > 0\\\">\\n      <h4>{{section.SectionName}}</h4>\\n      <table class=\\\"table table-striped table-bordered\\\">\\n\\n        <tr>\\n          <ng-container *ngFor=\\\"let field of section.Fields;let findex = index\\\">\\n            <th *ngIf=\\\"field.isFieldChecked\\\">\\n              {{field.FieldName}}\\n            </th>\\n          </ng-container>\\n        </tr>\\n\\n        <tr *ngFor=\\\"let item of GetSectionCount(section.SectionID)|times; let count = index\\\">\\n          <ng-container *ngFor=\\\"let field of section.Fields;let findex = index\\\">\\n            <td *ngIf=\\\"field.isFieldChecked\\\">\\n              {{GetFieldValue(section.SectionID,count, field.FieldID)}}\\n            </td>\\n          </ng-container>\\n        </tr>\\n\\n      </table>\\n\\n      <br>\\n    </ng-container>\\n\\n  </div>\\n</div>\\n\\n<select (change)=\\\"OnSelectTemplate($event)\\\">\\n  <option selected>Form</option>\\n  <option *ngFor=\\\"let col of TemplateList;let j=index\\\">{{col.TemplateTitle}}</option>\\n</select>\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"PrintToPdf()\\\">Print</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-profile/applicant-profile.component.html\n// module id = 493\n// module chunks = 1","module.exports = \"<span>{{FormSuccessMessage}}</span><br>\\n<span>\\n  Form Title :\\n</span>\\n<input [(ngModel)]=\\\"SelectedForm.FormTitle\\\">\\n<br>\\n<span>\\n  Form Type :\\n</span>\\n<select id=\\\"type\\\" name=\\\"type\\\" [(ngModel)]=\\\"SelectedForm.FormType\\\" (change)=\\\"OnSelectFormType($event)\\\" required>\\n  <option *ngFor=\\\"let option of ApplicantType\\\" [ngValue]=\\\"option._id\\\" >{{option.type}}</option>\\n</select>\\n<br>\\n<a (click)=\\\"AddSection()\\\">Add Section</a>\\n<br>\\n<div *ngFor=\\\"let section of SelectedForm.Sections; let sectionindex = index\\\">\\n    <input [(ngModel)]=\\\"section.SectionName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    <div *ngFor=\\\"let item of section.Fields; let fieldindex = index;\\\">\\n        <div [ngSwitch]=\\\"item.FieldType\\\">\\n          <label>{{item.FieldType}}</label>\\n          <!-----------------------For Radio Button------------------>\\n          <div *ngSwitchCase=\\\"'Radio'\\\" class=\\\"form-group\\\">\\n            <input [(ngModel)]=\\\"item.FieldName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n            <ul>\\n              <li *ngFor=\\\"let option of item.options; let optionindex = index\\\">\\n                <input [value]=\\\"option\\\" (change)=\\\"OnOptionChange(sectionindex,fieldindex,$event.target.value,optionindex)\\\">\\n                <a (click)=\\\"RemoveOption(sectionindex,fieldindex,optionindex)\\\">X</a>\\n              </li>\\n            </ul>\\n            <a (click)=\\\"AddOption(sectionindex,fieldindex)\\\">Add Options</a>\\n            <a (click)=\\\"RemoveField(sectionindex,fieldindex)\\\">Remove Field</a>\\n          </div>\\n          <!-----------------------End Radio Button------------------>\\n    \\n          <!-----------------------For Checkbox Button------------------>\\n          <div *ngSwitchCase=\\\"'Checkbox'\\\" class=\\\"form-group\\\">\\n            <input [(ngModel)]=\\\"item.FieldName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n            <ul>\\n              <li *ngFor=\\\"let option of item.options; let optionindex = index\\\">\\n                <input [value]=\\\"option\\\" (change)=\\\"OnOptionChange(sectionindex,fieldindex,$event.target.value,optionindex)\\\">\\n                <a (click)=\\\"RemoveOption(sectionindex, fieldindex,optionindex)\\\">X</a>\\n              </li>\\n            </ul>\\n            <a (click)=\\\"AddOption(sectionindex,fieldindex)\\\">Add Options</a>\\n            <a (click)=\\\"RemoveField(sectionindex,fieldindex)\\\">Remove Field</a>\\n          </div>\\n          <!-----------------------End Checkbox Button------------------>\\n    \\n          <!-----------------------For Dropbox Button------------------>\\n          <div *ngSwitchCase=\\\"'Dropdown'\\\" class=\\\"dropdown\\\">\\n            <input [(ngModel)]=\\\"item.FieldName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\n            <ul>\\n              <li *ngFor=\\\"let option of item.options; let optionindex = index\\\">\\n                <input [value]=\\\"option\\\" (change)=\\\"OnOptionChange(sectionindex,fieldindex,$event.target.value,optionindex)\\\">\\n                <a (click)=\\\"RemoveOption(sectionindex,fieldindex,optionindex)\\\">X</a>\\n              </li>\\n            </ul>\\n            <a (click)=\\\"AddOption(sectionindex,fieldindex)\\\">Add Options</a>\\n            <a (click)=\\\"RemoveField(sectionindex,fieldindex)\\\">Remove Field</a>\\n          </div>\\n          <!----------------------End Dropbox Button------------------>\\n    \\n          <!-----------------------For Textbox Button------------------>\\n          <div *ngSwitchCase=\\\"'Textbox'\\\" class=\\\"form-group\\\">\\n            <input [(ngModel)]=\\\"item.FieldName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n            <a (click)=\\\"RemoveField(sectionindex,fieldindex)\\\">Remove Field</a>\\n          </div>\\n    \\n          <!----------------------End Textbox Button------------------>\\n    \\n          <!-----------------------For TextArea Button------------------>\\n          <div *ngSwitchCase=\\\"'Textarea'\\\" class=\\\"form-group\\\">\\n            <input [(ngModel)]=\\\"item.FieldName\\\" [value]=\\\"item.FieldName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n            <a (click)=\\\"RemoveField(sectionindex,fieldindex)\\\">Remove Field</a>\\n          </div>\\n          <!----------------------End TextArea Button------------------>\\n        </div>\\n      </div>\\n      <br>\\n      <table class=\\\"table-bordered table-condensed table-striped\\\">\\n          <tr>\\n            <td>Control Type</td>\\n            <td>Option Count</td>\\n            <td></td>\\n          </tr>\\n          <tr *ngFor=\\\"let control of controls\\\">\\n            <td>{{control.Type}}</td>\\n            <td *ngIf=\\\"!control.isMultipleOption\\\"></td>\\n            <td *ngIf=\\\"control.isMultipleOption\\\">\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"control.optionCount\\\">\\n            </td>\\n            <td>\\n              <a (click)=\\\"AddField(sectionindex,control)\\\">Add Field</a>\\n            </td>\\n          </tr>\\n        </table>\\n        <a (click)=\\\"RemoveSection(sectionindex)\\\">Remove Section</a>\\n        <br>\\n        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"section.CanBeMultiple\\\">Can be added Multiple Times.\\n</div>\\n<button class=\\\"btn btn-primary\\\" *ngIf=\\\"TotalSections>0\\\" (click)=\\\"OnSave()\\\" type=\\\"submit\\\">Save</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/create-form/create-form.component.html\n// module id = 494\n// module chunks = 1","module.exports = \"\\n<div class=\\\"col-md-2\\\">\\n  <ul>\\n    <li *ngFor=\\\"let item of TemplatesList;let j=index\\\">\\n      <a (click)=\\\"OnEditTemplate(j)\\\">{{item.TemplateTitle}}</a>\\n    </li>\\n  </ul>\\n  <a (click)=\\\"OnCreateTemplate()\\\">+ New Template</a>\\n</div>\\n\\n<div class=\\\"col-md-6\\\" *ngIf=\\\"createMode\\\">\\n  <select id=\\\"type\\\" name=\\\"type\\\"  (change)=\\\"OnSelectForm($event)\\\">\\n    <option *ngFor=\\\"let option of FormsList;let j=index\\\">\\n      {{option.FormTitle}}\\n    </option>\\n  </select>\\n  Template Title:\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"TemplateTitle\\\">\\n  <div *ngFor=\\\"let section of SelectedForm.Sections; let secindex= index\\\">\\n    {{section.SectionName}}<br>\\n\\n    <ng-container *ngFor=\\\"let field of section.Fields;let fieldindex=index\\\">\\n      <input type=\\\"checkbox\\\" [checked]=\\\"field.isFieldChecked\\\" (change)=\\\"ToggleFieldSelection(secindex,fieldindex)\\\">\\n      <label>{{field.FieldName}}<br></label>\\n    </ng-container>\\n    \\n    <hr>\\n  </div>\\n\\n  <button (click)=\\\"OnSaveTemplate()\\\" *ngIf=\\\"TotalFieldsChecked>0\\\">Save Template</button>\\n</div>\\n\\n<div class=\\\"col-md-4\\\" *ngIf=\\\"createMode\\\">{{TemplateTitle}}\\n  <div *ngFor=\\\"let section of SelectedForm.Sections;let secindex= index\\\">\\n    <ng-container *ngIf=\\\"CheckedFieldCount(secindex) > 0\\\">\\n        {{section.SectionName}}<br>\\n    </ng-container>\\n    <ng-container *ngFor=\\\"let field of section.Fields;let fieldindex=index\\\">\\n      <label *ngIf=\\\"field.isFieldChecked\\\">{{field.FieldName}}<br></label>\\n    </ng-container>\\n    <hr>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/create-template/create-template.component.html\n// module id = 495\n// module chunks = 1","module.exports = \"<div id=\\\"wrapper\\\">\\r\\n    <nav class=\\\"navbar navbar-default navbar-fixed-top\\\" role=\\\"navigation\\\" style=\\\"margin-bottom: 0\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n        </div>\\r\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n            <!-- <li routerLinkActive=\\\"active\\\" *ngIf=\\\"UserType == 'Admin'\\\">\\r\\n                    <a [routerLink]=\\\"['createform']\\\">Create Form</a>\\r\\n                </li> -->\\r\\n            <li routerLinkActive=\\\"active\\\" *ngIf=\\\"UserType == 'Admin'\\\">\\r\\n                <a [routerLink]=\\\"['forms']\\\">View Form</a>\\r\\n            </li>\\r\\n            <li routerLinkActive=\\\"active\\\" *ngIf=\\\"UserType == 'Admin'\\\">\\r\\n                <a [routerLink]=\\\"['applicants']\\\">Applicants</a>\\r\\n            </li>\\r\\n            <li routerLinkActive=\\\"active\\\" *ngIf=\\\"UserType == 'Admin'\\\">\\r\\n                <a [routerLink]=\\\"['templates']\\\">Templates</a>\\r\\n            </li>\\r\\n            <li routerLinkActive=\\\"active\\\" *ngIf=\\\"UserType != 'Admin'\\\">\\r\\n                <a [routerLink]=\\\"['profile']\\\">Profile</a>\\r\\n            </li>\\r\\n            <li>\\r\\n                <a style=\\\"cursor: pointer\\\" (click)=\\\"OnLogout()\\\">Logout</a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </nav>\\r\\n    <div id=\\\"page-wrapper\\\" style=\\\"margin:100px\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = 496\n// module chunks = 1","module.exports = \"    <h4>Preview</h4>\\n    <h4>{{SelectedForm.FormTitle}}</h4>\\n    <div *ngFor=\\\"let section of SelectedForm.Sections;\\\">\\n        {{section.SectionName}}\\n            <div *ngFor=\\\"let item of section.Fields;\\\">\\n                    <div [ngSwitch]=\\\"item.FieldType\\\">\\n                        <label>\\n                            {{item.FieldName}}\\n                        </label>\\n                       <!-----------------------For Radio Button------------------>\\n                       <div *ngSwitchCase=\\\"'Radio'\\\" class=\\\"form-group\\\">\\n                         <div *ngFor=\\\"let option of item.options; let j = index\\\" >\\n                             <!-- <label class=\\\"radio-inline\\\">{{option}}</label> -->\\n                             {{option}}\\n                             <input type=\\\"radio\\\" [value]=\\\"option\\\">\\n                            </div>\\n                       </div>\\n                       <!-----------------------End Radio Button------------------>\\n                 \\n                       <!-----------------------For Checkbox Button------------------>\\n                       <div *ngSwitchCase=\\\"'Checkbox'\\\">\\n                           <div *ngFor=\\\"let option of item.options; let j = index\\\">\\n                             {{option}}\\n                               <input type=\\\"checkbox\\\">\\n                           </div>\\n                       </div>\\n                       <!-----------------------End Checkbox Button------------------>\\n                 \\n                       <!-----------------------For Textbox Button------------------>\\n                       <div *ngSwitchCase=\\\"'Textbox'\\\" class=\\\"form-group\\\">\\n                           <input type=\\\"text\\\"/>\\n                       </div>\\n                       <!----------------------End Textbox Button------------------>\\n                 \\n                       <!-----------------------For Paragraph Button------------------>\\n                       <div *ngSwitchCase=\\\"'Textarea'\\\" class=\\\"form-group\\\">\\n                           <textarea></textarea>\\n                       </div>\\n                       <!----------------------End Paragraph Button------------------>\\n                 \\n                       <!-----------------------For Dropbox Button------------------>\\n                       <div *ngSwitchCase=\\\"'Dropdown'\\\" class=\\\"form-group\\\">\\n                           <select>\\n                               <option selected disabled>Choose one</option>\\n                             <option *ngFor=\\\"let option of item.options;let j=index\\\">{{option}}</option>\\n                           </select>\\n                       </div>\\n                        <!----------------------End Dropbox Button------------------>\\n                     </div>\\n                   </div><hr>\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/preview-form/preview-form.component.html\n// module id = 497\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-2\\\">\\n      <ul>\\n        Forms List\\n        <li *ngFor=\\\"let option of FormsList; let j=index\\\"><a (click) =\\\"OnSelectForm(j)\\\">{{option.FormTitle}}</a></li>\\n      </ul>\\n      <a (click)=\\\"CreateNewForm()\\\">+ New Form</a>\\n    </div>\\n\\n    <div class=\\\"col-xs-6\\\" *ngIf=\\\"isSelected\\\" >\\n        <app-create-form [SelectedForm]=\\\"SelectedForm\\\"  (FormSaved)=\\\"OnSaveForm($event)\\\"></app-create-form>\\n    </div>\\n    \\n    <div class=\\\"col-xs-4\\\" *ngIf=\\\"isSelected\\\" >\\n            <app-preview-form [SelectedForm]=\\\"SelectedForm\\\"></app-preview-form>\\n        </div>\\n     \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/view-forms/view-forms.component.html\n// module id = 498\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\r\\n      <span class=\\\"help-block\\\" >{{message}}</span>\\r\\n      <form (ngSubmit)=\\\"OnSignIn(f)\\\" #f=\\\"ngForm\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"userid\\\">Phone No.</label>\\r\\n            <input type=\\\"userid\\\" \\r\\n                     id=\\\"userid\\\" \\r\\n                     class=\\\"form-control\\\" \\r\\n                     ngModel \\r\\n                     name=\\\"userid\\\"\\r\\n                     required\\r\\n                     #userid = \\\"ngModel\\\"> <!-- Just like ngForm ngModel also gives information about control-->\\r\\n            <span class=\\\"help-block\\\" *ngIf=\\\"!userid.valid && userid.touched\\\">Phone No. is invalid</span>\\r\\n           \\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"password\\\">Password</label>\\r\\n            <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" ngModel required #password = \\\"ngModel\\\">\\r\\n            <span class=\\\"help-block\\\" *ngIf=\\\"!password.valid && password.touched\\\" >Password is required</span>\\r\\n  </div>\\r\\n  <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!f.valid && f.touched\\\" type=\\\"submit\\\">Sign In</button>\\r\\n  <button class=\\\"btn btn-default\\\" (click) = \\\"GoToSignup()\\\" type=\\\"button\\\">New User? Sign up</button>\\r\\n  </form>\\r\\n  </div>\\r\\n</div>\\r\\n<!--Email Pattern check pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signin/signin.component.html\n// module id = 499\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\r\\n      <span class=\\\"help-block\\\" >{{message}}</span>\\r\\n        <form (ngSubmit)=\\\"OnSignUp(f)\\\" #f=\\\"ngForm\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"userid\\\">Phone No</label>\\r\\n              <input type=\\\"userid\\\" \\r\\n                       id=\\\"userid\\\" \\r\\n                       class=\\\"form-control\\\" \\r\\n                       name=\\\"userid\\\"\\r\\n                       required\\r\\n                       [(ngModel)]=\\\"phoneno\\\"\\r\\n                       #userid = \\\"ngModel\\\"> <!-- Just like ngForm ngModel also gives information about control-->\\r\\n              <span class=\\\"help-block\\\" *ngIf=\\\"!userid.valid && userid.touched\\\">Phone No. is invalid</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\" *ngIf=\\\"isSMSSent\\\">\\r\\n                <label for=\\\"otp\\\">OTP</label>\\r\\n                  <input type=\\\"text\\\" \\r\\n                           id=\\\"otp\\\" \\r\\n                           class=\\\"form-control\\\" \\r\\n                           name=\\\"otp\\\"\\r\\n                           required\\r\\n                           [(ngModel)]=\\\"otptext\\\"\\r\\n                           #otp = \\\"ngModel\\\"> <!-- Just like ngForm ngModel also gives information about control-->\\r\\n                  <span class=\\\"help-block\\\" *ngIf=\\\"!otp.valid && otp.touched\\\">OTP is invalid</span>\\r\\n                </div>\\r\\n            \\r\\n\\r\\n              <button class=\\\"btn btn-warning\\\" *ngIf=\\\"!isSMSSent\\\" (click)=\\\"SendOTP()\\\" type='button'>Continue</button>\\r\\n              <button class=\\\"btn btn-warning\\\" *ngIf=\\\"isSMSSent && !isPhoneVerified\\\" (click)=\\\"VerifyOTP()\\\" type='button'>Verify OTP</button>\\r\\n            \\r\\n            <div class=\\\"form-group\\\" *ngIf=\\\"isPhoneVerified\\\">\\r\\n              <label for=\\\"type\\\">Type\\r\\n                <select id=\\\"type\\\" name=\\\"type\\\" ngModel required>\\r\\n                    <option selected disabled>Choose one</option>\\r\\n                    <option *ngFor=\\\"let option of ApplicantType;let j=index\\\" [ngValue]=\\\"option._id\\\">{{option.type}}</option>\\r\\n                </select></label>\\r\\n              <label for=\\\"password\\\">Password</label>\\r\\n              <input type=\\\"password\\\" minlength=\\\"6\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" ngModel required #password = \\\"ngModel\\\">\\r\\n              <span class=\\\"help-block\\\" *ngIf=\\\"!password.valid && password.touched\\\" >Password is invalid</span>\\r\\n              <span class=\\\"help-block\\\" *ngIf=\\\"password.errors?.minlength && password.touched\\\">Password must be atleast 6 characters long</span>\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-primary\\\" *ngIf=\\\"isPhoneVerified\\\" [disabled]=\\\"!f.valid && f.touched\\\" type=\\\"submit\\\">Sign Up</button>\\r\\n            <button class=\\\"btn btn-default\\\" (click)=\\\"OnLoginPage()\\\" type='button'>Already have an account? Log in</button>\\r\\n          </form>\\r\\n    </div>\\r\\n</div>\\r\\n  <!-- pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signup/signup.component.html\n// module id = 500\n// module chunks = 1","import { SectionModel } from \"./Section.model\";\r\n\r\nexport class FormModel{\r\n    _id:string;\r\n    FormType:string;\r\n    FormTypeName:string;\r\n    FormTitle:string;\r\n    Sections: SectionModel[];\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/form.model.ts"],"sourceRoot":""}
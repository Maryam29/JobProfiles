{"version":3,"sources":["webpack:///./src/app/home/custom-list.service.ts","webpack:///./src/$_gendir async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/home/Keys.pipe.ts","webpack:///./src/app/home/Times.pipe.ts","webpack:///./src/app/home/applicant-form/applicant-form.component.ts","webpack:///./src/app/home/applicant-list/applicant-list.component.ts","webpack:///./src/app/home/applicant-profile/applicant-profile.component.ts","webpack:///./src/app/home/create-form/create-form.component.ts","webpack:///./src/app/home/create-template/create-template.component.ts","webpack:///./src/app/home/field.model.ts","webpack:///./src/app/home/form-control.model.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/preview-form/preview-form.component.ts","webpack:///./src/app/home/section.model.ts","webpack:///./src/app/home/view-forms/view-forms.component.ts","webpack:///./src/app/signin/signin.component.ts","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/home/custom-form.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/home/applicant-form/applicant-form.component.css","webpack:///./src/app/home/applicant-list/applicant-list.component.css","webpack:///./src/app/home/applicant-profile/applicant-profile.component.css","webpack:///./src/app/home/create-form/create-form.component.css","webpack:///./src/app/home/create-template/create-template.component.css","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/preview-form/preview-form.component.css","webpack:///./src/app/home/view-forms/view-forms.component.css","webpack:///./src/app/signin/signin.component.css","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/home/applicant-form/applicant-form.component.html","webpack:///./src/app/home/applicant-list/applicant-list.component.html","webpack:///./src/app/home/applicant-profile/applicant-profile.component.html","webpack:///./src/app/home/create-form/create-form.component.html","webpack:///./src/app/home/create-template/create-template.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/preview-form/preview-form.component.html","webpack:///./src/app/home/view-forms/view-forms.component.html","webpack:///./src/app/signin/signin.component.html","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/home/form.model.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CustomListService {\n    countries: any[] = new Array();\n    companytypes: any[] = new Array();\n    constructor() { }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/custom-list.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 299;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir async\n// module id = 299\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Job Portal';\n  IsAuthenticated = false;\n  constructor(private AuthService:  AuthService) {}\n\n  ngOnInit() {\n    // console.log(\"Nginit app compo\");\n    this.AuthService.isAuthenticated.subscribe((isauth) => {\n      // console.log(\"Set Is Authenticated\");\n      this.IsAuthenticated = isauth;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FilterPipeModule } from 'ngx-filter-pipe';\n\nimport { AuthGuard } from './auth/auth-guard.service';\nimport { AuthService } from './auth/auth.service';\nimport { CustomFormService } from './home/custom-form.service';\nimport { CustomListService } from './home/custom-list.service';\n\nimport { AppComponent } from './app.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { CreateFormComponent } from './home/create-form/create-form.component';\nimport { CreateTemplateComponent } from './home/create-template/create-template.component';\nimport { ApplicantFormComponent } from './home/applicant-form/applicant-form.component';\nimport { ViewFormsComponent } from './home/view-forms/view-forms.component';\nimport { ApplicantListComponent } from './home/applicant-list/applicant-list.component';\nimport { PreviewFormComponent } from './home/preview-form/preview-form.component';\nimport { ApplicantProfileComponent } from './home/applicant-profile/applicant-profile.component';\nimport {FileUploadModule} from 'ng2-file-upload';\n\nimport { KeysPipe } from './home/Keys.pipe';\nimport { TimesPipe } from './home/Times.pipe';\n\nconst appRoutes: Routes = [\n  { path: 'signin', component: SigninComponent},\n  { path: 'signup', component: SignupComponent},\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard], children: [\n    // { path: 'createform', component: CreateFormComponent, canActivate:[AuthGuard]},\n    { path: 'forms', component: ViewFormsComponent, canActivate: [AuthGuard]},\n    { path: 'applicants', component: ApplicantListComponent, canActivate: [AuthGuard]},\n    { path: 'profile', component: ApplicantFormComponent, canActivate: [AuthGuard]},\n    { path: 'ViewProfile/:id', component: ApplicantProfileComponent, canActivate: [AuthGuard]},\n    { path: 'templates', component: CreateTemplateComponent, canActivate: [AuthGuard]}\n]},\n  { path: '**', redirectTo: '/home', pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SigninComponent,\n    HomeComponent,\n    SignupComponent,\n    CreateFormComponent,\n    ApplicantFormComponent,\n    ViewFormsComponent,\n    ApplicantListComponent,\n    PreviewFormComponent,\n    CreateTemplateComponent,\n    ApplicantProfileComponent,\n    KeysPipe,\n    TimesPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    ReactiveFormsModule,\n    FilterPipeModule,\n    FileUploadModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [AuthService, AuthGuard, CustomFormService, CustomListService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { CanActivate, CanLoad, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route, ActivatedRoute } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/observable';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate, CanLoad {\n\n    constructor(private route: ActivatedRoute, private router: Router, private authService: AuthService) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean>|boolean {\n    // return true;\n    //  2.) If token is not set, which means a new tab is opened, then check the node server if session is still open. \n    // if open then take action similar to 1, ese redirect to sigin page\n    //     console.log(\"Check for session\");\n        return this.authService.isSessionOpen().take(1).map(obj => {\n            // console.log(obj);\n            if (obj === true) {\n                return obj;\n            } else {\n                this.router.navigate(['/signin']);\n                return obj;\n            }\n        }\n        );\n    }\n\n    canLoad(route: Route) {\n        return true;\n        // if(this.authService.isAuthenticated()){\n        //     return true;\n        // }\n        // else\n        // {\n        //     this.router.navigate(['/signin']);\n        // }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/auth-guard.service.ts","import { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe(\n    {name: 'keys'}\n)\nexport class KeysPipe implements PipeTransform {\n  transform(value): any {\n    const keys = [];\n    for(let key in value){\n        keys.push({key: key, value: value[key]});\n    }\n    return keys;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/Keys.pipe.ts","import { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe(\n    {name: 'times'}\n)\nexport class TimesPipe implements PipeTransform {\n  transform(value): any {\n    return (new Array(value)).fill(1);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/Times.pipe.ts","import { Component, OnInit } from '@angular/core';\nimport { CustomFormService } from '../custom-form.service';\nimport { CustomListService } from '../custom-list.service';\nimport { AuthService } from '../../auth/auth.service';\nimport { FormControl, FormGroup, Validators, FormArray, FormBuilder } from '@angular/forms';\nimport { concat } from 'rxjs/operator/concat';\nimport { SectionModel } from '../Section.model';\nimport { FormModel } from '../form.model';\nimport { FileSelectDirective, FileUploader} from 'ng2-file-upload';\n\n// const URL = 'http://akdesign.in/dev/apiurl/filereciever.php';\nconst URL = 'http://localhost:3000/file';\n\n@Component({\n    selector: 'app-applicant-form',\n    templateUrl: './applicant-form.component.html',\n    styleUrls: ['./applicant-form.component.css']\n})\n\nexport class ApplicantFormComponent implements OnInit {\n    uploader: FileUploader = new FileUploader({\n    url: URL,\n    isHTML5: true\n  });\n    public hasBaseDropZoneOver = false;\n    public hasAnotherDropZoneOver = false;\n    type: string;\n    isApplicationFilled: boolean;\n    fieldcount: number;\n    FormFields = new Array();\n    // Actual Form with Subsections also included.\n    // This Form is added as same section's different subsection can have different field options.\n    // True for cases like Country->State. With different country selected diff. states list in 2 sub-sections but same section\n    FormLayout;\n    ProfileForm: FormGroup; // Angular Reactive Form.\n    FormTitle: string;\n    sessionData;\n    ProfileDetails;   // This has filled Applicant Data fetched from DB.\n    ActualForm: FormModel; // Actual Form created by Admin for specific Aplicant Type.\n    isSelected: any[];\n    isFormSaved = 0;\n    isFormLoaded = false;  // It checks whether in the begining Empty or Filled Form is loaded\n    // When Form is partially filled.0: form in no-edit state, 1: Changes Saved, -1: Changes not saved due to error,2:in edit/remove/add\n    constructor(private customFormService: CustomFormService, private authService: AuthService,\n        private fb: FormBuilder, private customListService: CustomListService) { }\n\n    ngOnInit() {\n        // console.log(this.authService.sessionData);\n        this.sessionData = this.authService.sessionData;\n        this.type = this.sessionData.type;\n        this.ProfileForm = this.fb.group({\n            customcontrols: new FormArray([])\n        });\n        this.GetApplicantProfile();\n        this.GetAllList();\n    }\n    public fileOverBase(e:any):void {\n        this.hasBaseDropZoneOver = e;\n    }\n     \n    public fileOverAnother(e:any):void {\n       this.hasAnotherDropZoneOver = e;\n    }\n\n    GetApplicantProfile() {\n        this.customFormService.GetApplicantProfile(this.sessionData._id).subscribe((obj) => {\n            if (obj) {\n                this.isApplicationFilled = true;\n                this.ProfileDetails = obj;\n                this.CreateForm();\n            }else {\n                this.isApplicationFilled = false;\n                console.log(this.type);\n                this.CreateEmptyForm();\n            }\n        });\n    }\n\n    GetAllList() {\n        if (this.customListService.countries.length === 0) {\n            this.customFormService.getCountries().subscribe(obj => {\n                this.customListService.countries = obj;\n            });\n        }\n        if (this.customListService.companytypes.length === 0) {\n            this.customFormService.getCompanyTypes().subscribe(obj => {\n                this.customListService.companytypes = obj;\n            });\n        }\n    }\n\n    GetFieldValue(SectionIndex, subindex, FieldIndex) {\n        const FieldType = this.FormLayout.Sections[SectionIndex][subindex].Fields[FieldIndex].FieldType.toString();\n        const FormAllSections = this.ProfileForm.get('customcontrols') as FormArray;\n        const FormValues = FormAllSections.value;\n        let result = '';\n        if (FieldType === 'Checkbox') {\n            const checkboxarray = FormValues[SectionIndex][subindex][FieldIndex];\n            for (let i = 0; i < checkboxarray.length; i++) {\n                if (checkboxarray[i]) {\n                    result = result + this.FormLayout.Sections[SectionIndex][subindex].Fields[FieldIndex].options[i] + ' ';\n                }\n            }\n            return result;\n        }else {\n            return FormValues[SectionIndex][subindex][FieldIndex];\n        }\n    }\n\n    // ----------------For Checkbox---------------//\n    checkOptionInProfile(sectionid, subsectionindex, option, fieldid) {\n        if (this.ProfileDetails[sectionid][subsectionindex][fieldid] &&\n            this.ProfileDetails[sectionid][subsectionindex][fieldid].length > 0) {\n            return this.ProfileDetails[sectionid][subsectionindex][fieldid].includes(option);\n        }else {\n            return false;\n        }\n    }\n\n    onSelectParent(sectionindex, subindex, fieldindex, value) {\n\n        const currFieldId = this.FormLayout.Sections[sectionindex][subindex].Fields[fieldindex].FieldID.toString();\n        const FieldType = this.FormLayout.Sections[sectionindex][subindex].Fields[fieldindex].FieldType.toString();\n        const currSectionId = this.FormLayout.Sections[sectionindex][subindex].SectionID.toString();\n        const ParentSectionId = this.FormLayout.Sections[sectionindex][subindex].Fields[fieldindex].ParentField.SectionID;\n        const ParentFieldId = this.FormLayout.Sections[sectionindex][subindex].Fields[fieldindex].ParentField.FieldID;\n        let suboptions;\n        let ParentValue;\n\n\n        const FormAllSections = this.ProfileForm.get('customcontrols') as FormArray;\n        const FormValues = FormAllSections.value;\n        // console.log(FormValues);\n\n        const ParentSectionIndex = this.ActualForm.Sections\n                                                    .findIndex(sec => sec.SectionID.toString() === ParentSectionId);\n\n        if (ParentSectionIndex !== -1) {\n            const ParentSection = this.FormLayout.Sections[ParentSectionIndex][subindex];\n            const ParentFieldIndex = ParentSection.Fields.findIndex(field => field.FieldID.toString() === ParentFieldId);\n            const ParentField = ParentSection.Fields[ParentFieldIndex];\n              if (ParentField) {\n                  // Taking Parent value from same sub-section\n                ParentValue = FormValues[ParentSectionIndex][subindex][ParentFieldIndex];\n              }\n        }\n        // get sub-options for selected Parent ( for eg: list of states if country selected is India)\n\n        if (FieldType === 'Country') {\n            if (this.customListService.countries.length > 0) {\n                const country = this.customListService.countries.find(c => c.CountryName === value);\n                suboptions = country.States;\n            }\n        }\n        if (FieldType === 'State') {\n            if (this.customListService.countries.length > 0) {\n                const type = this.customListService.countries.find(c =>\n                    c.CountryName === ParentValue\n                );\n                const States = type.States.find(c => c.StateName === value);\n                if (States) {\n                    suboptions = States.Cities;\n                }\n            }\n        }\n\n        if (FieldType === 'Type') {\n            if (this.customListService.companytypes.length > 0) {\n                const type = this.customListService.companytypes.find(c => c.name === value);\n                suboptions = type.InstallationType;\n            }\n        }\n        if (FieldType === 'InstallationType') {\n            if (this.customListService.companytypes.length > 0) {\n                const type = this.customListService.companytypes.find(c =>\n                    c.name === ParentValue\n                );\n                const InstallationType = type.InstallationType.find(c => c.name === value);\n                if (InstallationType) {\n                    suboptions = InstallationType.Designation;\n                }\n            }\n        }\n\n       // Get dependent fields\n       const DepedentFields = this.FormLayout.Sections[sectionindex][subindex].Fields[fieldindex].DependentFieldList;\n       for (let i = 0; i < DepedentFields.length; i++) {\n\n        const DependentSectionId = DepedentFields[i].SectionID.toString();\n        const DependentFieldId = DepedentFields[i].FieldID.toString();\n\n        // Search for dependent SectionId and FieldId in all Sections. when found remove currfield from its parent field List\n        const DependentSectionIndex = this.ActualForm.Sections\n                                                .findIndex(sec => sec.SectionID.toString() === DependentSectionId);\n\n        if (DependentSectionIndex !== -1) {\n            const DependentSection = this.FormLayout.Sections[DependentSectionIndex][subindex];\n          const DependentField = DependentSection.Fields.find(field => field.FieldID.toString() === DependentFieldId);\n          if (DependentField) {\n            // Update Field.options\n            DependentField.options = suboptions;\n          }\n        }\n        }\n    }\n\n    GetAllCountries(sectionindex, subsectionindex, fieldindex, Formfields: FormGroup) {\n        // ------------------- If countries is never fetched------------//\n        if (this.customListService.countries.length === 0) {\n            this.customFormService.getCountries().subscribe(obj => {\n                this.customListService.countries = obj;\n                const field =  this.FormLayout.Sections[sectionindex][subsectionindex].Fields[fieldindex];\n                field.options = this.customListService.countries;\n                this.PushOptions(sectionindex, subsectionindex, fieldindex, Formfields, field);\n            });\n        }else {\n            const field =  this.FormLayout.Sections[sectionindex][subsectionindex].Fields[fieldindex];\n            field.options = this.customListService.countries;\n            this.PushOptions(sectionindex, subsectionindex, fieldindex, Formfields, field);\n        }\n    }\n\n    GetAllCompanyType(sectionindex, subsectionindex, fieldindex, Formfields: FormGroup) {\n        // ------------------- If company Types is never fetched------------//\n        if (this.customListService.companytypes.length === 0) {\n            this.customFormService.getCompanyTypes().subscribe(obj => {\n                this.customListService.companytypes = obj;\n                const field =  this.FormLayout.Sections[sectionindex][subsectionindex].Fields[fieldindex];\n                field.options = this.customListService.companytypes;\n                this.PushOptions(sectionindex, subsectionindex, fieldindex, Formfields, field);\n            });\n        }else {\n            const field =  this.FormLayout.Sections[sectionindex][subsectionindex].Fields[fieldindex];\n            field.options = this.customListService.companytypes;\n            this.PushOptions(sectionindex, subsectionindex, fieldindex, Formfields, field);\n        }\n    }\n\n    PushOptions(sectionindex, subsectionindex, fieldindex, Formfields: FormGroup, field) {\n        let newcontrol;\n\n        // If Partially-Filled/ fully Filled form is already present in DB\n        if (this.ProfileDetails != null) {\n            const existingdetails = this.ProfileDetails[this.FormLayout.Sections[sectionindex][subsectionindex].SectionID];\n            // console.log(fields.options);\n            let isSectionDetailAvailable = false;\n            if (existingdetails && existingdetails.length > 0) {\n                isSectionDetailAvailable = true;\n            }\n            if (isSectionDetailAvailable) { // ------If the Corresponding section is available in Applicant Form -----//\n                const val = existingdetails[subsectionindex][field.FieldID];\n                if (val) { // ------If the Corresponding field is available in Applicant Form -----//\n                    newcontrol = new FormControl(val, Validators.required);\n                }else {\n                    newcontrol = new FormControl(null, Validators.required);\n                }\n            }else {\n                newcontrol = new FormControl(null, Validators.required);\n            }\n        }else {\n            newcontrol = new FormControl(null, Validators.required);\n        }\n\n        // const FormAllSections = this.ProfileForm.get('customcontrols') as FormArray;\n        // const Formfields = new FormGroup({});\n        Formfields.addControl(fieldindex.toString(), newcontrol); // Adds new Control to Form Fields\n        // Formcurrsection.insert(subsectionindex, Formfields);  // Adds Form Fields to FormcurrSection\n        // FormAllSections.insert(sectionindex, Formcurrsection); // Adds FormCurrSection to FormAllSection\n        // console.log(FormAllSections);\n    }\n\n    CreateForm() {\n        this.customFormService.GetForm(this.type).subscribe((obj) => {\n            this.FormLayout = new Object();\n            this.FormLayout.Sections = new Array();\n\n            if (obj) {\n                this.ActualForm = obj;\n                this.FormTitle = obj.FormTitle;\n                const FormAllSections = this.ProfileForm.get('customcontrols') as FormArray;\n\n                for (let i = 0; i < obj.Sections.length; i++) {\n\n                    const currsection = JSON.parse(JSON.stringify(obj.Sections[i])); // To do Deep Copy\n                    const existingdetails = this.ProfileDetails[obj.Sections[i].SectionID];\n                    let isSectionDetailAvailable = false;\n\n                    if (existingdetails && existingdetails.length > 0) {\n                        currsection.count = existingdetails.length;\n                        isSectionDetailAvailable = true;\n                    }else {\n                        currsection.count = 1;\n                    }\n                    this.FormLayout.Sections[i] = new Array();\n                    const fields = currsection.Fields;\n                    currsection.isEditMode = false;\n\n                    const Formcurrsection = new FormArray([]);\n                    for (let j = 0; j < currsection.count; j++) {\n\n                        const subsection = JSON.parse(JSON.stringify(currsection));\n                        this.FormLayout.Sections[i].push(subsection); // To do Deep Copy\n\n                        const Formfields = new FormGroup({});\n\n                        for (let findex = 0; findex < fields.length; findex++) {\n                            // Get Countries List if Country type\n\n                            if (fields[findex].FieldType === 'Country') {\n                                // FormSectionIndex, FormCurresectionIndex, fieldindex\n                                this.GetAllCountries(i, j, findex, Formfields);\n                            }else if (fields[findex].FieldType === 'Type') {\n                                // FormSectionIndex, FormCurresectionIndex, fieldindex\n                                this.GetAllCompanyType(i, j, findex, Formfields);\n                            }else if (fields[findex].FieldType === 'Checkbox') {\n                                const checkboxoptionArray = new FormArray([]);\n\n                                for (let count = 0; count < fields[findex].options.length; count++) {\n                                    const option = fields[findex].options[count];\n                                    let optioncontrol;\n\n                                    if (isSectionDetailAvailable) {\n                                        if (this.checkOptionInProfile(obj.Sections[i].SectionID, j, option, fields[findex].FieldID)) {\n                                            optioncontrol = new FormControl(true, Validators.required);\n                                        }else {\n                                            optioncontrol = new FormControl(false, Validators.required);\n                                        }\n                                    }else {\n                                        optioncontrol = new FormControl(false, Validators.required);\n                                    }\n                                    checkboxoptionArray.push(optioncontrol);\n                                }\n                                Formfields.addControl(findex.toString(), checkboxoptionArray);\n                            }else {\n                                let newcontrol;\n                                if (isSectionDetailAvailable) {\n                                    const val = existingdetails[j][fields[findex].FieldID];\n                                    if (val) {\n                                        newcontrol = new FormControl(val, Validators.required);\n                                    }else {\n                                        newcontrol = new FormControl(null, Validators.required);\n                                    }\n                                }else {\n                                    newcontrol = new FormControl(null, Validators.required);\n                                }\n                                Formfields.addControl(findex.toString(), newcontrol);\n                            }\n                        }\n                        // console.log(j);\n                        Formcurrsection.push(Formfields);\n                    }\n                    FormAllSections.push(Formcurrsection);\n                }\n               // console.log(FormAllSections);\n               // console.log(this.FormLayout);\n            }\n            this.isFormLoaded = true;\n        });\n    }\n\n    CreateEmptyForm() {\n        // console.log(this.type);\n        this.customFormService.GetForm(this.type).subscribe((obj) => {\n            this.FormLayout = new Object();\n            this.FormLayout.Sections = new Array();\n            if (obj) {\n                this.ActualForm = obj;\n                this.FormTitle = obj.FormTitle;\n                const FormAllSections = this.ProfileForm.get('customcontrols') as FormArray;\n\n                for (let i = 0; i < obj.Sections.length; i++) {\n\n                    const currsection = JSON.parse(JSON.stringify(obj.Sections[i])); // To do Deep Copy\n                    // console.log(JSON.stringify(obj.Sections[i]));\n\n                    currsection.isEditMode = false;\n                    currsection.count = 1;\n                    // Each Section is an Array of Sub section. Initially in an Empty form Section has only 1 SubSection //\n                    this.FormLayout.Sections[i] = new Array();\n                    const fields = currsection.Fields;\n\n                    const Formcurrsection = new FormArray([]);\n                    for (let j = 0; j < currsection.count; j++) {\n                        this.FormLayout.Sections[i].push(currsection);\n                        const Formfields = new FormGroup({});\n\n                        for (let findex = 0; findex < fields.length; findex++) {\n                            if (fields[findex].FieldType === 'Country') {\n\n                                this.GetAllCountries(i, j, findex, Formfields);\n                                const newcontrol = new FormControl(null, Validators.required);\n                                Formfields.addControl(findex.toString(), newcontrol);\n\n                            }else if (fields[findex].FieldType === 'Type') {\n\n                                this.GetAllCompanyType(i, j, findex, Formfields);\n                                const newcontrol = new FormControl(null, Validators.required);\n                                Formfields.addControl(findex.toString(), newcontrol);\n\n                            }else if (fields[findex].FieldType === 'Checkbox') {\n                                const checkboxoptionArray = new FormArray([]);\n\n                                for (let count = 0; count < fields[findex].options.length; count++) {\n                                    const option = fields[findex].options[count];\n                                    let optioncontrol;\n                                    optioncontrol = new FormControl(false, Validators.required);\n\n                                    checkboxoptionArray.push(optioncontrol);\n                                }\n                                Formfields.addControl(findex.toString(), checkboxoptionArray);\n                            }else {\n                                const newcontrol = new FormControl(null, Validators.required);\n                                Formfields.addControl(findex.toString(), newcontrol);\n                            }\n                        }\n                        Formcurrsection.push(Formfields);\n                    }\n                    FormAllSections.push(Formcurrsection);\n                    // console.log(FormAllSections);\n                }\n            }\n            this.isFormLoaded = true;\n        });\n    }\n\n    AddSubSection(currsectionindex) {\n        const currsection = this.FormLayout.Sections[currsectionindex][0];\n        const newSubSection = JSON.parse(JSON.stringify(currsection));\n        newSubSection.isEditMode = true;\n        const fields = currsection.Fields;\n\n        const FormAllSections = this.ProfileForm.get('customcontrols') as FormArray;\n        // console.log(FormAllSections);\n        const Formcurrsection = FormAllSections.controls[currsectionindex] as FormArray;\n\n        const Formfields = new FormGroup({});\n        for (let findex = 0; findex < fields.length; findex++) {\n\n            if (fields[findex].FieldType === 'Checkbox') {\n                const checkboxoptionArray = new FormArray([]);\n\n                for (let count = 0; count < fields[findex].options.length; count++) {\n                    const option = fields[findex].options[count];\n                    let optioncontrol;\n                    optioncontrol = new FormControl(false, Validators.required);\n\n                    checkboxoptionArray.push(optioncontrol);\n                }\n                Formfields.addControl(findex.toString(), checkboxoptionArray);\n            }else {\n                const newcontrol = new FormControl(null, Validators.required);\n                Formfields.addControl(findex.toString(), newcontrol);\n            }\n        }\n\n        Formcurrsection.push(Formfields);\n        this.FormLayout.Sections[currsectionindex].push(newSubSection);\n        this.isFormSaved = 2;\n    }\n\n    RemoveSubSection(currsectionindex, subindex) {\n        // Check if only one subsection/row then don't remove row\n        if (this.FormLayout.Sections[currsectionindex].length > 1) {\n            const FormAllSections = this.ProfileForm.get('customcontrols') as FormArray;\n            // console.log(FormAllSections);\n            const Formcurrsection = FormAllSections.controls[currsectionindex] as FormArray;\n            Formcurrsection.removeAt(subindex);\n            // console.log(this.FormLayout.Sections[currsectionindex][subindex]);\n            const subsectionarray = this.FormLayout.Sections[currsectionindex];\n            subsectionarray.splice(subindex, 1);\n        }\n        this.isFormSaved = 2;\n    }\n\n    EditSubSection(sectionindex, subindex) {\n        this.FormLayout.Sections[sectionindex][subindex].isEditMode = true;\n        this.isFormSaved = 2;\n    }\n\n    onSavesubSection(sectionindex, subindex) {\n        this.FormLayout.Sections[sectionindex][subindex].isEditMode = false;\n        this.isFormSaved = 2;\n    }\n\n    // onSaveSection(secindex) {\n\n    //     const obj = {};\n    //     const oldobj = { _id: this.sessionData._id };\n\n    //     const FormAllSections = this.ProfileForm.get('customcontrols') as FormArray;\n    //     const FormValues = FormAllSections.value;\n    //     // console.log(FormValues);\n    //     const sectionid = this.FormLayout.Sections[secindex][0].SectionID;\n    //     obj[this.FormLayout.Sections[secindex][0].SectionID] = [];\n\n    //     for (let subsecindex = 0; subsecindex > this.FormLayout.Sections[secindex].length; subsecindex++) {\n    //         const fieldsobj = {};\n    //         const Fields = this.FormLayout.Sections[secindex][subsecindex].Fields;\n    //         for (let findex = 0; findex < Fields.length; findex++) {\n    //             const field = Fields[findex];\n    //             const fieldid = field.FieldID;\n    //             // console.log(fieldid);\n    //             const fieldvalue = FormValues[secindex][subsecindex][findex];\n    //             // console.log(fieldvalue);\n    //             if (field.FieldType === 'Checkbox') {\n    //                 fieldsobj[fieldid] = new Array();\n    //                 for (let j = 0; j < field.options.length; j++) {\n    //                     if (fieldvalue[j]) {\n    //                         fieldsobj[fieldid].push(field.options[j]);\n    //                     }\n    //                 }\n    //             }else {\n    //                 fieldsobj[fieldid] = fieldvalue;\n    //             }\n    //         }\n    //         obj[sectionid].push(fieldsobj);\n    //         this.FormLayout.Sections[secindex][subsecindex].isEditMode = false;\n    //     }\n\n    //     this.customFormService.UpdateApplicantProfile(oldobj, obj).subscribe((res) => {\n    //         if (res) {\n    //             this.ProfileDetails = res;\n    //         }\n    //     });\n    // }\n\n    onSaveForm() {\n        const FormAllSections = this.ProfileForm.get('customcontrols') as FormArray;\n        const FormValues = FormAllSections.value;\n        // console.log(FormValues);\n\n        const obj = { _id: this.sessionData._id, type: this.sessionData.type };\n        const Sections = this.FormLayout.Sections;\n        for (let secindex = 0; secindex < this.FormLayout.Sections.length; secindex++) {\n            // Assuming atleast 1 sub section in a section\n            obj[Sections[secindex][0].SectionID] = [];\n\n            for (let subsecindex = 0; subsecindex < Sections[secindex].length; subsecindex++) {\n                const fieldsobj = {};\n                const Subsection = Sections[secindex][subsecindex];\n                Sections[secindex][subsecindex].isEditMode = false;\n                for (let i = 0; i < Subsection.Fields.length; i++) {\n                    const field = Subsection.Fields[i];\n                    const fieldid = field.FieldID;\n                    const fieldvalue = FormValues[secindex][subsecindex][i];\n                    // console.log(fieldvalue);\n\n                    if (field.FieldType === 'Checkbox') {\n                        fieldsobj[fieldid] = new Array();\n                        for (let j = 0; j < field.options.length; j++) {\n                            if (fieldvalue[j]) {\n                                fieldsobj[fieldid].push(field.options[j]);\n                            }\n                        }\n                    }else {\n                        fieldsobj[fieldid] = fieldvalue;\n                    }\n                }\n                obj[Sections[secindex][subsecindex].SectionID].push(fieldsobj);\n            }\n        }\n        // console.log(obj);\n\n        this.customFormService.SaveApplicantForm(obj).subscribe(res => {\n            // console.log(res);\n            if (res) {\n                this.isApplicationFilled = true;\n                this.ProfileDetails = res;\n                this.isFormSaved = 1;\n            }else {\n                this.isFormSaved = -1;\n            }\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/applicant-form/applicant-form.component.ts","import { Component, OnInit, Input, ViewChildren, QueryList } from '@angular/core';\nimport { CustomFormService } from '../custom-form.service';\nimport * as _ from 'lodash';\nimport * as jsPDF from 'jspdf';\nimport { FormModel } from '../form.model';\nimport { SectionModel } from '../Section.model';\n\n@Component({\n  selector: 'app-applicant-list',\n  templateUrl: './applicant-list.component.html',\n  styleUrls: ['./applicant-list.component.css']\n})\nexport class ApplicantListComponent implements OnInit {\n  AllApplicants: any[];\n  FormsList: FormModel[];\n  ApplicantsDetails: any[] = new Array();\n  FilterText: string;\n  userFilter: any = {};\n  isApplicantDetailsLoaded = false;\n  PersonalDetailsID = '5b8552293763452b047283cd';  // Should be same across all the forms\n\n  SelectedType = {\n    type: '',\n    fields: [],\n    applicants: [],\n    count_applicants: 0\n  };\n  isApplicantFiltered: boolean[];\n  isApplicantChecked: boolean[];\n  @ViewChildren('ApplicantProfiles') ApplicantProfiles: QueryList<any>;\n\n  constructor(private customFormService: CustomFormService) {}\n\n  ngOnInit() {\n\n    this.customFormService.GetAllApplicantsPersonalDetails(this.PersonalDetailsID).subscribe(obj => {\n      this.isApplicantDetailsLoaded = true;\n      if (obj && obj.length) {\n        this.AllApplicants = obj;\n\n        this.customFormService.GetAllForms().subscribe(form => {\n          if (form && form.length) {\n            this.FormsList = form;\n          }\n          this.CategorizeApplicant();\n          this.OnSelectApplicantType(0);\n        });\n      }\n    });\n\n  }\n\n  isEmpty(text) {\n    return _.isEmpty(text);\n  }\n\n  OnSearch() {\n  // console.log('OnFilterchnage');\n    if (_.isEmpty(this.FilterText)) {\n      this.isApplicantFiltered.fill(true, 0);\n    }else {\n      const searchedtext = _.toLower(this.FilterText);\n\n      this.SelectedType.applicants.forEach((item, index) => {\n\n          this.SelectedType.fields.some((field) => {\n            const val = _.toLower(item[field.FieldName]);\n           // console.log(val);\n            if (val.indexOf(searchedtext) !== -1) {\n              this.isApplicantFiltered[index] = true;\n              return true;\n            }else {\n              this.isApplicantFiltered[index] = false;\n            }\n          });\n      });\n    }\n  }\n\n  OnClearSearch() {\n    this.FilterText = '';\n    this.isApplicantFiltered.fill(true, 0);\n  }\n\n  OnSelectApplicantType(index) {\n    // console.log('OnSelectApplicantType');\n    this.SelectedType = this.ApplicantsDetails[index];\n    this.FilterText = '';\n    this.isApplicantChecked = new Array(this.SelectedType.count_applicants);\n    this.isApplicantFiltered = new Array(this.SelectedType.count_applicants);\n\n    this.isApplicantChecked.fill(false, 0);\n    this.isApplicantFiltered.fill(true, 0);\n    // console.log(this.isApplicantFiltered);\n    // console.log(this.isApplicantChecked);\n   }\n\n   ToggleApplicantSelection(index) {\n     // console.log(this.isApplicantChecked);\n    this.isApplicantChecked[index] = !this.isApplicantChecked[index];\n   // console.log(this.isApplicantChecked);\n   }\n\n  CategorizeApplicant() {\n\n    this.FormsList.forEach((form) => {\n      const obj = {};\n      obj['type'] = form.FormTypeName; // form type\n      obj['fields'] = [];\n      // console.log(form);\n      const section = form.Sections.filter(s => {\n        return s.SectionID.includes(this.PersonalDetailsID);\n      });\n\n      if (section.length) {\n        obj['fields'] = section[0].Fields;\n      }\n\n      obj['applicants'] = [];\n\n      // ---------For each applicant get Personal Details----------//\n      this.AllApplicants.forEach((applicant) => {\n        // ----Check if Applicant type, is of current Form type and has PersonalDetials section----//\n        if (applicant.type === form.FormType && applicant[this.PersonalDetailsID] && applicant[this.PersonalDetailsID].length > 0) {\n\n          const values = applicant[this.PersonalDetailsID][0]; // values object stores values for differnent field.\n          const singleapplicant = {applicantID: applicant._id};\n          obj['fields'].forEach(field => {\n            singleapplicant[field.FieldName] = values[field.FieldID];\n          });\n\n          obj['applicants'].push(singleapplicant);\n        }\n      });\n\n      obj['count_applicants'] = obj['applicants'].length;\n      // Applicant Details categorizes applicants in number of applicant type category,\n      // Each element of ApplicantDetials has list of applicants under that category\n      this.ApplicantsDetails.push(obj);\n    });\n    // console.log(this.ApplicantsDetails);\n  }\n\n  ExportSelectedProfiles() {\n    console.log('Export to pdf');\n    this.ApplicantProfiles.forEach((profile, index) => {\n      if (this.isApplicantChecked[index]) {\n\n        const doc = new jsPDF();\n        const specialElementHandlers = {\n          '#editor': function(element, renderer){\n            return true;\n          }\n        };\n\n        const content = profile.nativeElement;\n        doc.fromHTML(content.innerHTML, 15, 15, {\n          'width': 190,\n          'elementHandlers': specialElementHandlers\n        });\n        const filename = 'Applicant' + this.SelectedType.applicants[index]['Name'] + '.pdf';\n        doc.save(filename);\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/applicant-list/applicant-list.component.ts","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { CustomFormService } from '../custom-form.service';\nimport { FormModel } from '../form.model';\nimport * as jsPDF from 'jspdf';\n\n@Component({\n  selector: 'app-applicant-profile',\n  templateUrl: './applicant-profile.component.html',\n  styleUrls: ['./applicant-profile.component.css']\n})\nexport class ApplicantProfileComponent implements OnInit {\n  \n  Applicant;\n  Form: FormModel;\n  TemplateList: any[];\n  format_1 = true;\n  format_2 = false;\n  isProfileLoaded = false;\n  @ViewChild('ApplicantProfile') ApplicantProfile: ElementRef;\n  constructor(private route: ActivatedRoute, private router: Router, private customFormService: CustomFormService) { }\n\n  ngOnInit() {\n    this.Form = new FormModel();\n    this.Applicant = {};\n\n    this.route.params.subscribe((params: Params) => {\n      const id = params['id'];\n      this.customFormService.GetApplicantProfile(id).subscribe((obj) => {\n        if (obj) {\n          this.Applicant = obj;\n\n          console.log(this.Applicant);\n          this.customFormService.GetForm(this.Applicant.type).subscribe((form) => {\n            if (form) {\n              this.Form = form;\n              this.OnSelectForm();\n              this.GetAllFormTemplates(this.Form._id);\n            }\n          });\n        }\n      });\n    });\n\n  }\n\n  OnSelectForm() {\n    // Inititally all the fields of the form are displayed.\n    for (let sec = 0; sec < this.Form.Sections.length; sec++) {\n      const currsec = this.Form.Sections[sec];\n      for (let findex = 0; findex < currsec.Fields.length; findex++) {\n        currsec.Fields[findex].isFieldChecked = true;\n      }\n    }\n    this.isProfileLoaded = true;\n  }\n\n  GetFieldValue(SectionID, index, FieldID) {\n    if (this.Applicant[SectionID]) {\n      return this.Applicant[SectionID][index][FieldID];\n    }\n    return '';\n  }\n\n  GetSectionCount(SectionID) {\n    if (this.Applicant[SectionID]) {\n      return this.Applicant[SectionID].length;\n    }\n    return 0;\n  }\n\n  GetAllFormTemplates(formID) {\n    this.customFormService.GetTemplatesByFormID(formID).subscribe((temp) => {\n      if (temp && temp.length) {\n        this.TemplateList = temp;\n      }\n    });\n  }\n\n  CheckedFieldCount(secindex) {\n    return this.Form.Sections[secindex].Fields.filter((field) => {\n      return field.isFieldChecked === true;\n    }).length;\n  }\n\n  OnSelectTemplate(val) {\n    const index: number = val.target['selectedIndex'];\n\n    if (index === 0) {\n      this.OnSelectForm();\n    }else {\n      console.log(index);\n\n      if(index==1){\n        this.format_1 = true; \n        this.format_2 = false; \n      }else if(index==2){\n        this.format_2 = true;\n        this.format_1 = false; \n      }\n      // const SelectedTemplate = this.TemplateList[index - 1];\n      // const Section = {};\n\n      // for (let sec = 0; sec < this.Form.Sections.length; sec++) {\n      //   const currsec = this.Form.Sections[sec];\n      //   Section[currsec.SectionID] = sec; // storing the index\n      // }\n\n      // for (let i = 0; i < SelectedTemplate.Sections.length; i++) {\n      //   const templatesec = SelectedTemplate.Sections[i];\n\n      //   // If Section is present in template section look for fields in Template\n      //   if (Section.hasOwnProperty(templatesec.SectionID)) {\n      //     const secindex = Section[templatesec.SectionID];\n\n      //     const currsec = this.Form.Sections[secindex];\n      //     const formfields = currsec.Fields;\n\n      //     for (let findex = 0; findex < formfields.length; findex++) {\n\n      //       const isFieldpresent = templatesec.Fields.filter((field) => {\n      //         return field === formfields[findex].FieldID;\n      //       });\n\n      //       if (isFieldpresent.length) {\n      //         currsec.Fields[findex].isFieldChecked = true;\n      //       }else {\n      //         currsec.Fields[findex].isFieldChecked = false;\n      //       }\n\n      //     }\n      //     console.log(SelectedTemplate);\n      //   }\n      // }\n\n    }\n\n  }\n\n  PrintToPdf() {\n    console.log('Export to pdf');\n\n    const doc = new jsPDF();\n    const specialElementHandlers = {\n    '#editor': function (element, renderer) {\n    return true;\n    }\n    };\n    //const content = this.ApplicantProfile.nativeElement;\n    const content = document.getElementById('printable_format_1');\n    // doc.fromHTML(content.innerHTML, 15, 15, {\n    // 'width': 190,\n    // 'elementHandlers': specialElementHandlers\n    // });\n    let popupWinindow;\n    popupWinindow = window.open('', '_blank', 'width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no');\n    popupWinindow.document.open();\n    popupWinindow.document.write('<html><head><style>body{margin: 50px 50px;font-family: \"Helvetica Neue\",Helvetica,Arial,sans-serif;}.table-bordered {border: 1px solid #ddd;}.table {width: 100%;max-width: 100%;margin-bottom: 20px;border-collapse: collapse;}.table-bordered>tbody>tr>td,.table-bordered>tbody>tr>th{border: 1px solid #ddd;text-align:left;padding:8px}</style></head><body onload=\"window.print()\">' + content.innerHTML + '</html>');\n    popupWinindow.document.close();\n\n    // console.log(content);\n    // const filename = 'Applicant' + this.Applicant._id + '.pdf';\n// doc.save(filename);\n}\nPrintToPdf_2() {\n    console.log('Export to pdf');\n\n    const doc = new jsPDF();\n    const specialElementHandlers = {\n    '#editor': function (element, renderer) {\n    return true;\n    }\n    };\n    //const content = this.ApplicantProfile.nativeElement;\n    const content = document.getElementById('printable_format_2');\n    // doc.fromHTML(content.innerHTML, 15, 15, {\n    // 'width': 190,\n    // 'elementHandlers': specialElementHandlers\n    // });\n    let popupWinindow;\n    popupWinindow = window.open('', '_blank', 'width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no');\n    popupWinindow.document.open();\n    popupWinindow.document.write('<html><head><style>body{margin: 50px 50px;font-family: \"Helvetica Neue\",Helvetica,Arial,sans-serif;}.table-bordered {border: 1px solid #000;}.table {width: 100%;max-width: 100%;margin-bottom: 20px;border-collapse: collapse;}.table-bordered>tbody>tr>td,.table-bordered>tbody>tr>th{border: 1px solid #000;text-align:left;padding:8px}</style></head><body onload=\"window.print()\">' + content.innerHTML + '</html>');\n    popupWinindow.document.close();\n\n    // console.log(content);\n    // const filename = 'Applicant' + this.Applicant._id + '.pdf';\n// doc.save(filename);\n}\n\n  PrintToPdf_bk() {\n    console.log('Export to pdf');\n\n    const doc = new jsPDF();\n    const specialElementHandlers = {\n      '#editor': function (element, renderer) {\n        return true;\n      }\n    };\n    const content = document.getElementById('printable');//this.ApplicantProfile.nativeElement;\n    doc.fromHTML(content.innerHTML, 15, 15, {\n      'width': 190,\n      'elementHandlers': specialElementHandlers\n    });\n\n\n\n    console.log(content);\n    const filename = 'Applicant' + this.Applicant._id + '.pdf';\n    doc.save(filename);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/applicant-profile/applicant-profile.component.ts","import { Component, OnInit, Input , OnChanges, Output, EventEmitter} from '@angular/core';\nimport { CustomFormService } from '../custom-form.service';\nimport { AuthService } from '../../auth/auth.service';\n\nimport { SectionModel } from '../section.model';\nimport { FormModel } from '../form.model';\nimport { FormControlModel } from '../form-control.model';\nimport { FieldModel } from '../field.model';\nimport { THROW_IF_NOT_FOUND } from '@angular/core/src/di/injector';\nconst ObjectID = require('bson-objectid');\n\n\n@Component({\n  selector: 'app-create-form',\n  templateUrl: './create-form.component.html',\n  styleUrls: ['./create-form.component.css']\n})\n\nexport class CreateFormComponent implements OnInit, OnChanges {\n  @Input() SelectedForm = new FormModel();\n  @Output() FormSaved = new EventEmitter();\n\n  Error: string;\n  controls: Array<FormControlModel>;\n  totalcontrols: number;\n  TotalSections = 0;\n  ApplicantType;\n  FormSuccessMessage = 0;\n\n  ngOnChanges() {\n      this.TotalSections = this.SelectedForm.Sections.length;\n  }\n\n  constructor(private customFormService: CustomFormService, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authService.getApplicantType().subscribe(obj => {\n      // console.log(obj);\n      this.ApplicantType = obj;\n    });\n\n    this.customFormService.GetFormControls().subscribe((obj) => {\n      this.controls = new Array();\n      for (let i = 0 ; i < obj.length; i++) {\n        const control = new FormControlModel();\n        control.Type = obj[i].FieldType;\n        control.isMultipleOption = obj[i].isMultipleOption;\n        control.Total = 0;\n        control.Table = obj[i].Table ? obj[i].Table : '';\n        control.ParentType = obj[i].parent ? obj[i].parent : '';\n        if (control.isMultipleOption) {\n          control.optionCount = 1;\n        }else {\n          control.optionCount = 0;\n        }\n        this.controls.push(control);\n      }\n      this.totalcontrols = this.controls.length;\n      // console.log(this.controls);\n    });\n  }\n\n  OnSave() {\n    // console.log(this.SelectedForm);\n    this.customFormService.SaveForm(this.SelectedForm)\n    .subscribe(obj => {\n      if (obj) {\n        this.SelectedForm._id = obj._id;\n        this.FormSaved.emit(this.SelectedForm);\n        this.FormSuccessMessage = 1;\n      }else {\n        this.FormSuccessMessage = -1;\n      }\n  });\n  }\n\n  OnSelectFormType(event) {\n    const index: number = event.target['selectedIndex'];\n    this.SelectedForm.FormTypeName = this.ApplicantType[index].type;\n   // console.log(this.SelectedForm.FormTypeName);\n  }\n\n  OnOptionChange(sectionindex, fieldindex, newvalue, optionindex) {\n    this.SelectedForm.Sections[sectionindex].Fields[fieldindex].options[optionindex] = newvalue;\n  }\n\n  AddOption(sectionindex, fieldindex) {\n    const optionlabel = 'Option ' + this.SelectedForm.Sections[sectionindex].Fields[fieldindex].options.length;\n    this.SelectedForm.Sections[sectionindex].Fields[fieldindex].options.push(optionlabel);\n  }\n\n  RemoveOption(sectionindex, fieldindex, optionindex) {\n    this.SelectedForm.Sections[sectionindex].Fields[fieldindex].options.splice(optionindex, 1);\n  }\n\n  AddSection() {\n    const newSection = new SectionModel();\n    newSection.SectionID = ObjectID();\n    newSection.SectionName = 'Section ' +  this.TotalSections;\n    newSection.CanBeMultiple = false;\n    newSection.Fields = new Array<FieldModel>();\n    this.SelectedForm.Sections.push(newSection);\n    this.TotalSections++;\n  }\n\n  RemoveSection(sectionindex) {\n    this.SelectedForm.Sections.splice(sectionindex, 1);\n  }\n\n  AddParentField(sectionIndex, fieldindex, SelectedParent) {\n    // Add the Parent Field\n    SelectedParent = JSON.parse(SelectedParent);\n    const ParentSectionId = SelectedParent.SectionID.toString();\n    const ParentFieldId = SelectedParent.FieldID.toString();\n    const DependentSectionId = this.SelectedForm.Sections[sectionIndex].SectionID.toString();\n    const DependentFieldId = this.SelectedForm.Sections[sectionIndex].Fields[fieldindex].FieldID.toString();\n    const DependentFieldName = this.SelectedForm.Sections[sectionIndex].Fields[fieldindex].FieldName;\n\n    // -- Add the selected Parent to Field's ParentField-- //\n    this.SelectedForm.Sections[sectionIndex].Fields[fieldindex].ParentField.FieldID = SelectedParent.FieldID;\n    this.SelectedForm.Sections[sectionIndex].Fields[fieldindex].ParentField.SectionID = SelectedParent.SectionID;\n\n    // --Add to Parent Field's Dependency List-- //\n    const ParentSection = this.SelectedForm.Sections.find(sec => sec.SectionID.toString() === ParentSectionId);\n    if (ParentSection) {\n      const ParentField = ParentSection.Fields.find(field => field.FieldID.toString() === ParentFieldId);\n      if (ParentField) {\n        // Push only if its not already in dependent list.\n        if (! ParentField.DependentFieldList.find(field => field.FieldID.toString() === DependentFieldId)) {\n          ParentField.DependentFieldList.push({FieldID: DependentFieldId, SectionID: DependentSectionId});\n        }\n        }\n    }\n}\n\n  GetParentList(sectionIndex, CurrField: FieldModel) {\n    const ParentFieldType = CurrField.ParentField.FieldType;\n    let FieldList;\n    for (let secind = 0; secind < this.SelectedForm.Sections.length; secind++) {\n       FieldList = this.SelectedForm.Sections[secind].Fields.filter( field => {\n        return field.FieldType === ParentFieldType;\n      }).map((elem, findex) => {\n        return {\n          FieldID: elem.FieldID.toString(),\n          FieldName: elem.FieldName + '(' + this.SelectedForm.Sections[secind].SectionName + ',' + findex + ')',\n          // If same freld Name for multiple Columns, So specify Sectioname and Field Index\n          SectionID: this.SelectedForm.Sections[secind].SectionID.toString()\n        };\n      });\n      if (FieldList.length > 0) {\n        // Merge the Parent List Array with FieldList(List of Fields with Parent Field Type) obtained above.\n        Array.prototype.push.apply(CurrField.ParentField.FieldList, FieldList);\n      }\n    }\n    if (CurrField.ParentField.FieldList.length !== 0) {\n      this.SelectedForm.Sections[sectionIndex].Fields.push(CurrField);\n    }else {\n      this.Error = 'No ' + CurrField.ParentField.FieldType + ' Field Found. Add ' + CurrField.ParentField.FieldType + ' Field First.' ;\n    }\n  }\n\n  AddField(SectionIndex, control: FormControlModel) {\n    const fieldcount = this.SelectedForm.Sections[SectionIndex].Fields.length;\n    const newField = new FieldModel();\n    newField.FieldID = ObjectID();\n    newField.FieldName = 'Field ' + fieldcount;\n    newField.FieldType = control.Type;\n    newField.Table = control.Table;\n    newField.ParentField = {FieldType: control.ParentType, FieldList: new Array(), FieldID: null, SectionID: null};\n    newField.DependentFieldList = new Array();\n    newField.options = new Array();\n    if (control.Table !== '') {\n      if (control.ParentType) {\n        this.GetParentList(SectionIndex, newField);\n      }else {\n        this.SelectedForm.Sections[SectionIndex].Fields.push(newField);\n        // this.GetOptionsinList(control, fieldcount, SectionIndex);\n      }\n    }else {\n      for (let count = 0; count < control.optionCount; count++) {\n      const optionlabel = 'Option ' + count;\n      newField.options.push(optionlabel);\n    }\n    this.SelectedForm.Sections[SectionIndex].Fields.push(newField);\n    }\n  }\n\n  RemoveField(sectionindex, fieldindex) {\n    const currFieldId = this.SelectedForm.Sections[sectionindex].Fields[fieldindex].FieldID.toString();\n    const currSectionId = this.SelectedForm.Sections[sectionindex].SectionID.toString();\n\n    const currFieldParentSectionId = this.SelectedForm.Sections[sectionindex].Fields[fieldindex].ParentField.SectionID;\n    const currFieldParentFieldId = this.SelectedForm.Sections[sectionindex].Fields[fieldindex].ParentField.FieldID;\n\n    const DepedentFields = this.SelectedForm.Sections[sectionindex].Fields[fieldindex].DependentFieldList; // only fieldId and SectionId\n\n    // Remove this Field from all dependent Fields\n    for (let i = 0; i < DepedentFields.length; i++) {\n\n      const DependentSectionId = DepedentFields[i].SectionID.toString();\n      const DependentFieldId = DepedentFields[i].FieldID.toString();\n\n      // Search for dependent SectionId and FieldId in all Sections. when found remove currfield from its parent field List\n      const DependentSection = this.SelectedForm.Sections.find(sec => sec.SectionID.toString() === DependentSectionId);\n      if (DependentSection) {\n        const DependentField = DependentSection.Fields.find(field => field.FieldID.toString() === DependentFieldId);\n        if (DependentField) {\n          if (DependentField.ParentField.FieldID === currFieldId) {\n            DependentField.ParentField.FieldID = null;\n          }\n          // Removing CurrField from Dependent Field's ParentList\n          DependentField.ParentField.FieldList = DependentField.ParentField.FieldList\n                                                                .reduce((p, c) => (c.FieldID !== currFieldId && p.push(c), p), []);\n         // Add code to check if parent fieldlist is empty after this operation then?\n        }\n      }\n  }\n  // Remove this Field from Parent Field\n  if (currFieldParentFieldId !== null) {\n    const ParentSection = this.SelectedForm.Sections.find(sec => sec.SectionID.toString() === currFieldParentSectionId.toString());\n    if (ParentSection) {\n      const ParentField = ParentSection.Fields.find(field => field.FieldID.toString() === currFieldParentFieldId.toString());\n      // Removing Curr Field from Parent Field's Dependency List\n      if (ParentField) {\n        ParentField.DependentFieldList = ParentField.DependentFieldList\n                                                              .reduce((p, c) => (c.FieldID !== currFieldId && p.push(c), p), []);\n      }\n    }\n  }\n  // Remove this Field from Curr Section Fields Array\n  this.SelectedForm.Sections[sectionindex].Fields.splice(fieldindex, 1);\n  }\n\n  GetFieldName(sectionId, fieldId) {\n    const ParentSection = this.SelectedForm.Sections.find(sec => sec.SectionID.toString() === sectionId.toString());\n    if (ParentSection) {\n      const ParentField = ParentSection.Fields.find(field => field.FieldID.toString() === fieldId.toString());\n      if (ParentField) {\n        return ParentField.FieldName;\n        }\n    }\n  }\n\n  GetOptionsinList(control: FormControlModel, fieldIndex, SectionIndex) {\n    if (control.ParentType === '') {\n      switch (control.Table) {\n        case 'Countries':\n          this.customFormService.getCountries().subscribe(obj => {\n            // console.log(obj);\n            for (let count = 0; count < obj.length; count++) {\n            const optionlabel = obj[count].CountryName;\n            this.SelectedForm.Sections[SectionIndex].Fields[fieldIndex].options.push(optionlabel);\n          }\n        });\n        break;\n\n        case 'CompanyName':\n        // this.authService.getStates().subscribe(obj => {\n        //   // console.log(obj);\n        //   this.ApplicantType = obj;\n        // });\n        break;\n      }\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/create-form/create-form.component.ts","import { Component, OnInit } from '@angular/core';\nimport { CustomFormService } from '../custom-form.service';\nimport { FormModel } from '../form.model';\nimport { TemplateModel } from '../template.model';\nimport { SectionModel } from '../Section.model';\nimport { FieldModel } from '../field.model';\n\n@Component({\n  selector: 'app-create-template',\n  templateUrl: './create-template.component.html',\n  styleUrls: ['./create-template.component.css']\n})\nexport class CreateTemplateComponent implements OnInit {\n  TemplatesList: any[];\n  FormsList: FormModel[];\n  isFieldChecked: any[];\n  SelectedForm: FormModel;\n  createMode: boolean;\n  FieldCheckedCount: number;\n  TemplateTitle: string;\n  TemplateID: string;\n  TotalFieldsChecked: number;\n  TemplateSaved = 0;\n  FormLoaded = false;\n  TemplatesLoaded = false;\n\n  constructor(private customFormService: CustomFormService) { }\n\n  ngOnInit() {\n    this.GetAllTemplates();\n    this.GetAllForms();\n  }\n\n  GetAllTemplates() {\n    this.customFormService.GetAllTemplates().subscribe(obj => {\n      this.TemplatesLoaded = true;\n      if (obj && obj.length) {\n        this.TemplatesList = obj;\n      }\n    });\n  }\n\n  GetAllForms() {\n    this.customFormService.GetAllForms().subscribe(obj => {\n      this.FormLoaded = true;\n      if (obj && obj.length) {\n        this.FormsList = obj;\n      }\n    });\n  }\n\n  OnEditTemplate(index) {\n    const SelectedTemplate = this.TemplatesList[index];\n    this.TemplateTitle = SelectedTemplate.TemplateTitle;\n    this.TemplateID = SelectedTemplate._id;\n    const Form = this.FormsList.filter(form => {\n      return form._id === SelectedTemplate.FormID;\n    });\n\n    if (Form.length) {\n      this.SelectedForm = Form[0];\n      this.TotalFieldsChecked = 0;\n      const Section = {};\n\n      // Check if Form section is present in the selected Template Sections\n      for (let sec = 0; sec < this.SelectedForm.Sections.length; sec++) {\n        const currsec = this.SelectedForm.Sections[sec];\n        Section[currsec.SectionID] = sec; // storing the index\n      }\n\n      for (let i = 0; i < SelectedTemplate.Sections.length; i++) {\n        const templatesec = SelectedTemplate.Sections[i];\n\n        // If Section is present in template section look for fields in Template\n        if (Section.hasOwnProperty(templatesec.SectionID)) {\n          const secindex = Section[templatesec.SectionID];\n\n          const currsec = this.SelectedForm.Sections[secindex];\n          const formfields = currsec.Fields;\n\n          for (let findex = 0; findex < formfields.length; findex++) {\n\n            const isFieldpresent = templatesec.Fields.filter((field) => {\n              return field === formfields[findex].FieldID;\n            });\n\n            if (isFieldpresent.length) {\n              currsec.Fields[findex].isFieldChecked = true;\n              this.TotalFieldsChecked++;\n            }else {\n              currsec.Fields[findex].isFieldChecked = false;\n            }\n\n          }\n          // console.log(this.SelectedForm);\n        }\n      }\n    }\n    this.createMode = true;\n  }\n\n  OnSelectForm(val) {\n\n    const index: number = val.target['selectedIndex'];\n    this.SelectedForm = this.FormsList[index - 1]; // 'Select Form is also 0th option'\n    for (let sec = 0; sec < this.SelectedForm.Sections.length; sec++) {\n      const currsec = this.SelectedForm.Sections[sec];\n      for (let findex = 0; findex < currsec.Fields.length; findex++) {\n        currsec.Fields[findex].isFieldChecked = true;\n        this.TotalFieldsChecked++;\n      }\n    }\n  }\n\n  ToggleFieldSelection(secindex, fieldindex) {\n    this.SelectedForm.Sections[secindex].Fields[fieldindex].isFieldChecked = !this.SelectedForm.Sections[secindex].Fields[fieldindex]\n                                                                                                                  .isFieldChecked;\n    if (this.SelectedForm.Sections[secindex].Fields[fieldindex].isFieldChecked) {\n      this.TotalFieldsChecked++;\n    }else {\n      this.TotalFieldsChecked--;\n    }\n  }\n\n  CheckedFieldCount(secindex) {\n    return this.SelectedForm.Sections[secindex].Fields.filter((field) => {\n      return field.isFieldChecked === true;\n    }).length;\n  }\n\n  OnCreateTemplate() {\n    this.createMode = true;\n    this.SelectedForm = new FormModel();\n    this.TemplateTitle = 'Template Title';\n    this.TemplateID = null;\n    this.SelectedForm.Sections = new Array();\n    this.TotalFieldsChecked = 0;\n  }\n\n  OnSaveTemplate() {\n    const template = {\n      FormID: this.SelectedForm._id,\n      FormType: this.SelectedForm.FormType,\n      TemplateTitle: this.TemplateTitle,\n      _id: this.TemplateID\n    };\n    template['Sections'] = new Array();\n\n    for (let secindex = 0; secindex < this.SelectedForm.Sections.length; secindex++) {\n      const fields = this.SelectedForm.Sections[secindex].Fields;\n      const currsec = this.SelectedForm.Sections[secindex];\n\n      const checkedfields = fields.filter(field => {\n        return field.isFieldChecked === true;\n      }).map(field => {\n        return field.FieldID;\n      });\n\n      if (checkedfields.length > 0) {\n        const currobj = {};\n        currobj['SectionID'] = currsec.SectionID;\n        currobj['Fields'] = checkedfields;\n        template['Sections'].push(currobj);\n      }\n    }\n\n    this.customFormService.SaveTemplate(template).subscribe((obj) => {\n      if (obj) {\n        this.GetAllTemplates();\n        this.TemplateSaved = 1;\n      }else {\n        this.TemplateSaved = -1;\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/create-template/create-template.component.ts","import { FormControlModel } from './form-control.model';\n\nexport class FieldModel {\n    FieldID: string;\n    FieldName: string;\n    FieldType: string;\n    options: string[];\n    isFieldChecked: boolean; // Use in Applicant Profile Page\n    DependentFieldList: {FieldID, SectionID}[]; // List of Children dependent on this field\n    ParentField: {FieldID, SectionID, FieldType, FieldList: any[]}; // Assuming single Parent\n    Table: string;  // If Options in the Field is predefined in a Table\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/field.model.ts","export class FormControlModel {\n    Type: string;\n    isMultipleOption: boolean;\n    optionCount: number;\n    Table: string;\n    Total: number;\n    ParentType: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/form-control.model.ts","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  UserType:string\n\n  constructor(private authService:AuthService) { }\n\n  ngOnInit() {\n    this.UserType = this.authService.sessionData.type;\n  }\n\n  OnLogout(){\n    this.authService.Logout();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-preview-form',\n  templateUrl: './preview-form.component.html',\n  styleUrls: ['./preview-form.component.css']\n})\nexport class PreviewFormComponent implements OnInit {\n  @Input() SelectedForm;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/preview-form/preview-form.component.ts","import { FieldModel } from './field.model';\n\nexport class SectionModel {\n    SectionID: string;\n    SectionName: string;\n    CanBeMultiple: boolean;\n    Fields: FieldModel[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/section.model.ts","import { Component, OnInit } from '@angular/core';\nimport { CustomFormService } from '../custom-form.service';\nimport { FormModel } from '../form.model';\nimport { SectionModel } from '../Section.model';\n\n@Component({\n  selector: 'app-view-forms',\n  templateUrl: './view-forms.component.html',\n  styleUrls: ['./view-forms.component.css']\n})\nexport class ViewFormsComponent implements OnInit {\n  FormsList: FormModel[];\n  SelectedForm: FormModel;\n  isSelected: Boolean = false;\n  FormsCount: Number = 0;\n  isFormsLoaded = false;\n  constructor(private customFormService: CustomFormService) {}\n\n  ngOnInit() {\n    console.log(this.isFormsLoaded);\n    this.getAllForms();\n  }\n\n  OnSelectForm(index) {\n    this.isSelected = true;\n    this.SelectedForm = this.FormsList[index];\n    // console.log(this.SelectedForm);\n  }\n\n  OnSaveForm(event) {\n    this.SelectedForm = event;\n    this.isSelected = true;\n    this.getAllForms();\n  }\n\n  CreateNewForm() {\n    this.SelectedForm = new FormModel();\n    this.SelectedForm.Sections = new Array<SectionModel>();\n    this.isSelected = true;\n  }\n\n  getAllForms() {\n    this.customFormService.GetAllForms().subscribe(obj => {\n      this.isFormsLoaded = true;\n      console.log(this.isFormsLoaded);\n      if (obj && obj.length) {\n        this.FormsList = obj;\n        this.FormsCount = this.FormsList.length;\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/view-forms/view-forms.component.ts","import { Component, OnInit,Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n  @Input() message:string;\n  constructor(private router:Router, private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  OnSignIn(form:NgForm){\n    const userid = form.value.userid;\n    const password = form.value.password;\n    this.authService.Signin(userid, password).subscribe(obj => {\n      if(obj.user == false){\n          this.message = \"Your username or password is incorrect\";\n      }\n      else{\n        this.authService.sessionData = obj.user;\n        this.authService.isAuthenticated.next(true);\n        this.router.navigate(['/']);\n      }\n  }, error => this.router.navigate(['/signin']));;\n  }\n\n  GoToSignup(){\n    this.router.navigate(['/signup']);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/signin/signin.component.ts","import { Component, OnInit , Input} from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth/auth.service';\nimport { concat } from 'rxjs/operator/concat';\nimport { Router } from '@angular/router';\nimport 'rxjs/rx';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  @Input() otptext:string;\n  @Input() phoneno:string;\n  @Input() message:string;\n  \n  ApplicantType: any[];\n  isPhoneVerified = false;\n  isSMSSent = false;\n  constructor(private router: Router, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authService.getApplicantType().subscribe(obj =>{\n      //console.log(obj);\n      this.ApplicantType = obj;\n    })\n  }\n\n  OnSignUp(form:NgForm){\n    const userid = form.value.userid;\n    const password = form.value.password;\n    const type = form.value.type;\n    this.authService.Signup(userid, password, type).subscribe(obj => {\n      if(obj.user == false){\n        this.message = \"Some Error Occured. Try Again\";\n      }\n      else{\n        this.authService.sessionData = obj.user;\n        this.authService.isAuthenticated.next(true);\n        this.router.navigate(['/']);\n      }\n  }, error => this.router.navigate(['/signup']));\n  }\n\n  SendOTP(){\n    this.authService.SendOTP(this.phoneno).subscribe(obj =>{\n        if(obj.OTPSent){\n        this.isSMSSent = true;\n        this.message = \"SMS successfully sent.\";\n      }\n      else{\n        this.message = obj.message;\n      }\n    });\n  }\n\n  VerifyOTP(){\n    this.authService.VerifyOTP(this.otptext,this.phoneno).subscribe(obj =>{\n      if(obj.OTPVerified){\n        this.isPhoneVerified = true;\n        this.message = \"Phone No. verified.\";\n      }\n      else{\n        this.message = obj.message;\n      }\n    });\n  }\n  OnLoginPage(){\n    this.router.navigate(['/signin']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/signup/signup.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { Http } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { error } from 'util';\nimport 'rxjs/rx';\nimport { Subject } from 'rxjs/Subject';\n\n@Injectable()\nexport class AuthService {\n    isAuthenticated = new Subject<boolean>();\n    sessionData;\n    constructor(private router: Router, private http: Http) { }\n\n    Signin(userid, password) {\n        // console.log(userid,password);\n        return this.http.post(`login`, { username: userid, password: password }).map(res => {\n            if (res.status === 400) {\n                this.router.navigate(['/signin']);\n                throw new Error('' + res.status);\n            }else {\n                this.sessionData = res.json().sessionData;\n                return res.json();\n            }\n        });\n    }\n\n    Signup(userid, password, type) {\n        return this.http.post(`register`, {userid: userid, password: password, type}).map(res => {\n           if (res.status === 400) {\n                this.router.navigate(['/signup']);\n                throw new Error('' + res.status);\n            }else {\n                return res.json();\n            }\n        });\n    }\n\n    getApplicantType() {\n        return this.http.get('getApplicantType').map(res => {\n            if (res.status === 400) {\n                throw new Error('400');\n            }else {\n                return res.json();\n            }\n        });\n    }\n\n    isSessionOpen() {\n        // console.log('isSession Open');\n        return this.http.get(`isSessionOpen`).map(res => {\n            if (res.status !== 200) {\n                throw new Error('Couldn\\'t authenticate. Some Error Occured' + res.status);\n            }else {\n                const obj = res.json();\n                if (obj.isSessionOpen === true) {\n                    this.isAuthenticated.next(true);\n                    this.sessionData = obj.sessionData;\n                    // console.log(this.sessionData);\n                    return true;\n                }else {\n                    this.isAuthenticated.next(false);\n                    this.sessionData = null;\n                    return false;\n                }\n            }\n        });\n    }\n\n    SendOTP(phoneno) {\n        console.log('SendOTP Auth');\n       return this.http.post('sendOTP', { phoneno: phoneno}).map(res => {\n            if (res.status === 400) {\n                throw new Error('Couldn\\'t Verify. Some Error Occured' + res.status);\n            }else {\n              return res.json();\n            }\n          });\n        }\n\n    VerifyOTP(otp, phoneno) {\n        console.log('Verify OTP');\n        return this.http.post('verifyOTP', {phoneno: phoneno, otp: otp}).map(res => {\n             if (res.status === 400) {\n                 throw new Error('Couldn\\'t Verify. Some Error Occured' + res.status);\n             }else {\n               return res.json();\n             }\n           });\n    }\n\n    Logout() {\n        return this.http.get('logout').subscribe(obj => {\n            console.log('Logged out successfully');\n            this.isAuthenticated.next(false);\n            this.router.navigate(['/signin']);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/auth.service.ts","import { Http } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as _ from 'lodash';\nimport { map } from 'rxjs/operators/map';\n// import 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/observable';\nimport { Subject } from 'rxjs/Subject';\nimport { FormModel } from './form.model';\n\n@Injectable()\nexport class CustomFormService {\n    constructor(private router: Router, private http: Http) { }\n\n    GetFormControls() {\n        return this.http.get('getformcontrols').map(res => {\n            if (res.status === 400) {\n                throw new Error('Couldn\\'t get form controls');\n            }else {\n                return res.json();\n            }\n        });\n    }\n\n    SaveForm(form: FormModel) {\n        return this.http.post('saveForm', form).map(res => {\n            if (res.status === 400) {\n                throw new Error('Couldn\\'t Save Forms');\n            }else {\n                return res.json();\n            }\n        });\n    }\n\n    GetForm(type) {\n        // console.log('Get form');\n        return this.http.post('getForm', { type }).map(res => {\n            if (res.status === 400) {\n                throw new Error('Couldn\\'t Get Forms');\n            }else {\n                const obj = res.json();\n                if (!_.isEmpty(obj)) {\n                    return res.json();\n                }\n                return null;\n            }\n        });\n    }\n\n    GetAllForms() {\n        // console.log('Get form');\n        return this.http.get('getAllForms').map(res => {\n            if (res.status === 400) {\n                throw new Error('Couldn\\'t Get Forms');\n            }else {\n                const obj = res.json();\n                if (!_.isEmpty(obj)) {\n                    return res.json();\n                }\n                return null;\n            }\n        });\n    }\n\n    // GetAllApplicants(){\n    //     return this.http.get('getAllApplicants').map(res =>{\n    //         if(res.status == 400){\n    //             throw new Error('Couldn\\'t Get Applicants List');\n    //         }\n    //         else{\n    //             let obj = res.json();\n    //             return res.json();\n    //         }\n    //     });\n    // }\n\n    GetAllApplicantsPersonalDetails(PersonalDetailsID) {\n        console.log(PersonalDetailsID);\n        return this.http.post('GetAllApplicantsPersonalDetails', {id: PersonalDetailsID}).map(res => {\n            if (res.status === 400) {\n                throw new Error('Couldn\\'t Get Applicants List');\n            }else {\n                const obj = res.json();\n                return res.json();\n            }\n        });\n    }\n\n    SaveApplicantForm(ApplicantDetails) {\n        return this.http.post('saveApplicantData', ApplicantDetails).map(res => {\n            if (res.status === 400) {\n                throw new Error('Couldn\\'t Get Forms');\n            }else {\n                const obj = res.json();\n                console.log(obj);\n                if (!_.isEmpty(obj)) {\n                    return res.json();\n                }\n                return null;\n            }\n        });\n    }\n\n    SaveTemplate(template) {\n        return this.http.post('saveTemplate', template).map(res => {\n            if (res.status === 400) {\n                throw new Error('Couldn\\'t Save Template');\n            }else {\n                const obj = res.json();\n                console.log(obj);\n                if (!_.isEmpty(obj)) {\n                    return res.json();\n                }\n                return null;\n            }\n        });\n    }\n\n    GetAllTemplates() {\n        return this.http.get('getAllTemplates').map(res => {\n            if (res.status === 400) {\n                throw new Error('Couldn\\'t Get Template');\n            }else {\n                const obj = res.json();\n                if (!_.isEmpty(obj)) {\n                    return res.json();\n                }\n                return null;\n            }\n        });\n    }\n\n    GetTemplatesByFormID(formID) {\n        console.log(formID);\n        return this.http.post('getTemplatesByFormID', {formID}).map(res => {\n            if (res.status === 400) {\n                throw new Error('Couldn\\'t Get Templates');\n            }else {\n                const obj = res.json();\n                if (!_.isEmpty(obj)) {\n                    return res.json();\n                }\n                return null;\n            }\n        });\n    }\n\n    GetApplicantProfile(_id) {\n        return this.http.post('getApplicantProfile', { _id }).map(res => {\n            if (res.status === 400) {\n                throw new Error('Couldn\\'t Get Applicant');\n            }else {\n                const obj = res.json();\n                if (!_.isEmpty(obj)) {\n                    return res.json();\n                }\n                return null;\n            }\n        });\n    }\n\n    UpdateApplicantProfile(oldobj, newobj) {\n        return this.http.post('UpdateApplicantProfile', { oldobj, newobj }).map(res => {\n            if (res.status === 400) {\n                throw new Error('Couldn\\'t Get Forms');\n            }else {\n                const obj = res.json();\n                console.log(obj);\n                if (!_.isEmpty(obj)) {\n                    return res.json();\n                }\n                return null;\n            }\n        });\n    }\n\n    getCountries() {\n        return this.http.get('getAllCountries').map(res => {\n            if (res.status === 400) {\n                throw new Error('Couldn\\'t Get Template');\n            }else {\n                const obj = res.json();\n                if (!_.isEmpty(obj)) {\n                    return res.json();\n                }\n                return null;\n            }\n        });\n    }\n\n    getCompanyTypes() {\n        return this.http.get('getAllCompanyTypes').map(res => {\n            if (res.status === 400) {\n                throw new Error('Couldn\\'t Get Template');\n            }else {\n                const obj = res.json();\n                if (!_.isEmpty(obj)) {\n                    return res.json();\n                }\n                return null;\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/custom-form.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 484\n// module chunks = 1","module.exports = \"#loading.overlay{\\n    position: fixed;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    background: rgba(0,0,0,0.5);\\n    z-index: 10;\\n}\\n.loader_div {\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    text-align: center;\\n}\\n.loadingtext {\\n    margin-top:5px;\\n    color:white;\\n}\\n\\nth{font-weight: bold;}\\n.table{margin-bottom: 5px;font-size: 12px}\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-form/applicant-form.component.css\n// module id = 485\n// module chunks = 1","module.exports = \"#loading.overlay{\\n    position: fixed;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    background: rgba(0,0,0,0.5);\\n    z-index: 10;\\n}\\n.loader_div {\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    text-align: center;\\n}\\n.loadingtext {\\n    margin-top:5px;\\n    color:white;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-list/applicant-list.component.css\n// module id = 486\n// module chunks = 1","module.exports = \"#loading.overlay{\\n    position: fixed;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    background: rgba(0,0,0,0.5);\\n    z-index: 10;\\n}\\n.loader_div {\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    text-align: center;\\n}\\n.loadingtext {\\n    margin-top:5px;\\n    color:white;\\n}\\n\\n.hideElement{display: none;}\\n\\n.table-bordered>tbody>tr>th{font-weight: bold;}\\n.table-bordered>tbody>tr>td,\\n.table-bordered>tbody>tr>th {\\n    border-color: black\\n}\\nh4{font-weight: bold}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-profile/applicant-profile.component.css\n// module id = 487\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/create-form/create-form.component.css\n// module id = 488\n// module chunks = 1","module.exports = \"#loading.overlay{\\n    position: fixed;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    background: rgba(0,0,0,0.5);\\n    z-index: 10;\\n}\\n.loader_div {\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    text-align: center;\\n}\\n.loadingtext {\\n    margin-top:5px;\\n    color:white;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/create-template/create-template.component.css\n// module id = 489\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = 490\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/preview-form/preview-form.component.css\n// module id = 491\n// module chunks = 1","module.exports = \"#loading.overlay{\\n    position: fixed;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    background: rgba(0,0,0,0.5);\\n    z-index: 10;\\n}\\n.loader_div {\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    text-align: center;\\n}\\n.loadingtext {\\n    margin-top:5px;\\n    color:white;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/view-forms/view-forms.component.css\n// module id = 492\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signin/signin.component.css\n// module id = 493\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signup/signup.component.css\n// module id = 494\n// module chunks = 1","module.exports = \"<div id=\\\"wrapper\\\">\\n  <div id=\\\"page-wrapper\\\" style=\\\"margin:50px;\\\">\\n      <router-outlet></router-outlet>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 495\n// module chunks = 1","module.exports = \"<!--Empty Form-->\\n<input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" name=\\\"fileToUpload\\\" />\\n<div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\">\\n \\n            <h3>Upload queue</h3>\\n            <p>Queue length: {{ uploader?.queue?.length }}</p>\\n \\n            <table class=\\\"table\\\">\\n                <thead>\\n                <tr>\\n                    <th width=\\\"50%\\\">Name</th>\\n                    <th>Size</th>\\n                    <th>Progress</th>\\n                    <th>Status</th>\\n                    <th>Actions</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <tr *ngFor=\\\"let item of uploader.queue\\\">\\n                    <td><strong>{{ item?.file?.name }}</strong></td>\\n                    <td *ngIf=\\\"uploader.isHTML5\\\" nowrap><!-- {{ item?.file?.size/1024/1024 | number:'.2' }} MB --></td>\\n                    <td >\\n                        <div class=\\\"progress\\\" style=\\\"margin-bottom: 0;\\\">\\n                            <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': item.progress + '%' }\\\"></div>\\n                        </div>\\n                    </td>\\n                    <td class=\\\"text-center\\\">\\n                        <span *ngIf=\\\"item.isSuccess\\\"><i class=\\\"glyphicon glyphicon-ok\\\"></i></span>\\n                        <span *ngIf=\\\"item.isCancel\\\"><i class=\\\"glyphicon glyphicon-ban-circle\\\"></i></span>\\n                        <span *ngIf=\\\"item.isError\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></span>\\n                    </td>\\n                    <td nowrap>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-xs\\\"\\n                                (click)=\\\"item.upload()\\\" [disabled]=\\\"item.isReady || item.isUploading || item.isSuccess\\\">\\n                            <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload\\n                        </button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\"\\n                                (click)=\\\"item.cancel()\\\" [disabled]=\\\"!item.isUploading\\\">\\n                            <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span> Cancel\\n                        </button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\"\\n                                (click)=\\\"item.remove()\\\">\\n                            <span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove\\n                        </button>\\n                    </td>\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n<div *ngIf=\\\"isFormLoaded\\\">\\n        <div *ngIf=\\\"!isApplicationFilled\\\">\\n                <form (ngSubmit)=\\\"onSaveForm()\\\" [formGroup]=\\\"ProfileForm\\\">\\n                    <h3>{{FormTitle}}</h3>\\n                    \\n                    <div formArrayName=\\\"customcontrols\\\" *ngFor=\\\"let currsection of ProfileForm.get('customcontrols').controls; let currsectionindex = index;\\\">\\n                        <h4>{{FormLayout.Sections[currsectionindex][0].SectionName}}</h4>\\n            \\n                        <div *ngFor=\\\"let subsection of currsection.controls; let subindex = index\\\" [formArrayName]=\\\"currsectionindex\\\">\\n                            <hr>\\n                            <div *ngFor=\\\"let field of FormLayout.Sections[currsectionindex][subindex].Fields; let fieldindex = index\\\" [formGroupName]=\\\"subindex\\\">\\n                                <div [ngSwitch]=\\\"field.FieldType\\\">\\n                                    <label>{{field.FieldName}}</label>\\n            \\n                                    <!-----------------------For Radio Button------------------>\\n                                    <div *ngSwitchCase=\\\"'Radio'\\\">\\n                                        <div *ngFor=\\\"let option of field.options;let optionindex = index\\\">\\n                                            {{option}}\\n                                            <input class=\\\"\\\" type=\\\"radio\\\" [formControlName]=\\\"fieldindex\\\" [value]=\\\"option\\\">\\n                                        </div>\\n                                    </div>\\n                                    <!-----------------------End Radio Button------------------>\\n            \\n                                    <!-----------------------For Checkbox Button------------------>\\n                                    <div *ngSwitchCase=\\\"'Checkbox'\\\">\\n                                        <div *ngFor=\\\"let option of field.options; let optionindex = index\\\" [formArrayName]=\\\"fieldindex\\\">\\n                                            {{option}}\\n                                            <input class=\\\"\\\" type=\\\"checkbox\\\" [formControlName]=\\\"optionindex\\\">\\n                                        </div>\\n                                    </div>\\n                                    <!-----------------------End Checkbox Button------------------>\\n            \\n                                    <!-----------------------For Textbox Button------------------>\\n                                    <div *ngSwitchCase=\\\"'Textbox'\\\" class=\\\"form-group\\\">\\n                                        <input class=\\\"form-control\\\" type=\\\"text\\\" [formControlName]=\\\"fieldindex\\\">\\n                                    </div>\\n                                    <!----------------------End Textbox Button------------------>\\n            \\n                                    <!-----------------------For Paragraph Button------------------>\\n                                    <div *ngSwitchCase=\\\"'Textarea'\\\" class=\\\"form-group\\\">\\n                                        <textarea class=\\\"form-control\\\" [formControlName]=\\\"fieldindex\\\"></textarea>\\n                                    </div>\\n                                    <!----------------------End Paragraph Button------------------>\\n            \\n                                    <!-----------------------For Dropbox Button------------------>\\n                                    <div *ngSwitchCase=\\\"'Dropdown'\\\" class=\\\"form-group\\\">\\n                                        <select class=\\\"form-control\\\" [formControlName]=\\\"fieldindex\\\">\\n                                            <option selected disabled>Choose one</option>\\n                                            <option *ngFor=\\\"let option of field.options;\\\">{{option}}</option>\\n                                        </select>\\n                                    </div>\\n                                    <!----------------------End Dropbox Button------------------>\\n            \\n                                    <!-----------------------For Calendar Button------------------>\\n                                    <div *ngSwitchCase=\\\"'Calendar'\\\" class=\\\"form-group\\\">\\n                                        <input class=\\\"form-control\\\" type=\\\"date\\\" [formControlName]=\\\"fieldindex\\\" />\\n                                    </div>\\n                                    <!----------------------End Calendar Button------------------>\\n            \\n                                    <!-----------------------For Countries Dropbox Button------------------>\\n                                    <div *ngSwitchCase=\\\"'Country'\\\" class=\\\"form-group\\\">\\n                                        <select (change)=\\\"onSelectParent(currsectionindex, subindex, fieldindex, $event.target.value)\\\" class=\\\"form-control input-lg\\\"\\n                                            [formControlName]=\\\"fieldindex\\\">\\n                                            <option selected disabled>Select Country</option>\\n                                            <option *ngFor=\\\"let option of field.options\\\" value={{option.CountryName}}>{{option.CountryName}}</option>\\n                                        </select>\\n                                    </div>\\n                                    <!----------------------End CustomerType Dropbox Button------------------>\\n            \\n                                    <!-----------------------For State Dropbox Button------------------>\\n                                    <div *ngSwitchCase=\\\"'State'\\\" class=\\\"form-group\\\">\\n                                        <select (change)=\\\"onSelectParent(currsectionindex, subindex, fieldindex, $event.target.value)\\\" class=\\\"form-control input-lg\\\"\\n                                            [formControlName]=\\\"fieldindex\\\">\\n                                            <option selected disabled>Select State</option>\\n                                            <option *ngFor=\\\"let option of field.options\\\" value={{option.StateName}}>{{option.StateName}}</option>\\n                                        </select>\\n                                        <!-- <select>\\n                                                <option selected disabled>Choose one</option>\\n                                                <option *ngFor=\\\"let option of field.options;\\\">{{option}}</option>\\n                                            </select> -->\\n                                    </div>\\n                                    <!----------------------End State Dropbox Button------------------>\\n            \\n                                    <!-----------------------For City Dropbox Button------------------>\\n                                    <div *ngSwitchCase=\\\"'City'\\\" class=\\\"form-group\\\">\\n                                        <select class=\\\"form-control input-lg\\\" [formControlName]=\\\"fieldindex\\\">\\n                                            <option selected disabled>Select City</option>\\n                                            <option *ngFor=\\\"let option of field.options\\\" value={{option}}>{{option}}</option>\\n                                        </select>\\n                                        <!-- <select>\\n                                                    <option selected disabled>Choose one</option>\\n                                                    <option *ngFor=\\\"let option of field.options;\\\">{{option}}</option>\\n                                                </select> -->\\n                                    </div>\\n                                    <!----------------------End City Dropbox Button------------------>\\n            \\n                                    <!-----------------------For CustomerType Dropbox Button------------------>\\n                                    <div *ngSwitchCase=\\\"'Type'\\\" class=\\\"form-group\\\">\\n                                        <select (change)=\\\"onSelectParent(currsectionindex, subindex, fieldindex, $event.target.value)\\\" class=\\\"form-control input-lg\\\"\\n                                            [formControlName]=\\\"fieldindex\\\">\\n                                            <option selected disabled>Select Customer Type</option>\\n                                            <option *ngFor=\\\"let option of field.options\\\" value={{option.name}}>{{option.name}}</option>\\n                                        </select>\\n            \\n                                        <!-- <select [formControlName]=\\\"fieldindex\\\"> \\n                                    <option selected disabled>Choose one</option>\\n                                    <option *ngFor=\\\"let option of field.options;\\\"value= {{country.id}}>{{country.name}}</option>\\n                                </select>-->\\n                                    </div>\\n                                    <!----------------------End CustomerType Dropbox Button------------------>\\n            \\n                                    <!-----------------------For Installation Type Dropbox Button------------------>\\n                                    <div *ngSwitchCase=\\\"'InstallationType'\\\" class=\\\"form-group\\\">\\n                                        <select (change)=\\\"onSelectParent(currsectionindex, subindex, fieldindex, $event.target.value)\\\" class=\\\"form-control input-lg\\\"\\n                                            [formControlName]=\\\"fieldindex\\\">\\n                                            <option selected disabled>Select Installation Type</option>\\n                                            <option *ngFor=\\\"let option of field.options\\\" value={{option.name}}>{{option.name}}</option>\\n                                        </select>\\n                                        <!-- <select>\\n                                            <option selected disabled>Choose one</option>\\n                                            <option *ngFor=\\\"let option of field.options;\\\">{{option}}</option>\\n                                        </select> -->\\n                                    </div>\\n                                    <!----------------------End Installation Type Dropbox Button------------------>\\n                                    <!-----------------------For Designation Dropbox Button------------------>\\n                                    <div *ngSwitchCase=\\\"'Designation'\\\" class=\\\"form-group\\\">\\n                                        <select class=\\\"form-control input-lg\\\" [formControlName]=\\\"fieldindex\\\">\\n                                            <option selected disabled>Select Designation</option>\\n                                            <option *ngFor=\\\"let option of field.options\\\" value={{option.name}}>{{option.name}}</option>\\n                                        </select>\\n                                    </div>\\n                                    <!----------------------End Designation Dropbox Button------------------>\\n            \\n                                </div>\\n                            </div>\\n                        </div>\\n                        <span>\\n                            <a *ngIf=\\\"FormLayout.Sections[currsectionindex][0].CanBeMultiple\\\" (click)=\\\"AddSubSection(currsectionindex)\\\">Add Section</a>\\n                        </span>\\n                        <hr>\\n                    </div>\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\n                </form>\\n            </div>\\n            \\n            <div *ngIf=\\\"isApplicationFilled\\\">\\n                <h3 style=\\\"padding-top: 30px;\\\">{{FormTitle}}</h3>\\n                <form (ngSubmit)=\\\"onSaveForm()\\\" [formGroup]=\\\"ProfileForm\\\">\\n                    <div formArrayName=\\\"customcontrols\\\" *ngFor=\\\"let currsection of ProfileForm.get('customcontrols').controls; let currsectionindex = index;\\\" style=\\\"width:40%\\\">\\n                        <h4 style=\\\"margin-top: 30px\\\">{{FormLayout.Sections[currsectionindex][0].SectionName}}</h4>\\n            \\n                        <!-- Sections that cannot be multiple in Non Edit Mode -->\\n                        <ng-container *ngIf=\\\"!FormLayout.Sections[currsectionindex][0].CanBeMultiple && !FormLayout.Sections[currsectionindex][0].isEditMode\\\">\\n                            <div *ngFor=\\\"let field of FormLayout.Sections[currsectionindex][0].Fields; let fieldindex = index\\\" class=\\\"row\\\">\\n                                <label class=\\\"col-md-6\\\">{{field.FieldName}}:</label> <div  class=\\\"col-md-6\\\">{{GetFieldValue(currsectionindex,0,fieldindex)}}</div>\\n                            </div>\\n                            <span>\\n                                <a (click)=\\\"EditSubSection(currsectionindex, 0)\\\">Edit {{FormLayout.Sections[currsectionindex][0].SectionName}}</a>\\n                            </span>\\n                        </ng-container>\\n           \\n                        <!-- Sections that cannot be multiple in Edit Mode -->\\n                        <ng-container *ngIf=\\\"!FormLayout.Sections[currsectionindex][0].CanBeMultiple && FormLayout.Sections[currsectionindex][0].isEditMode\\\">\\n                            <ng-container *ngFor=\\\"let subsection of currsection.controls; let subindex = index\\\" [formArrayName]=\\\"currsectionindex\\\">\\n                                <ng-container *ngFor=\\\"let field of FormLayout.Sections[currsectionindex][0].Fields; let fieldindex = index\\\" [formGroupName]=\\\"subindex\\\">\\n                                    <label>{{field.FieldName}}:</label> \\n                                    <ng-container [ngSwitch]=\\\"field.FieldType\\\">\\n                                        <!-- <label>{{field.FieldName}}</label> -->\\n            \\n                                        <!-----------------------For Radio Button------------------>\\n                                        <div *ngSwitchCase=\\\"'Radio'\\\">\\n                                            <ng-container *ngFor=\\\"let option of field.options;let optionindex = index\\\">\\n                                                {{option}}\\n                                                <input class=\\\"\\\" type=\\\"radio\\\" [formControlName]=\\\"fieldindex\\\" [value]=\\\"option\\\">\\n                                            </ng-container>\\n                                        </div>\\n            \\n                                        <!-----------------------End Radio Button------------------>\\n            \\n                                        <!-----------------------For Checkbox Button------------------>\\n                                        <div *ngSwitchCase=\\\"'Checkbox'\\\">\\n                                            <ng-container *ngFor=\\\"let option of field.options; let optionindex = index\\\" [formArrayName]=\\\"fieldindex\\\">\\n                                                {{option}}\\n                                                <input type=\\\"checkbox\\\" [formControlName]=\\\"optionindex\\\">\\n                                            </ng-container>\\n                                        </div>\\n            \\n                                        <!-----------------------End Checkbox Button------------------>\\n            \\n                                        <!-----------------------For Textbox Button------------------>\\n                                        <div *ngSwitchCase=\\\"'Textbox'\\\" class=\\\"form-group\\\">\\n                                            <input class=\\\"form-control\\\" type=\\\"text\\\" [formControlName]=\\\"fieldindex\\\">\\n                                        </div>\\n            \\n                                        <!----------------------End Textbox Button------------------>\\n            \\n                                        <!-----------------------For Paragraph Button------------------>\\n                                        <div *ngSwitchCase=\\\"'Textarea'\\\" class=\\\"form-group\\\">\\n                                            <textarea class=\\\"form-control\\\" [formControlName]=\\\"fieldindex\\\"></textarea>\\n                                        </div>\\n            \\n                                        <!----------------------End Paragraph Button------------------>\\n            \\n                                        <!-----------------------For Dropbox Button------------------>\\n                                        <div *ngSwitchCase=\\\"'Dropdown'\\\" class=\\\"form-group\\\">\\n                                            <select class=\\\"form-control\\\" [formControlName]=\\\"fieldindex\\\">\\n                                                <option selected disabled>Choose one</option>\\n                                                <option *ngFor=\\\"let option of field.options;\\\">{{option}}</option>\\n                                            </select>\\n                                        </div>\\n            \\n            \\n                                        <!----------------------End Dropbox Button------------------>\\n            \\n                                        <!-----------------------For Calendar Button------------------>\\n                                        <div *ngSwitchCase=\\\"'Calendar'\\\" class=\\\"form-group\\\">\\n                                            <input class=\\\"form-control\\\" type=\\\"date\\\" [formControlName]=\\\"fieldindex\\\" />\\n                                        </div>\\n            \\n                                        <!----------------------End Calendar Button------------------>\\n            \\n                                        <!-----------------------For Countries Dropbox Button------------------>\\n                                        <div *ngSwitchCase=\\\"'Country'\\\" class=\\\"form-group\\\">\\n                                            <select (change)=\\\"onSelectParent(currsectionindex, subindex, fieldindex, $event.target.value)\\\" class=\\\"form-control input-lg\\\"\\n                                                [formControlName]=\\\"fieldindex\\\">\\n                                                <option selected disabled>Select Country</option>\\n                                                <option *ngFor=\\\"let option of field.options\\\" value={{option.CountryName}}>{{option.CountryName}}</option>\\n                                            </select>\\n                                        </div>\\n            \\n                                        <!----------------------End CustomerType Dropbox Button------------------>\\n            \\n                                        <!-----------------------For State Dropbox Button------------------>\\n                                        <div *ngSwitchCase=\\\"'State'\\\" class=\\\"form-group\\\">\\n                                            <select (change)=\\\"onSelectParent(currsectionindex, subindex, fieldindex, $event.target.value)\\\" class=\\\"form-control input-lg\\\"\\n                                                [formControlName]=\\\"fieldindex\\\">\\n                                                <option selected disabled>Select State</option>\\n                                                <option *ngFor=\\\"let option of field.options\\\" value={{option.StateName}}>{{option.StateName}}</option>\\n                                            </select>\\n                                        </div>\\n            \\n                                        <!----------------------End State Dropbox Button------------------>\\n            \\n                                        <!-----------------------For City Dropbox Button------------------>\\n                                        <div *ngSwitchCase=\\\"'City'\\\" class=\\\"form-group\\\">\\n                                            <select class=\\\"form-control input-lg\\\" [formControlName]=\\\"fieldindex\\\">\\n                                                <option selected disabled>Select City</option>\\n                                                <option *ngFor=\\\"let option of field.options\\\" value={{option}}>{{option}}</option>\\n                                            </select>\\n                                        </div>\\n            \\n                                        <!----------------------End City Dropbox Button------------------>\\n            \\n                                        <!-----------------------For CustomerType Dropbox Button------------------>\\n                                        <div *ngSwitchCase=\\\"'Type'\\\" class=\\\"form-group\\\">\\n                                            <select (change)=\\\"onSelectParent(currsectionindex, subindex, fieldindex, $event.target.value)\\\" class=\\\"form-control input-lg\\\"\\n                                                [formControlName]=\\\"fieldindex\\\">\\n                                                <option selected disabled>Select Customer Type</option>\\n                                                <option *ngFor=\\\"let option of field.options\\\" value={{option.name}}>{{option.name}}</option>\\n                                            </select>\\n                                        </div>\\n            \\n                                        <!----------------------End CustomerType Dropbox Button------------------>\\n            \\n                                        <!-----------------------For Installation Type Dropbox Button------------------>\\n                                        <div *ngSwitchCase=\\\"'InstallationType'\\\" class=\\\"form-group\\\">\\n                                            <select (change)=\\\"onSelectParent(currsectionindex, subindex, fieldindex, $event.target.value)\\\" class=\\\"form-control input-lg\\\"\\n                                                [formControlName]=\\\"fieldindex\\\">\\n                                                <option selected disabled>Select Installation Type</option>\\n                                                <option *ngFor=\\\"let option of field.options\\\" value={{option.name}}>{{option.name}}</option>\\n                                            </select>\\n                                        </div>\\n            \\n                                        <!----------------------End Installation Type Dropbox Button------------------>\\n                                        <!-----------------------For Designation Dropbox Button------------------>\\n                                        <div *ngSwitchCase=\\\"'Designation'\\\" class=\\\"form-group\\\">\\n                                            <select class=\\\"form-control input-lg\\\" [formControlName]=\\\"fieldindex\\\">\\n                                                <option selected disabled>Select Designation</option>\\n                                                <option *ngFor=\\\"let option of field.options\\\" value={{option.name}}>{{option.name}}</option>\\n                                            </select>\\n                                        </div>\\n            \\n                                        <!----------------------End Designation Dropbox Button------------------>\\n            \\n                                    </ng-container>\\n                                </ng-container>\\n                            </ng-container>\\n                            <a type=\\\"button\\\" (click)=\\\"onSavesubSection(currsectionindex,0)\\\">Done</a>\\n                        </ng-container>\\n            \\n                        <!-- Sections that can be multiple -->\\n                        \\n                        <table class=\\\"table table-bordered table-striped\\\" *ngIf=\\\"FormLayout.Sections[currsectionindex][0].CanBeMultiple\\\">\\n                            <tr>\\n                                <th *ngFor=\\\"let field of FormLayout.Sections[currsectionindex][0].Fields; let fieldindex = index\\\">\\n                                    {{field.FieldName}}\\n                                </th>\\n                                <th></th>\\n                                <th></th>\\n                            </tr>\\n                            <ng-container *ngFor=\\\"let subsection of currsection.controls; let subindex = index\\\" [formArrayName]=\\\"currsectionindex\\\">\\n                                    <!-- If Sub Section/Row is in Non Edit Mode  -->\\n                            <tr *ngIf=\\\"!FormLayout.Sections[currsectionindex][subindex].isEditMode\\\">\\n                                <td *ngFor=\\\"let field of FormLayout.Sections[currsectionindex][0].Fields; let fieldindex = index\\\">\\n                                    {{GetFieldValue(currsectionindex,subindex,fieldindex)}}\\n                                </td>\\n                                <td>\\n                                    <a *ngIf=\\\"FormLayout.Sections[currsectionindex].length>1\\\" (click)=\\\"RemoveSubSection(currsectionindex,subindex)\\\">Remove</a>\\n                                </td>\\n                                <td>\\n                                    <span>\\n                                        <a (click)=\\\"EditSubSection(currsectionindex, subindex)\\\">Edit</a>\\n                                    </span>\\n                                </td>\\n                            </tr>\\n            \\n                            <!-- If Sub Section/Row is in Edit Mode  -->\\n            \\n                            <tr *ngIf=\\\"FormLayout.Sections[currsectionindex][subindex].isEditMode\\\">\\n                                <ng-container *ngFor=\\\"let field of FormLayout.Sections[currsectionindex][subindex].Fields; let fieldindex = index\\\" [formGroupName]=\\\"subindex\\\">\\n                                    <ng-container [ngSwitch]=\\\"field.FieldType\\\">\\n                                        <!-- <label>{{field.FieldName}}</label> -->\\n            \\n                                        <!-----------------------For Radio Button------------------>\\n                                        <td *ngSwitchCase=\\\"'Radio'\\\">\\n                                            <ng-container *ngFor=\\\"let option of field.options;let optionindex = index\\\">\\n                                                {{option}}\\n                                                <input class=\\\"\\\" type=\\\"radio\\\" [formControlName]=\\\"fieldindex\\\" [value]=\\\"option\\\">\\n                                            </ng-container>\\n                                        </td>\\n            \\n                                        <!-----------------------End Radio Button------------------>\\n            \\n                                        <!-----------------------For Checkbox Button------------------>\\n                                        <td *ngSwitchCase=\\\"'Checkbox'\\\">\\n                                            <ng-container *ngFor=\\\"let option of field.options; let optionindex = index\\\" [formArrayName]=\\\"fieldindex\\\">\\n                                                {{option}}\\n                                                <input type=\\\"checkbox\\\" [formControlName]=\\\"optionindex\\\">\\n                                            </ng-container>\\n                                        </td>\\n            \\n                                        <!-----------------------End Checkbox Button------------------>\\n            \\n                                        <!-----------------------For Textbox Button------------------>\\n                                        <td *ngSwitchCase=\\\"'Textbox'\\\" class=\\\"form-group\\\">\\n                                            <input class=\\\"form-control\\\" type=\\\"text\\\" [formControlName]=\\\"fieldindex\\\">\\n                                        </td>\\n            \\n                                        <!----------------------End Textbox Button------------------>\\n            \\n                                        <!-----------------------For Paragraph Button------------------>\\n                                        <td *ngSwitchCase=\\\"'Textarea'\\\" class=\\\"form-group\\\">\\n                                            <textarea class=\\\"form-control\\\" [formControlName]=\\\"fieldindex\\\"></textarea>\\n                                        </td>\\n            \\n                                        <!----------------------End Paragraph Button------------------>\\n            \\n                                        <!-----------------------For Dropbox Button------------------>\\n                                        <td *ngSwitchCase=\\\"'Dropdown'\\\" class=\\\"form-group\\\">\\n                                            <select class=\\\"form-control\\\" [formControlName]=\\\"fieldindex\\\">\\n                                                <option selected disabled>Choose one</option>\\n                                                <option *ngFor=\\\"let option of field.options;\\\">{{option}}</option>\\n                                            </select>\\n                                        </td>\\n            \\n            \\n                                        <!----------------------End Dropbox Button------------------>\\n            \\n                                        <!-----------------------For Calendar Button------------------>\\n                                        <td *ngSwitchCase=\\\"'Calendar'\\\" class=\\\"form-group\\\">\\n                                            <input class=\\\"form-control\\\" type=\\\"date\\\" [formControlName]=\\\"fieldindex\\\" />\\n                                        </td>\\n            \\n                                        <!----------------------End Calendar Button------------------>\\n            \\n                                        <!-----------------------For Countries Dropbox Button------------------>\\n                                        <td *ngSwitchCase=\\\"'Country'\\\" class=\\\"form-group\\\">\\n                                            <select (change)=\\\"onSelectParent(currsectionindex, subindex, fieldindex, $event.target.value)\\\" class=\\\"form-control input-lg\\\"\\n                                                [formControlName]=\\\"fieldindex\\\">\\n                                                <option selected disabled>Select Country</option>\\n                                                <option *ngFor=\\\"let option of field.options\\\" value={{option.CountryName}}>{{option.CountryName}}</option>\\n                                            </select>\\n                                        </td>\\n            \\n                                        <!----------------------End CustomerType Dropbox Button------------------>\\n            \\n                                        <!-----------------------For State Dropbox Button------------------>\\n                                        <td *ngSwitchCase=\\\"'State'\\\" class=\\\"form-group\\\">\\n                                            <select (change)=\\\"onSelectParent(currsectionindex, subindex, fieldindex, $event.target.value)\\\" class=\\\"form-control input-lg\\\"\\n                                                [formControlName]=\\\"fieldindex\\\">\\n                                                <option selected disabled>Select State</option>\\n                                                <option *ngFor=\\\"let option of field.options\\\" value={{option.StateName}}>{{option.StateName}}</option>\\n                                            </select>\\n                                        </td>\\n            \\n                                        <!----------------------End State Dropbox Button------------------>\\n            \\n                                        <!-----------------------For City Dropbox Button------------------>\\n                                        <td *ngSwitchCase=\\\"'City'\\\" class=\\\"form-group\\\">\\n                                            <select class=\\\"form-control input-lg\\\" [formControlName]=\\\"fieldindex\\\">\\n                                                <option selected disabled>Select City</option>\\n                                                <option *ngFor=\\\"let option of field.options\\\" value={{option}}>{{option}}</option>\\n                                            </select>\\n                                        </td>\\n            \\n                                        <!----------------------End City Dropbox Button------------------>\\n            \\n                                        <!-----------------------For CustomerType Dropbox Button------------------>\\n                                        <td *ngSwitchCase=\\\"'Type'\\\" class=\\\"form-group\\\">\\n                                            <select (change)=\\\"onSelectParent(currsectionindex, subindex, fieldindex, $event.target.value)\\\" class=\\\"form-control input-lg\\\"\\n                                                [formControlName]=\\\"fieldindex\\\">\\n                                                <option selected disabled>Select Customer Type</option>\\n                                                <option *ngFor=\\\"let option of field.options\\\" value={{option.name}}>{{option.name}}</option>\\n                                            </select>\\n                                        </td>\\n            \\n                                        <!----------------------End CustomerType Dropbox Button------------------>\\n            \\n                                        <!-----------------------For Installation Type Dropbox Button------------------>\\n                                        <td *ngSwitchCase=\\\"'InstallationType'\\\" class=\\\"form-group\\\">\\n                                            <select (change)=\\\"onSelectParent(currsectionindex, subindex, fieldindex, $event.target.value)\\\" class=\\\"form-control input-lg\\\"\\n                                                [formControlName]=\\\"fieldindex\\\">\\n                                                <option selected disabled>Select Installation Type</option>\\n                                                <option *ngFor=\\\"let option of field.options\\\" value={{option.name}}>{{option.name}}</option>\\n                                            </select>\\n                                        </td>\\n            \\n                                        <!----------------------End Installation Type Dropbox Button------------------>\\n                                        <!-----------------------For Designation Dropbox Button------------------>\\n                                        <td *ngSwitchCase=\\\"'Designation'\\\" class=\\\"form-group\\\">\\n                                            <select class=\\\"form-control input-lg\\\" [formControlName]=\\\"fieldindex\\\">\\n                                                <option selected disabled>Select Designation</option>\\n                                                <option *ngFor=\\\"let option of field.options\\\" value={{option.name}}>{{option.name}}</option>\\n                                            </select>\\n                                        </td>\\n            \\n                                        <!----------------------End Designation Dropbox Button------------------>\\n            \\n                                    </ng-container>\\n                                </ng-container>\\n                                <td>\\n                                    <a *ngIf=\\\"FormLayout.Sections[currsectionindex].length>1\\\" (click)=\\\"RemoveSubSection(currsectionindex,subindex)\\\">Remove</a>\\n                                </td>\\n                                <td>\\n                                    <a type=\\\"button\\\" (click)=\\\"onSavesubSection(currsectionindex,subindex)\\\">Done</a>\\n                                </td>\\n                            </tr>\\n            \\n                            </ng-container>\\n                        </table>\\n                        <span>\\n                            <a class=\\\"\\\" *ngIf=\\\"FormLayout.Sections[currsectionindex][0].CanBeMultiple\\\" (click)=\\\"AddSubSection(currsectionindex)\\\">Add {{FormLayout.Sections[currsectionindex][0].SectionName}}</a>\\n                        </span>\\n                        \\n                        <div *ngFor=\\\"let subsection of currsection.controls; let subindex = index\\\">\\n                        </div>\\n            \\n                    </div>\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"isFormSaved != 2\\\" style=\\\"margin-top: 20px\\\">Save Changes</button>\\n                </form>\\n                <div class=\\\"panel panel-danger\\\" style=\\\"margin:10px\\\" *ngIf=\\\"isFormSaved == -1\\\">\\n                    <div class=\\\"panel-body\\\">Details couldn\\\\'t be saved.</div>\\n                </div>\\n            \\n                <div class=\\\"panel panel-success\\\" style=\\\"margin:10px\\\" *ngIf=\\\"isFormSaved == 1\\\">\\n                    <div class=\\\"panel-body\\\">Details saved Sucessfully.</div>\\n                </div>\\n            </div>\\n            \\n            <!-- Profile Already Filled-->\\n</div>\\n<div *ngIf=\\\"!isFormLoaded\\\">\\n    <div id=\\\"loading\\\" class=\\\"overlay\\\">\\n        <div class=\\\"loader_div\\\">\\n            <img src=\\\"loader.gif\\\"/><br><br>\\n            <b class=\\\"loadingtext\\\">Loading...</b>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-form/applicant-form.component.html\n// module id = 496\n// module chunks = 1","module.exports = \"<style>\\n.table-bordered.table-condensed.table-striped tr td:nth-child(6),.table-bordered.table-condensed.table-striped tr th:nth-child(6)  {\\n    display: none;\\n}\\n</style>\\n\\n\\n  <ng-container *ngIf=\\\"!isApplicantDetailsLoaded; else DetailsLoaded\\\">\\n    <div id=\\\"loading\\\" class=\\\"overlay\\\">\\n      <div class=\\\"loader_div\\\">\\n          <img src=\\\"loader.gif\\\"/><br><br>\\n          <b class=\\\"loadingtext\\\">Loading...</b>\\n      </div>\\n  </div>\\n  </ng-container>\\n  <ng-template #DetailsLoaded>\\n    <div class=\\\"row\\\">\\n    <div class=\\\"col-md-1\\\" *ngIf=\\\"ApplicantsDetails.length>0\\\">\\n      <nav style=\\\"background:  #0067ad;\\n        width: 224px;\\n        left: 0;\\n        position: fixed;\\n        height: -webkit-fill-available;\\n        padding-left: 25px;color:#fff;\\\">\\n      <h3 style=\\\"margin-bottom: 25px;font-weight:600\\\">\\n        Applicant List\\n      </h3>\\n      <em>Select Form Type</em>\\n      <ul>\\n        <li *ngFor=\\\"let item of ApplicantsDetails;let j=index\\\">\\n          <a (click)=\\\"OnSelectApplicantType(j)\\\" style=\\\"color: #fff;\\\">{{item.type}}</a>\\n        </li>\\n      </ul>\\n    </nav>\\n    </div>\\n\\n    <div class=\\\"col-md-11\\\" *ngIf=\\\"SelectedType.count_applicants > 0\\\">\\n      <h3>Applicant list</h3>\\n      <!---->\\n      <!-- <select [(ngModel)]=\\\"FilterType\\\">\\n            <option selected disabled>Choose one</option>\\n            <option *ngFor=\\\"let col of SelectedType.fields\\\">{{col.FieldName}}</option>\\n          </select> -->\\n    <div class=\\\"row\\\" style=\\\"margin-top: 30px\\\">\\n      <div class=\\\"col-md-12 form-group\\\">\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"FilterText\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"OnSearch()\\\">Search</button>\\n        <button class=\\\"btn btn-default\\\" (click)=\\\"OnClearSearch()\\\">Clear Search</button>\\n      </div>\\n \\n      <div class=\\\"col-md-12\\\" style=\\\"overflow: scroll;margin-top: 30px\\\">\\n      <!-- <button class=\\\"btn btn-success\\\" (click)=\\\"ExportSelectedProfiles()\\\">Export to pdf</button> -->\\n      <!---When Filter Text is not empty show filtered results-->\\n      <table class=\\\"table-bordered table-condensed table-striped\\\" style=\\\"width:100%\\\">\\n        <tr>\\n         \\n          <th *ngFor=\\\"let col of SelectedType.fields\\\" style=\\\"font-weight: 600\\\">\\n            {{col.FieldName}}\\n          </th>\\n          <th></th>\\n        </tr>\\n        <ng-container *ngFor=\\\"let applicant of SelectedType.applicants;let j=index\\\">\\n          <tr *ngIf=\\\"isApplicantFiltered[j]\\\">\\n           \\n            <td *ngFor=\\\"let col of SelectedType.fields;let k=index\\\" style=\\\"min-width: 100px\\\">\\n                <span *ngIf=\\\"k==0\\\">              \\n                    <a [routerLink]=\\\"['../ViewProfile',applicant.applicantID]\\\"> {{applicant[col.FieldName]}}</a>\\n                  </span>\\n                  <span *ngIf=\\\"k!=0\\\">              \\n                       {{applicant[col.FieldName]}}\\n                    </span>\\n            </td>\\n            <td>\\n              <a [routerLink]=\\\"['../ViewProfile',applicant.applicantID]\\\">View Profile</a>\\n            </td>\\n          </tr>\\n          <!-- <tr *ngIf=\\\"isApplicantFiltered[j]\\\">\\n                <input type=\\\"checkbox\\\" [checked]=\\\"isApplicantChecked[j]\\\" (change)=\\\"ToggleApplicantSelection(j)\\\">\\n                <td *ngFor=\\\"let col of SelectedType.fields | filterBy:userFilter\\\">\\n                  {{applicant[\\\"Personal Details\\\"][0][col.FieldName]}}\\n                </td>\\n              </tr> -->\\n\\n          <!--PDF template-->\\n          <div [hidden]=true #ApplicantProfiles>\\n            <ul>\\n              <li *ngFor=\\\"let col of SelectedType.fields\\\">\\n                <label>{{col.FieldName}}:</label>{{applicant[col.FieldName]}}\\n              </li>\\n            </ul>\\n          </div>\\n        </ng-container>\\n      </table>\\n    </div>\\n  </div>\\n      \\n    </div>\\n  </div>\\n  </ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-list/applicant-list.component.html\n// module id = 497\n// module chunks = 1","module.exports = \"<ng-container *ngIf=\\\"!isProfileLoaded; else ProfileLoaded\\\">\\n    <div id=\\\"loading\\\" class=\\\"overlay\\\">\\n        <div class=\\\"loader_div\\\">\\n            <img src=\\\"loader.gif\\\" /><br><br>\\n            <b class=\\\"loadingtext\\\">Loading...</b>\\n        </div>\\n    </div>\\n</ng-container>\\n\\n\\n<ng-template #ProfileLoaded>\\n\\n    <h3 style=\\\"padding-top: 30px\\\">{{Form.FormTitle}}</h3>\\n    <select class=\\\"form-control\\\" (change)=\\\"OnSelectTemplate($event)\\\" style=\\\"width: 40%\\\">\\n        <option selected disabled>Select Template</option>\\n        <!-- <option *ngFor=\\\"let col of TemplateList;let j=index\\\">{{col.TemplateTitle}}</option> -->\\n        <option value=\\\"1\\\" selected=\\\"selected\\\">OCS Template</option>\\n        <option value=\\\"2\\\" >Seadrill Template</option>\\n        \\n      </select>\\n\\n    <div #ApplicantProfile style=\\\"display: none;\\\">\\n        <div *ngFor=\\\"let section of Form.Sections;let secindex = index\\\">\\n            <h4>{{section.SectionName}}</h4>\\n            <ng-container *ngIf=\\\"!section.CanBeMultiple\\\">\\n                <div *ngFor=\\\"let field of section.Fields; let fieldindex = index\\\">\\n                    <ng-container *ngIf=\\\"field.isFieldChecked\\\" class=\\\"form-control\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-2\\\"><label> {{field.FieldName}}:</label></div>\\n                            <div class=\\\"col-md-2\\\">{{GetFieldValue(section.SectionID, 0, field.FieldID)}}</div>\\n                        </div>\\n                    </ng-container>\\n                </div>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"section.CanBeMultiple\\\">\\n                <table class=\\\"table table-striped table-bordered\\\">\\n                    <tr>\\n                        <ng-container *ngFor=\\\"let field of section.Fields; let fieldindex = index\\\">\\n                            <th *ngIf=\\\"field.isFieldChecked\\\">\\n                                {{field.FieldName}}\\n                            </th>\\n                        </ng-container>\\n                    </tr>\\n                    <tr *ngFor=\\\"let subsection of Applicant[section.SectionID]; let subindex = index\\\">\\n                        <ng-container *ngFor=\\\"let field of section.Fields; let fieldindex = index\\\">\\n                            <td *ngIf=\\\"field.isFieldChecked\\\">\\n                                {{GetFieldValue(section.SectionID, subindex, field.FieldID)}}\\n                            </td>\\n                        </ng-container>\\n                    </tr>\\n                </table>\\n            </ng-container>\\n            <hr>\\n        </div>\\n    </div>\\n<div id=\\\"printable_format_2\\\" *ngIf=\\\"format_2\\\">\\n    <table class=\\\"table table-bordered\\\" style=\\\"margin-top:20px\\\">\\n        <tbody>\\n            <tr>\\n                <td style=\\\"width:65%; font-size: 27px\\\"><span style=\\\"font-weight:bold\\\">{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[0].FieldID)}}</span> <span style=\\\"font-weight:bold\\\">{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[2].FieldID)}}</span></td>\\n                <td>Phone no : {{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[5].FieldID)}}</td>\\n            </tr>\\n            <tr>\\n                <td style=\\\"font-weight:bold\\\">\\n                    <p>Email : {{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[6].FieldID)}}</p>\\n                    <p>Job applied for : {{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[3].FieldID)}}</p>\\n                </td>\\n                <td>\\n                    <p>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[4].FieldID)}}</p>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n\\n<h4 style=\\\"font-weight:bold\\\">Experience Details</h4>\\n    <table class=\\\"table table-bordered\\\" style=\\\"margin-top:20px\\\" *ngFor=\\\"let subsection of Applicant[Form.Sections[1].SectionID]; let subindex = index\\\">\\n        <tbody>\\n            <tr style=\\\"background-color:#c0c0c0\\\">\\n                <th>Company Name</th>\\n                <th>Designation</th>\\n                <th>Service period mmm.yy to mmm.yy</th>\\n            </tr>\\n            <tr>\\n                <td>{{GetFieldValue(Form.Sections[1].SectionID, subindex, Form.Sections[1].Fields[0].FieldID)}}, {{GetFieldValue(Form.Sections[1].SectionID, subindex, Form.Sections[1].Fields[1].FieldID)}} & {{GetFieldValue(Form.Sections[1].SectionID, 0, Form.Sections[1].Fields[2].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[1].SectionID, subindex, Form.Sections[1].Fields[3].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[1].SectionID, subindex, Form.Sections[1].Fields[6].FieldID)}} - {{GetFieldValue(Form.Sections[1].SectionID, subindex, Form.Sections[1].Fields[7].FieldID)}}</td>\\n            </tr>\\n            <tr>\\n                <td colspan=\\\"3\\\">Details of Experience: {{GetFieldValue(Form.Sections[1].SectionID, subindex, Form.Sections[1].Fields[5].FieldID)}}</td>\\n            </tr>\\n        </tbody>\\n    </table>\\n\\n    <table class=\\\"table table-bordered\\\" style=\\\"margin-top:20px\\\">\\n        <tbody>\\n            <tr style=\\\"background-color:#c0c0c0;font-weight:bold\\\">\\n                \\n                <td></td>\\n                <td></td>\\n                <td></td>\\n            </tr>\\n            <tr *ngFor=\\\"let subsection of Applicant[Form.Sections[2].SectionID]; let subindex = index\\\">\\n               <td><span [class.hideElement]=\\\"subindex>0\\\" style=\\\"font-weight:bold\\\">Education</span></td>\\n                <td>{{GetFieldValue(Form.Sections[2].SectionID, subindex, Form.Sections[2].Fields[1].FieldID)}} - {{GetFieldValue(Form.Sections[2].SectionID, subindex, Form.Sections[2].Fields[2].FieldID)}}, {{GetFieldValue(Form.Sections[2].SectionID, subindex, Form.Sections[2].Fields[0].FieldID)}},  {{GetFieldValue(Form.Sections[2].SectionID, subindex, Form.Sections[2].Fields[9].FieldID)}},  {{GetFieldValue(Form.Sections[2].SectionID, subindex, Form.Sections[2].Fields[7].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[2].SectionID, subindex, Form.Sections[2].Fields[6].FieldID)}}</td>\\n            </tr>\\n           \\n            <!-- <tr>\\n                <td></td>\\n                <td>High school <span style=\\\"float:right\\\">Institute name  city  country</span></td>\\n                <td>Date completed mmm.yy</td>\\n            </tr> -->\\n        </tbody>\\n    </table>\\n\\n    <table class=\\\"table table-bordered\\\" style=\\\"margin-top:20px\\\">\\n        <tbody>\\n            <tr *ngFor=\\\"let subsection of Applicant[Form.Sections[3].SectionID]; let subindex = index\\\">\\n                <td><span [class.hideElement]=\\\"subindex>0\\\" style=\\\"font-weight:bold\\\">Trainings</span></td>\\n                <td>{{GetFieldValue(Form.Sections[3].SectionID, subindex, Form.Sections[3].Fields[0].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[3].SectionID, subindex, Form.Sections[3].Fields[1].FieldID)}}</td>\\n            </tr>\\n        </tbody>\\n    </table>\\n\\n\\n    <table class=\\\"table table-bordered\\\" style=\\\"margin-top:20px\\\">\\n        <tbody>\\n            <tr *ngFor=\\\"let subsection of Applicant[Form.Sections[10].SectionID]; let subindex = index\\\">\\n                <td><span [class.hideElement]=\\\"subindex>0\\\" style=\\\"font-weight:bold\\\">Extra-Curricular</span></td>\\n                <td colspan=\\\"4\\\">{{GetFieldValue(Form.Sections[10].SectionID, subindex, Form.Sections[10].Fields[0].FieldID)}}</td>\\n                \\n            </tr>\\n            <tr>\\n                <td style=\\\"font-weight:bold\\\">References</td>\\n                <td>Name</td>\\n                <td>Designation</td>\\n                <td>Company</td>\\n                <td>Contact Info</td>\\n            </tr>\\n            <tr *ngFor=\\\"let subsection of Applicant[Form.Sections[4].SectionID]; let subindex = index\\\">\\n                <td></td>\\n                <td>{{GetFieldValue(Form.Sections[4].SectionID, subindex, Form.Sections[4].Fields[0].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[4].SectionID, subindex, Form.Sections[4].Fields[1].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[4].SectionID, subindex, Form.Sections[4].Fields[2].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[4].SectionID, subindex, Form.Sections[4].Fields[3].FieldID)}}</td>\\n            </tr>\\n            \\n            <tr>\\n                <td style=\\\"font-weight:bold\\\">Work Authorization </td>\\n                <td>India</td>\\n                <td>UAE</td>\\n                <td>Singapore</td>\\n                <td>Malaysia</td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n\\n<div id=\\\"printable_format_1\\\" *ngIf=\\\"format_1\\\" style=\\\"margin-top: 20px\\\">\\n        <div style=\\\"display:flex\\\"><img src=\\\"https://www.ocs.services//images/Oilfield_Consolidated_Services.jpg\\\" style=\\\"margin-left:30px\\\">\\n            <h3 style=\\\"text-decoration: underline;margin-left:20px\\\">OCS Services (India) Private Limited</h3>\\n        </div>\\n        <div style=\\\"display:flex\\\">\\n            <table class=\\\"table table-bordered\\\" style=\\\"margin-top:20px;width:60%\\\">\\n                <tr>\\n                    <td style=\\\"background-color:#c5d9f1;font-weight:bold\\\">Date of submission</td>\\n                    <td>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[23].FieldID)}}</td>\\n                </tr>\\n                <tr>\\n                    <td style=\\\"background-color:#c5d9f1;font-weight:bold\\\">Current Post:</td>\\n                    <td>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[3].FieldID)}}</td>\\n                </tr>\\n                <tr>\\n                    <td style=\\\"background-color:#c5d9f1;font-weight:bold\\\">Post Applied For:</td>\\n                    <td>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[14].FieldID)}}</td>\\n                </tr>\\n                <tr>\\n                    <td style=\\\"background-color:#c5d9f1;font-weight:bold\\\">Pan Card Number:</td>\\n                    <td>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[24].FieldID)}}</td>\\n                </tr>\\n                <tr>\\n                    <td style=\\\"background-color:#c5d9f1;font-weight:bold\\\">Aadhar Card Number:</td>\\n                    <td>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[7].FieldID)}}</td>\\n                </tr>\\n            </table>\\n            <div style=\\\"width:40%\\\"><img src=\\\"http://akdesign.in/dev/images/dummy-male.jpg\\\" style=\\\"display: block;margin: auto;width:50%\\\"></div>\\n        </div>\\n        <h4>PERSONAL DETAILS</h4>\\n        <table class=\\\"table table-bordered\\\" style=\\\"margin-top:20px\\\">\\n            <tr style=\\\";font-weight:bold\\\">\\n                <td style=\\\"background-color:#c5d9f1\\\">Name: As Per Passport</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Last Name</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">First Name</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Middle Name</td>\\n            </tr>\\n            <tr>\\n                <td></td>\\n                <td>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[2].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[0].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[1].FieldID)}}</td>\\n            </tr>\\n        </table>\\n        <table class=\\\"table table-bordered\\\" style=\\\"margin-top:20px\\\">\\n            <tr style=\\\";font-weight:bold\\\">\\n                <td style=\\\"background-color:#c5d9f1\\\">Date Of Birth</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Age</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Gender</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Place Of Birth</td>\\n            </tr>\\n            <tr>\\n                <td>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[16].FieldID)}}</td>\\n                <td >{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[17].FieldID)}}</td>\\n                <td >{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[18].FieldID)}}</td>\\n                <td >{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[19].FieldID)}}</td>\\n            </tr>\\n        </table>\\n\\n        <table class=\\\"table table-bordered\\\" style=\\\"margin-top:20px\\\">\\n            <tr>\\n                <td style=\\\"background-color:#c5d9f1;font-weight:bold\\\">Address</td>\\n                <td>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[4].FieldID)}}</td>\\n            </tr>\\n            <tr>\\n                <td style=\\\"background-color:#c5d9f1;font-weight:bold\\\">Email ID</td>\\n                <td>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[6].FieldID)}}</td>\\n            </tr>\\n            <tr>\\n                <td style=\\\"background-color:#c5d9f1;font-weight:bold\\\">Contact No</td>\\n                <td>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[5].FieldID)}}</td>\\n            </tr>\\n            <tr>\\n                <td style=\\\"background-color:#c5d9f1;font-weight:bold\\\">Skype ID</td>\\n                <td>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[15].FieldID)}}</td>\\n            </tr>\\n        </table>\\n\\n        <h4>EDUCATIONAL QUALIFICATION</h4>\\n        <table class=\\\"table table-bordered\\\" style=\\\"margin-top:20px\\\">\\n            <tr style=\\\"font-weight:bold\\\">\\n                <td style=\\\"background-color:#c5d9f1\\\">Education</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Degree</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Year</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Marks</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Grade</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Board</td>\\n            </tr>\\n            <tr *ngFor=\\\"let subsection of Applicant[Form.Sections[2].SectionID]; let subindex = index\\\">\\n                <td>{{GetFieldValue(Form.Sections[2].SectionID, subindex, Form.Sections[2].Fields[1].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[2].SectionID, subindex, Form.Sections[2].Fields[2].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[2].SectionID, subindex, Form.Sections[2].Fields[6].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[2].SectionID, subindex, Form.Sections[2].Fields[3].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[2].SectionID, subindex, Form.Sections[2].Fields[4].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[2].SectionID, subindex, Form.Sections[2].Fields[5].FieldID)}}</td>\\n            </tr>\\n            <!-- <tr>\\n                <td>Higher Secondary School</td>\\n                <td>HSC</td>\\n                <td>1998</td>\\n                <td>65%</td>\\n                <td>1</td>\\n                <td>Department of Pre-University Education</td>\\n            </tr>\\n            <tr>\\n                <td>Under Graduation</td>\\n                <td>Diploma Mechanical</td>\\n                <td>2001</td>\\n                <td>66%</td>\\n                <td>1</td>\\n                <td>Hebich Technical Training Institute, Karnataka</td>\\n            </tr>\\n            <tr>\\n                <td>Post Graduation</td>\\n                <td></td>\\n                <td></td>\\n                <td></td>\\n                <td></td>\\n                <td></td>\\n            </tr> -->\\n        </table>\\n\\n\\n        <h4>PASSPORT DETAILS</h4>\\n        <table class=\\\"table table-bordered\\\" style=\\\"margin-top:20px\\\">\\n            <tr style=\\\"font-weight:bold\\\">\\n                <td style=\\\"background-color:#c5d9f1\\\">Passport No</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Place of Issue</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Issue Date</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Expiry Date</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">ECR/ECNR</td>\\n            </tr>\\n            <tr>\\n                <td>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[7].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[20].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[21].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[10].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[0].SectionID, 0, Form.Sections[0].Fields[22].FieldID)}}</td>\\n            </tr>\\n        </table>\\n\\n        <h4>SEAMEN BOOK DETAILS</h4>\\n        <table class=\\\"table table-bordered\\\" style=\\\"margin-top:20px\\\">\\n            <tr style=\\\"font-weight:bold\\\">\\n                <td style=\\\"background-color:#c5d9f1\\\">Seamen Book No</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Place of Issue</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Issue Date</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Expiry Date</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Seamen Book Type</td>\\n            </tr>\\n            <tr>\\n                <td>{{GetFieldValue(Form.Sections[5].SectionID, 0, Form.Sections[5].Fields[0].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[5].SectionID, 0, Form.Sections[5].Fields[1].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[5].SectionID, 0, Form.Sections[5].Fields[2].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[5].SectionID, 0, Form.Sections[5].Fields[3].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[5].SectionID, 0, Form.Sections[5].Fields[4].FieldID)}}</td>\\n            </tr>\\n        </table>\\n\\n        <h4>POLICE CLEARANCE</h4>\\n        <table class=\\\"table table-bordered\\\" style=\\\"margin-top:20px\\\">\\n            <tr style=\\\"font-weight:bold\\\">\\n                <td style=\\\"background-color:#c5d9f1\\\">Local PCC Issue Date</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Passport PCC Issue Date</td>\\n            </tr>\\n            <tr>\\n                <td>{{GetFieldValue(Form.Sections[6].SectionID, 0, Form.Sections[6].Fields[0].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[6].SectionID, 0, Form.Sections[6].Fields[1].FieldID)}}</td>\\n            </tr>\\n        </table>\\n\\n        <h4>MEDICAL DETAILS</h4>\\n        <table class=\\\"table table-bordered\\\" style=\\\"margin-top:20px\\\" >\\n            <tr style=\\\"font-weight:bold\\\">\\n                <td style=\\\"background-color:#c5d9f1\\\">Blood Group</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Date of Last MEdical Examination</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Place of Last MEdical Examination</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Valid Until</td>\\n            </tr>\\n            <tr>\\n                <td>{{GetFieldValue(Form.Sections[7].SectionID, 0, Form.Sections[7].Fields[0].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[7].SectionID, 0, Form.Sections[7].Fields[1].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[7].SectionID, 0, Form.Sections[7].Fields[2].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[7].SectionID, 0, Form.Sections[7].Fields[3].FieldID)}}</td>\\n            </tr>\\n        </table>\\n\\n        <h4>SAFETY CERTIFICATION:</h4>\\n        <table class=\\\"table table-bordered\\\" style=\\\"margin-top:20px\\\">\\n            <tr style=\\\"font-weight:bold\\\">\\n                <td style=\\\"background-color:#c5d9f1\\\">Name</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Certification No.</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Issue Date</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Expiry Date</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Issuing Authority</td>\\n            </tr>\\n            <tr *ngFor=\\\"let subsection of Applicant[Form.Sections[8].SectionID]; let subindex = index\\\">\\n                <td>{{GetFieldValue(Form.Sections[8].SectionID, subindex, Form.Sections[8].Fields[0].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[8].SectionID, subindex, Form.Sections[8].Fields[1].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[8].SectionID, subindex, Form.Sections[8].Fields[2].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[8].SectionID, subindex, Form.Sections[8].Fields[3].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[8].SectionID, subindex, Form.Sections[8].Fields[4].FieldID)}}</td>\\n            </tr>\\n            \\n        </table>\\n\\n        <h4>JOB SPECIFIC CERTIFICATIONS:</h4>\\n        <table class=\\\"table table-bordered\\\" style=\\\"margin-top:20px\\\">\\n            <tr style=\\\"font-weight:bold\\\">\\n                <td style=\\\"background-color:#c5d9f1\\\">Name</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Certificate No.</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Issue Date</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Expiry Date</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Issuing Authority</td>\\n            </tr>\\n            <tr *ngFor=\\\"let subsection of Applicant[Form.Sections[9].SectionID]; let subindex = index\\\">\\n                <td>{{GetFieldValue(Form.Sections[9].SectionID, subindex, Form.Sections[9].Fields[0].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[9].SectionID, subindex, Form.Sections[9].Fields[1].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[9].SectionID, subindex, Form.Sections[9].Fields[2].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[9].SectionID, subindex, Form.Sections[9].Fields[3].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[9].SectionID, subindex, Form.Sections[9].Fields[4].FieldID)}}</td>\\n            </tr>\\n        </table>\\n\\n        <h4>WORK EXPERIENCE: (Starting with the Most Recent/Current Role)</h4>\\n        <table class=\\\"table table-bordered\\\" style=\\\"margin-top:20px\\\">\\n            <tr style=\\\"font-weight:bold\\\">\\n                <td style=\\\"background-color:#c5d9f1\\\">Compay Name</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Rig/Installation Name</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Rig/Installation Type</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Designation</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Date From</td>\\n                <td style=\\\"background-color:#c5d9f1\\\">Date To</td>\\n            </tr>\\n            <tr *ngFor=\\\"let subsection of Applicant[Form.Sections[1].SectionID]; let subindex = index\\\">\\n                <td>{{GetFieldValue(Form.Sections[1].SectionID, subindex, Form.Sections[1].Fields[0].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[1].SectionID, subindex, Form.Sections[1].Fields[1].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[1].SectionID, subindex, Form.Sections[1].Fields[2].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[1].SectionID, subindex, Form.Sections[1].Fields[3].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[1].SectionID, subindex, Form.Sections[1].Fields[6].FieldID)}}</td>\\n                <td>{{GetFieldValue(Form.Sections[1].SectionID, subindex, Form.Sections[1].Fields[7].FieldID)}}</td>\\n            </tr>\\n        </table>\\n    </div>\\n\\n\\n\\n    <!-- <div *ngFor=\\\"let section of Form.Sections;let secindex = index\\\">\\n        <ng-container *ngIf=\\\"!section.CanBeMultiple\\\">\\n            <table>\\n                <ng-container *ngFor=\\\"let field of section.Fields; let fieldindex = index\\\">\\n                    <tr>\\n                        <td>\\n                            <span *ngIf=\\\"field.FieldName=='First Name'\\\">{{GetFieldValue(section.SectionID, 0, field.FieldID)}}</span>\\n                            <span *ngIf=\\\"field.FieldName=='Last Name'\\\">{{GetFieldValue(section.SectionID, 0, field.FieldID)}}</span>\\n                        </td>\\n                        <td *ngIf=\\\"field.FieldName=='Email ID'\\\">\\n                            Email: {{GetFieldValue(section.SectionID, 0, field.FieldID)}}\\n                        </td>\\n                        <td *ngIf=\\\"field.FieldName=='Current Post'\\\">\\n                            Job Apllied For: {{GetFieldValue(section.SectionID, 0, field.FieldID)}}\\n                        </td>\\n                    </tr>\\n                    <tr *ngIf=\\\"field.FieldName=='Address'\\\">\\n\\n                        <td colspan=\\\"3\\\">Address: {{GetFieldValue(section.SectionID, 0, field.FieldID)}}</td>\\n                    </tr>\\n                </ng-container>\\n            </table>\\n        </ng-container>\\n    </div> -->\\n    <!-- <div *ngFor=\\\"let section of Form.Sections;let secindex = index\\\">\\n        <ng-container *ngIf=\\\"section.CanBeMultiple\\\">\\n            <table class=\\\"table table-bordered\\\">\\n\\n                <ng-container *ngFor=\\\"let field of section.Fields; let fieldindex = index\\\" class=\\\"row\\\">\\n                    <div class=\\\"col-md-4\\\" style=\\\"border-bottom:1px solid #ddd;min-height: 89px\\\">\\n                        <tr>\\n\\n                            <th *ngIf=\\\"field.isFieldChecked\\\">{{field.FieldName}}</th>\\n\\n                        </tr>\\n\\n                        <tr>\\n\\n                            <td>{{GetFieldValue(section.SectionID, 0, field.FieldID)}}</td>\\n\\n                        </tr>\\n                    </div>\\n                </ng-container>\\n            </table>\\n        </ng-container>\\n    </div> -->\\n\\n\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"PrintToPdf()\\\" *ngIf=\\\"format_1\\\">Print</button>\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"PrintToPdf_2()\\\" *ngIf=\\\"format_2\\\">Print</button>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-profile/applicant-profile.component.html\n// module id = 498\n// module chunks = 1","module.exports = \"<style type=\\\"text/css\\\">\\n label,ul{margin-top: 15px;}\\n input,select{margin-bottom: 3px;}\\n</style>\\n<h3>Create Form</h3>\\n<label style=\\\"margin-top: 30px\\\">\\n  Form Title :\\n</label>\\n<input class=\\\"form-control form-group\\\" [(ngModel)]=\\\"SelectedForm.FormTitle\\\" >\\n<label>\\n  Form Type :\\n</label>\\n<select class=\\\"form-control\\\" id=\\\"type\\\" name=\\\"type\\\" [(ngModel)]=\\\"SelectedForm.FormType\\\" (change)=\\\"OnSelectFormType($event)\\\" required>\\n  <option *ngFor=\\\"let option of ApplicantType\\\" [ngValue]=\\\"option._id\\\" >{{option.type}}</option>\\n</select>\\n<br>\\n<div class=\\\"alert alert-danger\\\" *ngIf=\\\"Error\\\">\\n    <a href=\\\"#\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\n    {{Error}}\\n</div>\\n\\n<br>\\n<div *ngFor=\\\"let section of SelectedForm.Sections; let sectionindex = index\\\"\\nstyle=\\\"border-bottom: 1px solid;\\\">\\n    <label>Section Title</label>\\n    <input class=\\\"form-control\\\"  [(ngModel)]=\\\"section.SectionName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    <div *ngFor=\\\"let item of section.Fields; let fieldindex = index;\\\">\\n        <div [ngSwitch]=\\\"item.FieldType\\\">\\n          <label>{{item.FieldType}}</label>\\n          <!-----------------------For Radio Button------------------>\\n          <div *ngSwitchCase=\\\"'Radio'\\\" class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\"  [(ngModel)]=\\\"item.FieldName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n            <ul>\\n              <li *ngFor=\\\"let option of item.options; let optionindex = index\\\" style=\\\"margin-bottom: 20px;display: flex;\\\">\\n                <input class=\\\"form-control\\\"  [value]=\\\"option\\\" (change)=\\\"OnOptionChange(sectionindex,fieldindex,$event.target.value,optionindex)\\\">\\n                <a style=\\\"margin-top: 1%;margin-left:1%\\\" (click)=\\\"RemoveOption(sectionindex,fieldindex,optionindex)\\\">X</a>\\n              </li>\\n            </ul>\\n            <a (click)=\\\"AddOption(sectionindex,fieldindex)\\\">Add Options</a>\\n            <a (click)=\\\"RemoveField(sectionindex,fieldindex)\\\">Remove Field</a>\\n          </div>\\n          <!-----------------------End Radio Button------------------>\\n    \\n          <!-----------------------For Checkbox Button------------------>\\n          <div *ngSwitchCase=\\\"'Checkbox'\\\" class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\"  [(ngModel)]=\\\"item.FieldName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n            <ul>\\n              <li *ngFor=\\\"let option of item.options; let optionindex = index\\\" style=\\\"margin-bottom: 20px;display: flex;\\\">\\n                <input class=\\\"form-control\\\"  [value]=\\\"option\\\" (change)=\\\"OnOptionChange(sectionindex,fieldindex,$event.target.value,optionindex)\\\">\\n                <a style=\\\"margin-top: 1%;margin-left:1%\\\" (click)=\\\"RemoveOption(sectionindex, fieldindex,optionindex)\\\">X</a>\\n              </li>\\n            </ul>\\n            <a (click)=\\\"AddOption(sectionindex,fieldindex)\\\">Add Options</a>\\n            <a (click)=\\\"RemoveField(sectionindex,fieldindex)\\\">Remove Field</a>\\n          </div>\\n          <!-----------------------End Checkbox Button------------------>\\n    \\n          <!-----------------------For Dropbox Button------------------>\\n          <div *ngSwitchCase=\\\"'Dropdown'\\\" class=\\\"dropdown form-group\\\">\\n            <input class=\\\"form-control\\\"  [(ngModel)]=\\\"item.FieldName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\n            <ul>\\n              <li *ngFor=\\\"let option of item.options; let optionindex = index\\\" style=\\\"margin-bottom: 20px;display: flex;\\\">\\n                <input class=\\\"form-control\\\"  [value]=\\\"option\\\" (change)=\\\"OnOptionChange(sectionindex,fieldindex,$event.target.value,optionindex)\\\">\\n                <a style=\\\"margin-top:1%;margin-left:1%\\\" (click)=\\\"RemoveOption(sectionindex,fieldindex,optionindex)\\\">X</a>\\n              </li>\\n            </ul>\\n            <a (click)=\\\"AddOption(sectionindex,fieldindex)\\\">Add Options</a>\\n            <a (click)=\\\"RemoveField(sectionindex,fieldindex)\\\">Remove Field</a>\\n          </div>\\n          <!----------------------End Dropbox Button------------------>\\n    \\n          <!-----------------------For Textbox Button------------------>\\n          <div *ngSwitchCase=\\\"'Textbox'\\\" class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\"  [(ngModel)]=\\\"item.FieldName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n            <a (click)=\\\"RemoveField(sectionindex,fieldindex)\\\">Remove Field</a>\\n          </div>\\n    \\n          <!----------------------End Textbox Button------------------>\\n    \\n          <!-----------------------For TextArea Button------------------>\\n          <div *ngSwitchCase=\\\"'Textarea'\\\" class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\"  [(ngModel)]=\\\"item.FieldName\\\" [value]=\\\"item.FieldName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n            <a (click)=\\\"RemoveField(sectionindex,fieldindex)\\\">Remove Field</a>\\n          </div>\\n          <!----------------------End TextArea Button------------------>\\n\\n          <!-----------------------For Calendar Button------------------>\\n          <div *ngSwitchCase=\\\"'Calendar'\\\" class=\\\"form-group\\\">\\n              <input class=\\\"form-control\\\"  [(ngModel)]=\\\"item.FieldName\\\" [value]=\\\"item.FieldName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n              <a (click)=\\\"RemoveField(sectionindex,fieldindex)\\\">Remove Field</a>\\n            </div>\\n            <!----------------------End Calendar Button------------------>\\n\\n          <!-----------------------For Country List------------------>\\n          <div *ngSwitchCase=\\\"'Country'\\\" class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\"  [(ngModel)]=\\\"item.FieldName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\n            <a (click)=\\\"RemoveField(sectionindex,fieldindex)\\\">Remove Field</a>\\n            <br>\\n            <small><em>*Take options from {{item.Table}} Library.</em></small>\\n          </div>\\n          <!----------------------End Country List------------------>\\n\\n          <!-----------------------For State List------------------>\\n          <div *ngSwitchCase=\\\"'State'\\\" class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\"  [(ngModel)]=\\\"item.FieldName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\n            <select class=\\\"form-control\\\" (change)=\\\"AddParentField(sectionindex,fieldindex,$event.target.value)\\\">\\n              <option selected disabled>Choose one</option>\\n            <option *ngFor=\\\"let x of item.ParentField.FieldList;\\\" [value]=\\\"x|json\\\">{{GetFieldName(x.SectionID,x.FieldID)}}</option>\\n          </select>\\n          <a (click)=\\\"RemoveField(sectionindex,fieldindex)\\\">Remove Field</a>\\n          </div>\\n          <!----------------------End State List------------------>\\n\\n          <!-----------------------For city List------------------>\\n          <div *ngSwitchCase=\\\"'City'\\\" class=\\\"form-group\\\">\\n              <input class=\\\"form-control\\\"  [(ngModel)]=\\\"item.FieldName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\n              <select class=\\\"form-control\\\" (change)=\\\"AddParentField(sectionindex,fieldindex,$event.target.value)\\\">\\n                <option selected disabled>Choose one</option>\\n              <option *ngFor=\\\"let x of item.ParentField.FieldList\\\" [value]=\\\"x|json\\\">{{GetFieldName(x.SectionID,x.FieldID)}}</option>\\n            </select>\\n            <a (click)=\\\"RemoveField(sectionindex,fieldindex)\\\">Remove Field</a>\\n            </div>\\n            <!----------------------End city List------------------>\\n\\n           <!-----------------------For CompanyType List------------------>\\n           <div *ngSwitchCase=\\\"'Type'\\\" class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\"  [(ngModel)]=\\\"item.FieldName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\n            <a (click)=\\\"RemoveField(sectionindex,fieldindex)\\\">Remove Field</a>\\n            <br>\\n            <small><em>*Take options from {{item.Table}} Library.</em></small>\\n          </div>\\n          <!----------------------End CompanyType List------------------>\\n\\n          <!-----------------------For Installation Type List------------------>\\n          <div *ngSwitchCase=\\\"'InstallationType'\\\" class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\"  [(ngModel)]=\\\"item.FieldName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\n            <select class=\\\"form-control\\\" (change)=\\\"AddParentField(sectionindex,fieldindex,$event.target.value)\\\">\\n              <option selected disabled>Choose one</option>\\n            <option *ngFor=\\\"let x of item.ParentField.FieldList\\\" [value]=\\\"x|json\\\">{{GetFieldName(x.SectionID,x.FieldID)}}</option>\\n          </select>\\n          <a (click)=\\\"RemoveField(sectionindex,fieldindex)\\\">Remove Field</a>\\n          </div>\\n          <!----------------------End Installation Type List------------------>\\n\\n          <!-----------------------For Designation List------------------>\\n          <div *ngSwitchCase=\\\"'Designation'\\\" class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\"  [(ngModel)]=\\\"item.FieldName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\n            <select class=\\\"form-control\\\"  (change)=\\\"AddParentField(sectionindex,fieldindex,$event.target.value)\\\">\\n              <option selected disabled>Choose one</option>\\n            <option *ngFor=\\\"let x of item.ParentField.FieldList\\\" [value]=\\\"x|json\\\">{{GetFieldName(x.SectionID,x.FieldID)}}</option>\\n          </select>\\n          <a (click)=\\\"RemoveField(sectionindex,fieldindex)\\\">Remove Field</a>\\n          </div>\\n          <!----------------------End Designation List------------------>\\n        </div>\\n      </div>\\n      <br>\\n      <table class=\\\"table-bordered table-condensed table-striped\\\" style=\\\"width:80%;border: 1px solid #333;box-shadow: 2px 2px 4px #888;\\\">\\n        <tr>\\n          <td colspan=\\\"2\\\" style=\\\"font-weight: 600;padding-left: 20px\\\">\\n            Field Manager\\n        </td></tr>\\n          <tr>\\n            <td style=\\\"padding-left: 20px\\\">Control Type</td>\\n            <!-- <td>Option Count</td> -->\\n            <td></td>\\n          </tr>\\n          <tr *ngFor=\\\"let control of controls\\\">\\n            <td style=\\\"padding-left: 20px\\\">{{control.Type}}</td>\\n            <!-- <td *ngIf=\\\"!control.isMultipleOption\\\"></td>\\n            <td *ngIf=\\\"control.isMultipleOption\\\">\\n              <input class=\\\"form-control\\\"  type=\\\"text\\\" [(ngModel)]=\\\"control.optionCount\\\">\\n            </td> -->\\n\\n            <td style=\\\"padding-left: 20px;\\\">\\n              <a (click)=\\\"AddField(sectionindex,control)\\\">Add</a>\\n            </td>\\n          </tr>\\n        </table>\\n        <a (click)=\\\"RemoveSection(sectionindex)\\\" style=\\\"line-height: 3\\\">Remove Section</a>\\n        <br>\\n        <input class=\\\"\\\"  type=\\\"checkbox\\\" [(ngModel)]=\\\"section.CanBeMultiple\\\">Can be added Multiple Times.\\n        <hr>\\n</div>\\n<div  style=\\\"margin-top: 20px\\\">\\n<a (click)=\\\"AddSection()\\\">Add Section</a>\\n<button class=\\\"btn btn-primary pull-right\\\" *ngIf=\\\"TotalSections>0\\\" (click)=\\\"OnSave()\\\" type=\\\"submit\\\">Save</button>\\n</div>\\n<br>\\n\\n<div class=\\\"panel panel-danger\\\" style=\\\"margin:10px\\\" *ngIf=\\\"FormSuccessMessage == -1\\\">\\n    <div class=\\\"panel-body\\\">Form couldn\\\\'t be saved.</div>\\n</div>\\n\\n<div class=\\\"panel panel-success\\\"  style=\\\"margin:10px\\\"  *ngIf=\\\"FormSuccessMessage == 1\\\">\\n    <div class=\\\"panel-body alert alert-success\\\">Form saved Sucessfully.</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/create-form/create-form.component.html\n// module id = 499\n// module chunks = 1","module.exports = \"<ng-container *ngIf=\\\"(TemplatesLoaded && FormLoaded); else Loading\\\">\\n    <div class=\\\"col-md-1\\\">\\n      <nav class=\\\"side-nav-custom\\\">\\n        <ul>\\n          <li *ngFor=\\\"let item of TemplatesList;let j=index\\\">\\n            <a (click)=\\\"OnEditTemplate(j)\\\" style=\\\"color: #fff\\\">{{item.TemplateTitle}}</a>\\n          </li>\\n        </ul>\\n        <a (click)=\\\"OnCreateTemplate()\\\" style=\\\"color: #fff\\\">+ New Template</a>\\n      </nav>\\n      </div>\\n      <ng-container *ngIf=\\\"createMode\\\">\\n          <div class=\\\"col-md-6\\\" style=\\\"margin-top: 20px\\\">\\n              <select id=\\\"type\\\" name=\\\"type\\\" [(ngModel)]=\\\"SelectedForm.FormType\\\" (change)=\\\"OnSelectForm($event)\\\">\\n                <option selected disabled>Select Form</option>\\n                <option *ngFor=\\\"let option of FormsList;let j=index\\\">\\n                  {{option.FormTitle}}\\n                </option>\\n              </select>\\n              <label>\\n                Template Title:\\n              </label>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"TemplateTitle\\\">\\n              <div *ngFor=\\\"let section of SelectedForm.Sections; let secindex= index\\\">\\n                {{section.SectionName}}\\n                <br>\\n                <ng-container *ngFor=\\\"let field of section.Fields;let fieldindex=index\\\">\\n                  <input type=\\\"checkbox\\\" [checked]=\\\"field.isFieldChecked\\\" (change)=\\\"ToggleFieldSelection(secindex,fieldindex)\\\">\\n                  <label>{{field.FieldName}}</label>\\n                  <br>\\n                </ng-container>\\n                <hr>\\n              </div>\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"OnSaveTemplate()\\\" *ngIf=\\\"TotalFieldsChecked>0\\\">Save Template</button>\\n              <br>\\n              <div class=\\\"panel panel-danger\\\" style=\\\"margin:10px\\\" *ngIf=\\\"TemplateSaved == -1\\\">\\n                <div class=\\\"panel-body\\\">Template couldn\\\\'t be saved.</div>\\n              </div>\\n            \\n              <div class=\\\"panel panel-success\\\" style=\\\"margin:10px\\\" *ngIf=\\\"TemplateSaved == 1\\\">\\n                <div class=\\\"panel-body\\\">Template saved Sucessfully.</div>\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"col-md-4\\\" style=\\\"background-color: #f0f0f0\\\">\\n              <h3>{{TemplateTitle}}</h3>\\n              <div *ngFor=\\\"let section of SelectedForm.Sections;let secindex= index\\\">\\n                <ng-container *ngIf=\\\"CheckedFieldCount(secindex) > 0\\\">\\n                  <h4>\\n                    {{section.SectionName}}\\n                  </h4>\\n                  <br>\\n                </ng-container>\\n                <ng-container *ngFor=\\\"let field of section.Fields;let fieldindex=index\\\">\\n                  <label *ngIf=\\\"field.isFieldChecked\\\">{{field.FieldName}}</label>\\n                  <br>\\n                </ng-container>\\n                <hr>\\n              </div>\\n            </div>\\n      </ng-container>      \\n</ng-container>\\n<ng-template #Loading>\\n  <div id=\\\"loading\\\" class=\\\"overlay\\\">\\n    <div class=\\\"loader_div\\\">\\n        <img src=\\\"loader.gif\\\"/><br><br>\\n        <b class=\\\"loadingtext\\\">Loading...</b>\\n    </div>\\n</div>\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/create-template/create-template.component.html\n// module id = 500\n// module chunks = 1","module.exports = \"<style>\\nul{margin-right: 4%;}\\nul li a{color: #fff;}\\nul li a:visited{background: #0067ad;color: #fff}\\n\\n\\n</style>\\n\\n<div id=\\\"wrapper\\\">\\n    <nav class=\\\"navbar navbar-default navbar-fixed-top\\\" role=\\\"navigation\\\" style=\\\"margin-bottom: 0;background-color: #01aef0;border: none\\\">\\n         <img src=\\\"https://www.ocs.services//images/Oilfield_Consolidated_Services.jpg\\\" style=\\\"border-left: 11px solid #fff;\\n           border-right: 18px solid #fff;\\n           border-top: 3px solid #fff;\\n           border-bottom: 3px solid #fff;\\n           height: 38px;\\n           margin-top: 6px;\\n           margin-left: 25px;\\\"> \\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n            <!-- <li routerLinkActive=\\\"active\\\" *ngIf=\\\"UserType == 'Admin'\\\">\\n                    <a [routerLink]=\\\"['createform']\\\">Create Form</a>\\n                </li> -->\\n            <li routerLinkActive=\\\"active\\\" *ngIf=\\\"UserType == 'Admin'\\\">\\n                <a [routerLink]=\\\"['forms']\\\">View Form</a>\\n            </li>\\n            <li routerLinkActive=\\\"active\\\" *ngIf=\\\"UserType == 'Admin'\\\">\\n                <a [routerLink]=\\\"['applicants']\\\">Applicants</a>\\n            </li>\\n            <!-- <li routerLinkActive=\\\"active\\\" *ngIf=\\\"UserType == 'Admin'\\\">\\n                <a [routerLink]=\\\"['templates']\\\">Templates</a>\\n            </li> -->\\n            <li routerLinkActive=\\\"active\\\" *ngIf=\\\"UserType != 'Admin'\\\">\\n                <a [routerLink]=\\\"['profile']\\\">Profile</a>\\n            </li>\\n            <li>\\n                <a style=\\\"cursor: pointer\\\" (click)=\\\"OnLogout()\\\">Logout</a>\\n            </li>\\n        </ul>\\n    </nav>\\n    <div id=\\\"page-wrapper\\\" style=\\\"margin-left:  100px\\\">\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = 501\n// module chunks = 1","module.exports = \"    <h3 style=\\\"margin-bottom: 30px\\\">{{SelectedForm.FormTitle}}</h3>\\n    <div *ngFor=\\\"let section of SelectedForm.Sections;\\\">\\n       <h4>{{section.SectionName}}</h4> \\n            <div *ngFor=\\\"let item of section.Fields;\\\">\\n                    <div [ngSwitch]=\\\"item.FieldType\\\">\\n                        <label>\\n                            {{item.FieldName}}\\n                        </label>\\n                       <!-----------------------For Radio Button------------------>\\n                       <div *ngSwitchCase=\\\"'Radio'\\\" class=\\\"form-group\\\">\\n                         <div *ngFor=\\\"let option of item.options; let j = index\\\" >\\n                             <!-- <label class=\\\"radio-inline\\\">{{option}}</label> -->\\n                             {{option}}\\n                             <input class=\\\"\\\"  type=\\\"radio\\\" [value]=\\\"option\\\">\\n                            </div>\\n                       </div>\\n                       <!-----------------------End Radio Button------------------>\\n                 \\n                       <!-----------------------For Checkbox Button------------------>\\n                       <div *ngSwitchCase=\\\"'Checkbox'\\\" class=\\\"\\\">\\n                           <div *ngFor=\\\"let option of item.options; let j = index\\\">\\n                             {{option}}\\n                               <input  class=\\\"\\\" type=\\\"checkbox\\\">\\n                           </div>\\n                       </div>\\n                       <!-----------------------End Checkbox Button------------------>\\n                 \\n                       <!-----------------------For Textbox Button------------------>\\n                       <div *ngSwitchCase=\\\"'Textbox'\\\" class=\\\"form-group\\\">\\n                           <input class=\\\"form-control\\\" type=\\\"text\\\"/>\\n                       </div>\\n                       <!----------------------End Textbox Button------------------>\\n                 \\n                       <!-----------------------For Paragraph Button------------------>\\n                       <div *ngSwitchCase=\\\"'Textarea'\\\" class=\\\"form-group\\\">\\n                           <textarea  class=\\\"form-control\\\" ></textarea>\\n                       </div>\\n                       <!----------------------End Paragraph Button------------------>\\n                 \\n                       <!-----------------------For Dropbox Button------------------>\\n                       <div *ngSwitchCase=\\\"'Dropdown'\\\" class=\\\"form-group\\\">\\n                           <select  class=\\\"form-control\\\" >\\n                               <option selected disabled>Choose one</option>\\n                             <option *ngFor=\\\"let option of item.options;let j=index\\\">{{option}}</option>\\n                           </select>\\n                       </div>\\n                        <!----------------------End Dropbox Button------------------>\\n\\n                        <!-----------------------For Calendar Button------------------>\\n                       <div *ngSwitchCase=\\\"'Calendar'\\\" class=\\\"form-group\\\">\\n                            <input  class=\\\"form-control\\\"  type=\\\"date\\\"/>\\n                        </div>\\n                         <!----------------------End Calendar Button------------------>\\n\\n                         <!-----------------------For Country Dropbox Button------------------>\\n                       <div *ngSwitchCase=\\\"'Country'\\\" class=\\\"form-group\\\">\\n                        <select  class=\\\"form-control\\\" >\\n                            <option selected disabled>Choose one</option>\\n                            Countries\\n                          <!-- <option *ngFor=\\\"let option of item.options;let j=index\\\">{{option}}</option> -->\\n                        </select>\\n                    </div>\\n                     <!----------------------End Country Dropbox Button------------------>\\n\\n                     <!-----------------------For State Dropbox Button------------------>\\n                     <div *ngSwitchCase=\\\"'State'\\\" class=\\\"form-group\\\">\\n                            <select class=\\\"form-control\\\" >\\n                                <option selected disabled>Choose one</option>\\n                                States in selected country\\n                              <!-- <option *ngFor=\\\"let option of item.options;let j=index\\\">{{option}}</option> -->\\n                            </select>\\n                        </div>\\n                         <!----------------------End State Dropbox Button------------------>\\n\\n                         <!-----------------------For City Dropbox Button------------------>\\n                     <div *ngSwitchCase=\\\"'City'\\\" class=\\\"form-group\\\">\\n                            <select class=\\\"form-control\\\" >\\n                                <option selected disabled>Choose one</option>\\n                                City in selected country\\n                              <!-- <option *ngFor=\\\"let option of item.options;let j=index\\\">{{option}}</option> -->\\n                            </select>\\n                        </div>\\n                         <!----------------------End City Dropbox Button------------------>\\n\\n                         <!-----------------------For CustomerType Dropbox Button------------------>\\n                       <div *ngSwitchCase=\\\"'Type'\\\" class=\\\"form-group\\\">\\n                            <select class=\\\"form-control\\\" >\\n                                <option selected disabled>Choose one</option>\\n                            Customer Type\\n                              <!-- <option *ngFor=\\\"let option of item.options;let j=index\\\">{{option}}</option> -->\\n                            </select>\\n                        </div>\\n                         <!----------------------End CustomerType Dropbox Button------------------>\\n    \\n                         <!-----------------------For Installation Type Dropbox Button------------------>\\n                         <div *ngSwitchCase=\\\"'InstallationType'\\\" class=\\\"form-group\\\">\\n                                <select class=\\\"form-control\\\" >\\n                                    <option selected disabled>Choose one</option>\\n                                    Installation Types in the selected Customer Type\\n                                  <!-- <option *ngFor=\\\"let option of item.options;let j=index\\\">{{option}}</option> -->\\n                                </select>\\n                            </div>\\n                             <!----------------------End Installation Type Dropbox Button------------------>\\n                              <!-----------------------For Designation Dropbox Button------------------>\\n                         <div *ngSwitchCase=\\\"'Designation'\\\" class=\\\"form-group\\\">\\n                                <select class=\\\"form-control\\\" >\\n                                    <option selected disabled>Choose one</option>\\n                                    Designation in the selected Installation Type\\n                                  <!-- <option *ngFor=\\\"let option of item.options;let j=index\\\">{{option}}</option> -->\\n                                </select>\\n                            </div>\\n                             <!----------------------End Designation Dropbox Button------------------>\\n                     </div>\\n                   </div><hr>\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/preview-form/preview-form.component.html\n// module id = 502\n// module chunks = 1","module.exports = \"\\n<ng-container *ngIf=\\\"!isFormsLoaded; else FormLoaded\\\">\\n    <div id=\\\"loading\\\" class=\\\"overlay\\\">\\n        <div class=\\\"loader_div\\\">\\n            <img src=\\\"loader.gif\\\"/><br><br>\\n            <b class=\\\"loadingtext\\\">Loading...</b>\\n        </div>\\n    </div>\\n</ng-container>\\n\\n <ng-template #FormLoaded>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-1\\\">\\n      <nav class=\\\"side-nav-custom\\\">\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"\\\">\\n              <h4 style=\\\"color: #fff;margin-bottom: 25px;font-weight:600\\\">List of Forms</h4>\\n              <ul>\\n                <li *ngFor=\\\"let option of FormsList; let j=index\\\"><a (click) =\\\"OnSelectForm(j)\\\" style=\\\"color: #fff\\\">{{option.FormTitle}}</a></li>\\n              </ul>\\n              <a (click)=\\\"CreateNewForm()\\\" style=\\\"color: #fff\\\">+ New Form</a>\\n            </div>\\n        \\n            \\n        </div>\\n      </nav>\\n    </div>\\n    <div class=\\\"col-md-11\\\">\\n      <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-md-6\\\" *ngIf=\\\"isSelected\\\" style=\\\"padding: 0 5%;background-color: #eaeaea;overflow: scroll;height: 100vh\\\">\\n          <app-create-form [SelectedForm]=\\\"SelectedForm\\\"  (FormSaved)=\\\"OnSaveForm($event)\\\"></app-create-form>\\n        </div>\\n        \\n        <div class=\\\"col-md-6\\\" *ngIf=\\\"isSelected\\\" style=\\\"background-color: #f4f4f4;padding: 0 5%;overflow: scroll;height: 100vh\\\">\\n          <app-preview-form [SelectedForm]=\\\"SelectedForm\\\"></app-preview-form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/view-forms/view-forms.component.html\n// module id = 503\n// module chunks = 1","module.exports = \"\\n<div style=\\\"background-color: #e2edff;width: 60%;margin: auto; padding: 5% 0 5% 0;\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\n      <span class=\\\"help-block\\\" >{{message}}</span>\\n      <form (ngSubmit)=\\\"OnSignIn(f)\\\" #f=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"userid\\\">Phone No / E-Mail</label>\\n            <input class=\\\"form-control\\\" type=\\\"userid\\\" \\n                     id=\\\"userid\\\" \\n                     class=\\\"form-control\\\" \\n                     ngModel \\n                     name=\\\"userid\\\"\\n                     required\\n                     #userid = \\\"ngModel\\\"> <!-- Just like ngForm ngModel also gives information about control-->\\n            <span class=\\\"help-block\\\" *ngIf=\\\"!userid.valid && userid.touched\\\">Phone No. is invalid</span>\\n           \\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" ngModel required #password = \\\"ngModel\\\">\\n            <span class=\\\"help-block\\\" *ngIf=\\\"!password.valid && password.touched\\\" >Password is required</span>\\n  </div>\\n  <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!f.valid && f.touched\\\" type=\\\"submit\\\">Sign In</button>\\n  <button class=\\\"btn btn-default\\\" (click) = \\\"GoToSignup()\\\" type=\\\"button\\\">New User? Sign up</button>\\n  </form>\\n  </div>\\n</div>\\n<!--Email Pattern check pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signin/signin.component.html\n// module id = 504\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\n      <span class=\\\"help-block\\\" >{{message}}</span>\\n        <form (ngSubmit)=\\\"OnSignUp(f)\\\" #f=\\\"ngForm\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"userid\\\">Phone No</label>\\n              <input type=\\\"userid\\\" \\n                       id=\\\"userid\\\" \\n                       class=\\\"form-control\\\" \\n                       name=\\\"userid\\\"\\n                       required\\n                       [(ngModel)]=\\\"phoneno\\\"\\n                       #userid = \\\"ngModel\\\"> <!-- Just like ngForm ngModel also gives information about control-->\\n              <span class=\\\"help-block\\\" *ngIf=\\\"!userid.valid && userid.touched\\\">Phone No. is invalid</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"isSMSSent\\\">\\n                <label for=\\\"otp\\\">OTP</label>\\n                  <input type=\\\"text\\\" \\n                           id=\\\"otp\\\" \\n                           class=\\\"form-control\\\" \\n                           name=\\\"otp\\\"\\n                           required\\n                           [(ngModel)]=\\\"otptext\\\"\\n                           #otp = \\\"ngModel\\\"> <!-- Just like ngForm ngModel also gives information about control-->\\n                  <span class=\\\"help-block\\\" *ngIf=\\\"!otp.valid && otp.touched\\\">OTP is invalid</span>\\n                </div>\\n            \\n\\n              <button class=\\\"btn btn-warning\\\" *ngIf=\\\"!isSMSSent\\\" (click)=\\\"SendOTP()\\\" type='button'>Continue</button>\\n              <button class=\\\"btn btn-warning\\\" *ngIf=\\\"isSMSSent && !isPhoneVerified\\\" (click)=\\\"VerifyOTP()\\\" type='button'>Verify OTP</button>\\n            \\n            <div class=\\\"form-group\\\" *ngIf=\\\"isPhoneVerified\\\">\\n              <label for=\\\"type\\\">Type\\n                <select id=\\\"type\\\" name=\\\"type\\\" ngModel required>\\n                    <option selected disabled>Choose one</option>\\n                    <option *ngFor=\\\"let option of ApplicantType;let j=index\\\" [ngValue]=\\\"option._id\\\">{{option.type}}</option>\\n                </select></label>\\n              <label for=\\\"password\\\">Password</label>\\n              <input type=\\\"password\\\" minlength=\\\"6\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" ngModel required #password = \\\"ngModel\\\">\\n              <span class=\\\"help-block\\\" *ngIf=\\\"!password.valid && password.touched\\\" >Password is invalid</span>\\n              <span class=\\\"help-block\\\" *ngIf=\\\"password.errors?.minlength && password.touched\\\">Password must be atleast 6 characters long</span>\\n            </div>\\n            <button class=\\\"btn btn-primary\\\" *ngIf=\\\"isPhoneVerified\\\" [disabled]=\\\"!f.valid && f.touched\\\" type=\\\"submit\\\">Sign Up</button>\\n            <button class=\\\"btn btn-default\\\" (click)=\\\"OnLoginPage()\\\" type='button'>Already have an account? Log in</button>\\n          </form>\\n    </div>\\n</div>\\n  <!-- pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signup/signup.component.html\n// module id = 505\n// module chunks = 1","import { SectionModel } from './Section.model';\n\nexport class FormModel {\n    _id: string;\n    FormType: string;\n    FormTypeName: string;\n    FormTitle: string;\n    Sections: SectionModel[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/form.model.ts"],"sourceRoot":""}
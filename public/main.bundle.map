{"version":3,"sources":["webpack:///./src/$_gendir async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/home/Keys.pipe.ts","webpack:///./src/app/home/applicant-form/applicant-form.component.ts","webpack:///./src/app/home/applicant-list/applicant-list.component.ts","webpack:///./src/app/home/custom-form/custom-form.component.ts","webpack:///./src/app/home/form-control.model.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/preview-form/preview-form.component.ts","webpack:///./src/app/home/view-forms/view-forms.component.ts","webpack:///./src/app/signin/signin.component.ts","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/home/applicant-form/applicant-form.component.css","webpack:///./src/app/home/applicant-list/applicant-list.component.css","webpack:///./src/app/home/custom-form/custom-form.component.css","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/preview-form/preview-form.component.css","webpack:///./src/app/home/view-forms/view-forms.component.css","webpack:///./src/app/signin/signin.component.css","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/home/applicant-form/applicant-form.component.html","webpack:///./src/app/home/applicant-list/applicant-list.component.html","webpack:///./src/app/home/custom-form/custom-form.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/preview-form/preview-form.component.html","webpack:///./src/app/home/view-forms/view-forms.component.html","webpack:///./src/app/signin/signin.component.html","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/home/custom-form.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 292;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir async\n// module id = 292\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Job Portal';\n  IsAuthenticated = false;\n  constructor(private AuthService:  AuthService){}\n\n  ngOnInit(){\n    console.log(\"Nginit app compo\");\n    this.AuthService.isAuthenticated.subscribe((isauth) => {\n      console.log(\"Set Is Authenticated\");\n      this.IsAuthenticated = isauth;\n    });\n    \n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FilterPipeModule } from 'ngx-filter-pipe';\n\nimport { AuthGuard } from './auth/auth-guard.service';\nimport { AuthService } from './auth/auth.service';\nimport { CustomFormService } from './home/custom-form.service';\n\nimport { AppComponent } from './app.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { CustomFormComponent } from './home/custom-form/custom-form.component';\nimport { ApplicantFormComponent } from './home/applicant-form/applicant-form.component';\nimport { ViewFormsComponent } from './home/view-forms/view-forms.component';\nimport { ApplicantListComponent } from './home/applicant-list/applicant-list.component';\nimport { PreviewFormComponent } from './home/preview-form/preview-form.component';\n\nimport { KeysPipe } from './home/Keys.pipe';\n\nconst appRoutes: Routes = [\n  { path: 'signin', component: SigninComponent},\n  { path: 'signup', component: SignupComponent},\n  { path: 'home', component: HomeComponent, canActivate:[AuthGuard],children: [\n    // { path: 'createform', component: CreateFormComponent, canActivate:[AuthGuard]},\n    { path: 'forms', component: ViewFormsComponent, canActivate:[AuthGuard]},\n    { path: 'applicants', component: ApplicantListComponent, canActivate:[AuthGuard]},\n    { path: 'profile', component: ApplicantFormComponent, canActivate:[AuthGuard]}\n]},\n  { path: '**', redirectTo: '/home', pathMatch: 'full' }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SigninComponent,\n    HomeComponent,\n    SignupComponent,\n    CustomFormComponent,\n    KeysPipe,\n    ApplicantFormComponent,\n    ViewFormsComponent,\n    ApplicantListComponent,\n    PreviewFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    ReactiveFormsModule,\n    FilterPipeModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [AuthService, AuthGuard, CustomFormService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { CanActivate, CanLoad, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route, ActivatedRoute } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/observable';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate, CanLoad {\r\n\r\n    constructor(private route: ActivatedRoute, private router: Router, private authService: AuthService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean>|boolean{\r\n    // return true;\r\n    //    2.) If token is not set, which means a new tab is opened, then check the node server if session is still open. if open then take action similar to 1, ese redirect to sigin page\r\n    //     console.log(\"Check for session\");\r\n        return this.authService.isSessionOpen().take(1).map(obj => {\r\n            //console.log(obj);\r\n            if (obj == true) {\r\n                return obj;\r\n            }\r\n            else {\r\n                this.router.navigate(['/signin']);\r\n                return obj;\r\n            }\r\n        }\r\n        );\r\n    }\r\n\r\n    canLoad(route: Route) {\r\n        return true;\r\n        // if(this.authService.isAuthenticated()){\r\n        //     return true;\r\n        // }\r\n        // else\r\n        // {\r\n        //     this.router.navigate(['/signin']);\r\n        // }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/auth-guard.service.ts","import { PipeTransform, Pipe } from '@angular/core';\r\n\r\n@Pipe(\r\n    {name: 'keys'}\r\n)\r\nexport class KeysPipe implements PipeTransform {\r\n  transform(value) : any {\r\n    let keys = [];\r\n    for(let key in value) {\r\n        keys.push({key: key, value: value[key]});\r\n    }\r\n    \r\n    return keys;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/Keys.pipe.ts","import { Component, OnInit } from '@angular/core';\nimport { CustomFormService } from '../custom-form.service';\nimport { AuthService } from '../../auth/auth.service';\nimport { FormControl, FormGroup, Validators, FormArray, FormBuilder } from '@angular/forms';\nimport { concat } from 'rxjs/operator/concat';\n\n@Component({\n  selector: 'app-applicant-form',\n  templateUrl: './applicant-form.component.html',\n  styleUrls: ['./applicant-form.component.css']\n})\nexport class ApplicantFormComponent implements OnInit {\n  type:string;\n  isApplicationFilled:boolean;\n  fieldcount : number;\n  FormFields = new Array();\n  ProfileForm : FormGroup;\n  FormTitle: string;\n  sessionData;\n  ProfileDetails;\n  isSelected=new Array();\n  constructor(private customFormService:CustomFormService,private authService:AuthService, private fb : FormBuilder) { }\n\n  ngOnInit() {\n    //console.log(this.authService.sessionData);\n    this.sessionData = this.authService.sessionData;\n    this.type = this.sessionData.type;\n    this.ProfileForm = this.fb.group({\n      customcontrols:new FormArray([])\n    });\n\n    this.GetApplicantProfile();\n  }\n\n  onSaveForm(){\n    const FormControlsList = this.ProfileForm.get('customcontrols') as FormArray;\n    var FormValues = FormControlsList.value;\n\n    var obj = {_id:  this.sessionData._id, type:this.sessionData.type};\n\n    for(var i=0;i<this.FormFields.length;i++){\n      var label = this.FormFields[i].label;\n\n      if(this.FormFields[i].type === \"Checkbox\"){\n        obj[label] = new Array();\n        for(var j=0;j<this.FormFields[i].optionCount;j++){\n          if(FormValues[i][j]){\n            obj[label].push(this.FormFields[i].options[j]);\n          }\n        }\n      }\n      else{\n        obj[label] = FormValues[i];\n      }\n    }\n    this.customFormService.SaveApplicantForm(obj).subscribe(res =>{\n      //console.log(res);\n      if(res){\n        this.isApplicationFilled = true;\n        this.ProfileDetails = res;\n      }\n    });\n  }\n\n  EditField(index){\n    //console.log(index);\n    this.isSelected[index] = true;\n  }\n\n  checkOptionInProfile(option,index){\n    var label = this.FormFields[index].label;\n\n    if(this.ProfileDetails[label] && this.ProfileDetails[label].length>0)\n    return this.ProfileDetails[label].includes(option);\n    else\n    return false;\n  }\n\n  onSaveField(index){\n    var oldobj = {_id:  this.sessionData._id};\n    var newobj = {}\n\n    const FormControlsList = this.ProfileForm.get('customcontrols') as FormArray;\n    var FormValues = FormControlsList.value[index];\n    var label = this.FormFields[index].label;\n\n    if(this.FormFields[index].type === \"Checkbox\"){\n    console.log(FormValues);\n      newobj[label] = new Array();\n      for(var j=0;j<this.FormFields[index].optionCount;j++){\n        if(FormValues[j]){\n          newobj[label].push(this.FormFields[index].options[j]);\n          console.log(newobj[label]);\n        }\n      }\n    }\n    else{\n      newobj[label] = FormValues;\n    }\n\n    console.log(newobj[label]);\n    console.log(this.ProfileDetails[label]);\n    if(newobj[label] === this.ProfileDetails[label]){\n      console.log(\"no change\");\n    }\n    else{\n      this.customFormService.UpdateApplicantProfile(oldobj,newobj).subscribe((res) => {\n        if(res){\n          this.isSelected[index] = false;\n          this.ProfileDetails = res;\n        }\n      })\n    }\n  }\n\n  GetApplicantProfile(){\n    this.customFormService.GetApplicantProfile(this.sessionData._id).subscribe((obj) => {\n      if(obj){\n        this.isApplicationFilled = true;\n        this.ProfileDetails = obj;\n      }\n      else{\n        this.isApplicationFilled = false;\n      }\n      this.GetEmptyForm();\n    });\n  }\n\n\n  GetEmptyForm(){\n    this.customFormService.GetForm(this.type).subscribe((obj) =>{\n\n      if(obj){\n        //console.log(obj);\n        this.FormTitle = obj.FormTitle;\n        \n        this.FormFields = obj.FormFields\n        if(obj.FormFields)\n          this.fieldcount = obj.FormFields.length;\n        for(var i=0; i<this.fieldcount;i++){\n          \n          this.isSelected[i] = false;\n          if(this.FormFields[i].type == 'Checkbox'){\n\n            const newArray = new FormArray([]);\n            for(var count=0;count<this.FormFields[i].optionCount;count++){\n              var option = this.FormFields[i].options[count];\n              var optioncontrol;\n\n              if(this.checkOptionInProfile(option,i)){\n                optioncontrol = new FormControl(true);\n              }\n              else\n                optioncontrol = new FormControl(false);\n\n              newArray.push(optioncontrol);\n            }\n            const FormControlsList = this.ProfileForm.get('customcontrols') as FormArray;\n            FormControlsList.push(newArray);\n          }\n          else{\n            var newcontrol;\n            var val = this.ProfileDetails[this.FormFields[i].label];\n            if(val){\n              newcontrol = new FormControl(val, Validators.required);\n            }\n            else{\n              newcontrol = new FormControl(null, Validators.required);\n            }\n\n            const FormControlsList = this.ProfileForm.get('customcontrols') as FormArray;\n            //FormControlsList.add\n            FormControlsList.push(newcontrol);\n          }\n        }\n      }\n      \n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/applicant-form/applicant-form.component.ts","import { Component, OnInit,Input } from '@angular/core';\nimport { CustomFormService } from '../custom-form.service';\n\n@Component({\n  selector: 'app-applicant-list',\n  templateUrl: './applicant-list.component.html',\n  styleUrls: ['./applicant-list.component.css']\n})\nexport class ApplicantListComponent implements OnInit{\n  AllApplicants : any[];\n  FormsList : any[];\n  ApplicantsDetails: any[];\n  FilterType;\n  FilterText:string;\n  userFilter:any ={};\n  SelectedApplicant = {};\n\n  constructor(private customFormService:CustomFormService){}\n\n  ngOnInit() {\n    this.customFormService.GetAllApplicants().subscribe(obj =>{\n      if(obj && obj.length){\n        this.AllApplicants = obj;\n        //console.log(this.AllApplicants);\n\n        this.customFormService.GetAllForms().subscribe(obj =>{\n          if(obj && obj.length){\n            this.FormsList = obj;\n            //console.log(this.FormsList);\n          }\n          this.CategorizeApplicant();\n        });\n      }\n    });\n\n  }\n\n  OnFilterChange(){\n    this.userFilter = {}\n    //this.userFilter[this.FilterType] = this.FilterText;\n    this.userFilter = this.FilterText;\n    console.log(this.userFilter);\n  }\n\n  OnSelectApplicantType(index){\n    this.SelectedApplicant = this.ApplicantsDetails[index];\n    this.FilterType = \"\";\n    this.FilterText = \"\";\n    this.userFilter = {}\n   }\n  \n  CategorizeApplicant(){\n    this.ApplicantsDetails = new Array();\n    this.FormsList.forEach((form) => {\n      var obj = {};\n      obj[\"type\"] = form.FormType;\n      obj[\"fields\"] = form.FormFields;\n      obj[\"applicants\"] = this.AllApplicants.filter(item => {\n        //console.log(item.type);\n        return item.type == form.FormType\n      });\n      obj[\"count_applicants\"] = obj[\"applicants\"].length;\n      this.ApplicantsDetails.push(obj);\n    })\n    //console.log(this.ApplicantsDetails);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/applicant-list/applicant-list.component.ts","import { Component, OnInit, Input ,OnChanges, Output, EventEmitter} from '@angular/core';\nimport { CustomFormService } from '../custom-form.service';\n\nimport { FormControlModel } from '../form-control.model';\nimport { AuthService } from '../../auth/auth.service';\nimport { emit } from 'cluster';\n\n@Component({\n  selector: 'app-custom-form',\n  templateUrl: './custom-form.component.html',\n  styleUrls: ['./custom-form.component.css']\n})\nexport class CustomFormComponent implements OnInit, OnChanges {\n  @Input() SelectedForm = {\n    FormFields:[],\n    FormTitle:\"\",\n    FormType:\"\",\n    _id:null\n  };\n  @Output() FormSaved = new EventEmitter();\n\n  controls : Array<FormControlModel>;\n  ProfileFormControlCount = 0;\n  ApplicantType;\n\n  ngOnChanges(){\n    this.ProfileFormControlCount = this.SelectedForm.FormFields.length;\n  }\n \n  constructor(private customFormService:CustomFormService, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authService.getApplicantType().subscribe(obj =>{\n      //console.log(obj);\n      this.ApplicantType = obj;\n    })\n\n    this.customFormService.GetFormControls().subscribe((obj) =>{\n      this.controls = new Array();\n      for(var i=0;i<obj.length;i++){\n        const control = new FormControlModel();\n        control.type = obj[i].FieldType;\n        control.label = \"\";\n        control.isMultiField = obj[i].isMultipleOption;\n        if(control.isMultiField == 1){\n          control.optionCount = 1;\n          control.options = ['option0'];\n        }\n        \n        this.controls.push(control);\n      }\n    });\n  }\n\n  RemoveControl(index){\n    this.SelectedForm.FormFields.splice(index,1);\n  }\n\n  AddControl(control){\n    const labelname = \"Label\"+ this.ProfileFormControlCount;\n    const newitem = new FormControlModel();\n    newitem.label = labelname;\n    newitem.type = control.type;\n    newitem.optionCount = control.optionCount;\n    //console.log(control.optionCount);\n    newitem.options = new Array();\n    for(var count=0;count<newitem.optionCount;count++){\n      var optionlabel = \"option\"+count;\n      newitem.options.push(optionlabel);\n    }\n    this.SelectedForm.FormFields.push(newitem);\n    this.ProfileFormControlCount++;\n  }\n\n  OnSave(){\n    //console.log(this.SelectedForm.FormFields);\n    this.customFormService.SaveForm(this.SelectedForm.FormFields, this.SelectedForm.FormTitle, this.SelectedForm.FormType, this.SelectedForm._id)\n    .subscribe(obj =>{\n      if(obj){\n        console.log(obj);\n        this.SelectedForm._id = obj._id;\n        this.FormSaved.emit(this.SelectedForm);\n      }\n  });\n    \n  }\n\n  OnOptionChange(i,newvalue,j){\n    this.SelectedForm.FormFields[i].options[j] = newvalue;\n    //console.log(this.SelectedForm.FormFields[i]);\n  }\n\n  AddOption(i){\n    var optionlabel = \"option\"+this.SelectedForm.FormFields[i].optionCount;\n    this.SelectedForm.FormFields[i].optionCount++;\n    this.SelectedForm.FormFields[i].options.push(optionlabel);\n  }\n\n  RemoveOption(controlindex,optionindex){\n    this.SelectedForm.FormFields[controlindex].options.splice(optionindex,1);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/custom-form/custom-form.component.ts","export class FormControlModel {\r\n    type:string;\r\n    optionCount :number;\r\n    options:any[];\r\n    label:string;\r\n    isMultiField;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/form-control.model.ts","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  UserType:string\r\n\r\n  constructor(private authService:AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.UserType = this.authService.sessionData.type;\r\n  }\r\n\r\n  OnLogout(){\r\n    this.authService.Logout();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-preview-form',\n  templateUrl: './preview-form.component.html',\n  styleUrls: ['./preview-form.component.css']\n})\nexport class PreviewFormComponent implements OnInit {\n  @Input() SelectedForm;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/preview-form/preview-form.component.ts","import { Component, OnInit } from '@angular/core';\nimport { CustomFormService } from '../custom-form.service';\n\n@Component({\n  selector: 'app-view-forms',\n  templateUrl: './view-forms.component.html',\n  styleUrls: ['./view-forms.component.css']\n})\nexport class ViewFormsComponent implements OnInit {\n  FormsList : any[];\n  SelectedForm;\n  isSelected:boolean = false;\n  FormsCount:number = 0;\n  constructor(private customFormService:CustomFormService){}\n\n  ngOnInit() {\n    this.getAllForms();\n  }\n\n  OnSelectForm(index){\n    this.isSelected = true;\n    //console.log(this.FormsList[index]);\n    this.SelectedForm = this.FormsList[index];\n  }\n\n  OnSaveForm(event){\n    console.log(\"OnSave Form create form\");\n    this.SelectedForm = event;\n    this.isSelected = true;\n    this.getAllForms();\n  }\n\n  CreateNewForm(){\n    this.SelectedForm = {\n      FormFields:[],\n      FormTitle:\"\",\n      FormType:\"\",\n      _id:null\n    }\n    this.isSelected = true;\n  }\n\n  getAllForms(){\n    this.customFormService.GetAllForms().subscribe(obj =>{\n      if(obj && obj.length){\n        this.FormsList = obj;\n        this.FormsCount = this.FormsList.length;\n      }\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/view-forms/view-forms.component.ts","import { Component, OnInit,Input } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.css']\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  @Input() message:string;\r\n  constructor(private router:Router, private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  OnSignIn(form:NgForm){\r\n    const userid = form.value.userid;\r\n    const password = form.value.password;\r\n    this.authService.Signin(userid, password).subscribe(obj => {\r\n      if(obj.user == false){\r\n          this.message = \"Your username or password is incorrect\";\r\n      }\r\n      else{\r\n        this.authService.sessionData = obj.user;\r\n        this.authService.isAuthenticated.next(true);\r\n        this.router.navigate(['/']);\r\n      }\r\n  }, error => this.router.navigate(['/signin']));;\r\n  }\r\n\r\n  GoToSignup(){\r\n    this.router.navigate(['/signup']);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/signin/signin.component.ts","import { Component, OnInit , Input} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { concat } from 'rxjs/operator/concat';\r\nimport { Router } from '@angular/router';\r\nimport 'rxjs/rx';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  @Input() otptext:string;\r\n  @Input() phoneno:string;\r\n  @Input() message:string;\r\n  \r\n  ApplicantType: any[];\r\n  isPhoneVerified = false;\r\n  isSMSSent = false;\r\n  constructor(private router: Router, private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.getApplicantType().subscribe(obj =>{\r\n      //console.log(obj);\r\n      this.ApplicantType = obj;\r\n    })\r\n  }\r\n\r\n  OnSignUp(form:NgForm){\r\n    const userid = form.value.userid;\r\n    const password = form.value.password;\r\n    const type = form.value.type;\r\n    this.authService.Signup(userid, password, type).subscribe(obj => {\r\n      if(obj.user == false){\r\n        this.message = \"Some Error Occured. Try Again\";\r\n      }\r\n      else{\r\n        this.authService.sessionData = obj.user;\r\n        this.authService.isAuthenticated.next(true);\r\n        this.router.navigate(['/']);\r\n      }\r\n  }, error => this.router.navigate(['/signup']));\r\n  }\r\n\r\n  SendOTP(){\r\n    this.authService.SendOTP(this.phoneno).subscribe(obj =>{\r\n        if(obj.OTPSent){\r\n        this.isSMSSent = true;\r\n        this.message = \"SMS successfully sent.\";\r\n      }\r\n      else{\r\n        this.message = obj.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  VerifyOTP(){\r\n    this.authService.VerifyOTP(this.otptext,this.phoneno).subscribe(obj =>{\r\n      if(obj.OTPVerified){\r\n        this.isPhoneVerified = true;\r\n        this.message = \"Phone No. verified.\";\r\n      }\r\n      else{\r\n        this.message = obj.message;\r\n      }\r\n    });\r\n  }\r\n  OnLoginPage(){\r\n    this.router.navigate(['/signin']);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/signup/signup.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { Http } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { error } from 'util';\r\nimport 'rxjs/rx';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    isAuthenticated = new Subject<boolean>();\r\n    sessionData;\r\n    constructor(private router: Router, private http: Http) { }\r\n\r\n    Signin(userid, password) {\r\n        //console.log(userid,password);\r\n        return this.http.post(`login`, { username: userid, password: password }).map(res => {\r\n            if (res.status === 400) {\r\n                this.router.navigate(['/signin']);\r\n                throw new Error(\"\" + res.status);\r\n            }\r\n            else {\r\n                this.sessionData = res.json().sessionData;\r\n                return res.json();\r\n            }\r\n        })\r\n    }\r\n\r\n    Signup(userid, password, type) {\r\n        return this.http.post(`register`, {userid:userid, password: password , type}).map(res => {\r\n           if (res.status == 400) {\r\n                this.router.navigate(['/signup']);\r\n                throw new Error(\"\"+res.status);\r\n            }\r\n            else {\r\n                return res.json();\r\n            }\r\n        });\r\n    }\r\n\r\n    getApplicantType(){\r\n        return this.http.get('getApplicantType').map(res =>{\r\n            if(res.status == 400){\r\n                throw new Error(\"400\");\r\n            }\r\n            else{\r\n                return res.json();\r\n            }\r\n        })\r\n    }\r\n\r\n    isSessionOpen() {\r\n        //console.log(\"isSession Open\");\r\n        return this.http.get(`isSessionOpen`).map(res => {\r\n            if (res.status !== 200)\r\n                throw new Error(\"Couldn't authenticate. Some Error Occured\" + res.status);\r\n            else {\r\n                var obj = res.json();\r\n                \r\n                if (obj.isSessionOpen === true) {\r\n                    this.isAuthenticated.next(true);\r\n                    this.sessionData = obj.sessionData;\r\n                    //console.log(this.sessionData);\r\n                    return true;\r\n                }\r\n                else {\r\n                    this.isAuthenticated.next(false);\r\n                    this.sessionData = null;\r\n                    return false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    SendOTP(phoneno){\r\n        console.log(\"SendOTP Auth\")\r\n       return this.http.post('sendOTP',{phoneno:phoneno}).map(res =>{\r\n            if(res.status == 400){\r\n                throw new Error(\"Couldn't Verify. Some Error Occured\" + res.status);\r\n            }\r\n            else{\r\n              return res.json();\r\n            }\r\n          })\r\n        }\r\n\r\n    VerifyOTP(otp, phoneno){\r\n        console.log(\"Verify OTP\")\r\n        return this.http.post('verifyOTP',{phoneno:phoneno, otp:otp}).map(res =>{\r\n             if(res.status == 400){\r\n                 throw new Error(\"Couldn't Verify. Some Error Occured\" + res.status);\r\n             }\r\n             else{\r\n               return res.json();\r\n             }\r\n           })\r\n    }\r\n    Logout() {\r\n        return this.http.get('logout').subscribe(obj => {\r\n            console.log(\"Logged out successfully\");\r\n            this.isAuthenticated.next(false);\r\n            this.router.navigate(['/signin']);\r\n        })\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/auth.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 470\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-form/applicant-form.component.css\n// module id = 471\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-list/applicant-list.component.css\n// module id = 472\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/custom-form/custom-form.component.css\n// module id = 473\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = 474\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/preview-form/preview-form.component.css\n// module id = 475\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/view-forms/view-forms.component.css\n// module id = 476\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signin/signin.component.css\n// module id = 477\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signup/signup.component.css\n// module id = 478\n// module chunks = 1","module.exports = \"<div id=\\\"wrapper\\\">\\n    <!-- <ng-template [ngIf]=\\\"!IsAuthenticated()\\\">\\n        <nav class=\\\"navbar navbar-default navbar-fixed-top\\\" role=\\\"navigation\\\" style=\\\"margin-bottom: 0\\\">\\n            <div class=\\\"navbar-header\\\">\\n            </div>\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <!-- <li routerLinkActive=\\\"active\\\">\\n                    <a [routerLink]=\\\"['/report']\\\">Report</a>\\n                </li>\\n                <li routerLinkActive=\\\"active\\\">\\n                    <a [routerLink]=\\\"['/overrides']\\\">Overrides</a>\\n                </li> \\n                <li>\\n                    <a style=\\\"cursor: pointer\\\" (click)=\\\"OnLogout()\\\">Logout</a>\\n                </li>\\n            </ul>\\n          </nav>\\n    </ng-template> -->\\n  <div id=\\\"page-wrapper\\\" style=\\\"margin:100px\\\">\\n     <!-- <ng-template [ngIf]=\\\"!IsAuthenticated()\\\">\\n          <div class=\\\"col-md-12\\\">\\n              <app-signin></app-signin>\\n          </div>\\n      </ng-template> -->\\n      <router-outlet></router-outlet>\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 479\n// module chunks = 1","module.exports = \"<!--Empty Form-->\\n<div *ngIf=\\\"!isApplicationFilled\\\">\\n    <form (ngSubmit)=\\\"onSaveForm()\\\" *ngIf=\\\"!isApplicationFilled && fieldcount >0\\\" [formGroup]=\\\"ProfileForm\\\">\\n        <h3>{{FormTitle}}</h3>\\n      <div formArrayName=\\\"customcontrols\\\" *ngFor=\\\"let item of ProfileForm.get('customcontrols').controls; let i = index;\\\">\\n       <div [ngSwitch]=\\\"FormFields[i].type\\\">\\n    \\n          <!-----------------------For Radio Button------------------>\\n          <div *ngSwitchCase=\\\"'Radio'\\\" class=\\\"form-group\\\">\\n            <label>\\n              {{FormFields[i].label}}\\n              <div *ngFor=\\\"let option of FormFields[i].options; let j = index\\\" >\\n                <!-- <label class=\\\"radio-inline\\\">{{option}}</label> -->\\n                {{option}}\\n                  <input type=\\\"radio\\\" [formControlName]=\\\"i\\\" [value]=\\\"option\\\">\\n              </div>\\n            </label>\\n          </div>\\n          <!-----------------------End Radio Button------------------>\\n    \\n          <!-----------------------For Checkbox Button------------------>\\n          <div *ngSwitchCase=\\\"'Checkbox'\\\">\\n            <label [for]=\\\"i\\\">\\n              {{FormFields[i].label}}\\n              <div *ngFor=\\\"let option of FormFields[i].options; let j = index\\\" [formArrayName]=\\\"i\\\">\\n                {{option}}\\n                  <input type=\\\"checkbox\\\" [formControlName]=\\\"j\\\">\\n              </div>\\n            </label>\\n          </div>\\n          <!-----------------------End Checkbox Button------------------>\\n    \\n          <!-----------------------For Textbox Button------------------>\\n          <div *ngSwitchCase=\\\"'Textbox'\\\" class=\\\"form-group\\\">\\n            <label [for]=\\\"i\\\">\\n              {{FormFields[i].label}}\\n              <input type=\\\"text\\\" [formControlName]=\\\"i\\\">\\n            </label>\\n          </div>\\n          <!----------------------End Textbox Button------------------>\\n    \\n          <!-----------------------For Paragraph Button------------------>\\n          <div *ngSwitchCase=\\\"'Textarea'\\\" class=\\\"form-group\\\">\\n            <label [for]=\\\"i\\\">\\n              {{FormFields[i].label}}\\n              <textarea [formControlName]=\\\"i\\\"></textarea>\\n            </label>\\n          </div>\\n          <!----------------------End Paragraph Button------------------>\\n    \\n          <!-----------------------For Dropbox Button------------------>\\n          <div *ngSwitchCase=\\\"'Dropdown'\\\" class=\\\"form-group\\\">\\n            <label [for]=\\\"i\\\">\\n              {{FormFields[i].label}}\\n              <select [formControlName]=\\\"i\\\">\\n                  <option selected disabled>Choose one</option>\\n                <option *ngFor=\\\"let option of FormFields[i].options;let j=index\\\">{{option}}</option>\\n              </select>\\n            </label>\\n          </div>\\n           <!----------------------End Dropbox Button------------------>\\n        </div>\\n      </div>\\n      <br>\\n      <button [disabled]=\\\"!ProfileForm.valid\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\n    </form>\\n</div>\\n<!-- Profile Already Filled-->\\n<div *ngIf=\\\"isApplicationFilled\\\">\\n<ul>\\n  <li *ngFor=\\\"let item of FormFields;let i= index\\\">\\n    <label>{{item.label}}</label> : {{ProfileDetails[item.label]}}\\n    <br>\\n    <a (click)=\\\"EditField(i)\\\">Edit</a>\\n\\n    <!------------------------------Edit Form---------------------------------->\\n    <form *ngIf=\\\"isSelected[i]\\\" (ngSubmit)=\\\"onSaveField(i)\\\" [formGroup]=\\\"ProfileForm\\\">\\n      <div formArrayName=\\\"customcontrols\\\">\\n       <div [ngSwitch]=\\\"FormFields[i].type\\\">\\n    \\n          <!-----------------------For Radio Button------------------>\\n          <div *ngSwitchCase=\\\"'Radio'\\\" class=\\\"form-group\\\">\\n            <label>\\n              <div *ngFor=\\\"let option of FormFields[i].options; let j = index\\\" >\\n                <!-- <label class=\\\"radio-inline\\\">{{option}}</label> -->\\n                {{option}}\\n                  <input type=\\\"radio\\\" [formControlName]=\\\"i\\\" [value]=\\\"option\\\">\\n              </div>\\n            </label>\\n          </div>\\n          <!-----------------------End Radio Button------------------>\\n    \\n          <!-----------------------For Checkbox Button------------------>\\n          <div *ngSwitchCase=\\\"'Checkbox'\\\">\\n            <label [for]=\\\"i\\\">\\n              <div *ngFor=\\\"let option of FormFields[i].options; let j = index\\\" [formArrayName]=\\\"i\\\">\\n                {{option}}\\n                  <input type=\\\"checkbox\\\" [formControlName]=\\\"j\\\">\\n              </div>\\n            </label>\\n          </div>\\n          <!-----------------------End Checkbox Button------------------>\\n    \\n          <!-----------------------For Textbox Button------------------>\\n          <div *ngSwitchCase=\\\"'Textbox'\\\" class=\\\"form-group\\\">\\n            <label [for]=\\\"i\\\">\\n              <input type=\\\"text\\\" [formControlName]=\\\"i\\\"\\n            </label>\\n          </div>\\n          <!----------------------End Textbox Button------------------>\\n    \\n          <!-----------------------For Paragraph Button------------------>\\n          <div *ngSwitchCase=\\\"'Textarea'\\\" class=\\\"form-group\\\">\\n            <label [for]=\\\"i\\\">\\n              <textarea [formControlName]=\\\"i\\\"></textarea>\\n            </label>\\n          </div>\\n          <!----------------------End Paragraph Button------------------>\\n    \\n          <!-----------------------For Dropbox Button------------------>\\n          <div *ngSwitchCase=\\\"'Dropdown'\\\" class=\\\"form-group\\\">\\n            <label [for]=\\\"i\\\">\\n              <select [formControlName]=\\\"i\\\">\\n                  <option selected disabled>Choose one</option>\\n                <option *ngFor=\\\"let option of FormFields[i].options;let j=index\\\">{{option}}</option>\\n              </select>\\n            </label>\\n          </div>\\n           <!----------------------End Dropbox Button------------------>\\n        </div>\\n      </div>\\n      <br>\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\n    </form>\\n  </li>\\n</ul>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-form/applicant-form.component.html\n// module id = 480\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n  <h3>\\n    Applicant List\\n  </h3>\\n  <div class=\\\"col-md-2\\\">\\n    <ul>\\n      <li *ngFor=\\\"let item of ApplicantsDetails;let j= index\\\">\\n        <a (click)=\\\"OnSelectApplicantType(j)\\\">{{item.type}}</a>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"col-md-8\\\"  *ngIf=\\\"SelectedApplicant.count_applicants > 0\\\">\\n    <select [(ngModel)]=\\\"FilterType\\\">\\n      <option selected disabled>Choose one</option>\\n      <option *ngFor=\\\"let col of SelectedApplicant.fields\\\">{{col.label}}</option>\\n    </select>\\n\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"FilterText\\\" (ngModelChange)=\\\"OnFilterChange()\\\">\\n    <!-- <button (click)=\\\"OnFilterChange()\\\">Search</button> -->\\n    <table class=\\\"table-striped table-bordered\\\">\\n      \\n      <tr>\\n        <th *ngFor=\\\"let col of SelectedApplicant.fields\\\">\\n          {{col.label}}\\n        </th>\\n      </tr>\\n      <tr *ngFor=\\\"let applicant of SelectedApplicant.applicants | filterBy: userFilter\\\">\\n        <td *ngFor=\\\"let col of SelectedApplicant.fields\\\">{{applicant[col.label]}}</td>\\n      </tr>\\n    </table>\\n    <br>\\n    \\n  </div>\\n  <!-- <div class=\\\"col-md-2\\\" *ngFor=\\\"let filter of userFilter | keys\\\">\\n      <label>filter.key</label>filter.value\\n  </div> -->\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-list/applicant-list.component.html\n// module id = 481\n// module chunks = 1","module.exports = \"<span>\\n  Form Title :\\n</span>\\n<input [(ngModel)]=\\\"SelectedForm.FormTitle\\\">\\n<br>\\n<span>\\n  Form Type :\\n</span>\\n<select id=\\\"type\\\" name=\\\"type\\\" [(ngModel)]=\\\"SelectedForm.FormType\\\" required>\\n  <option *ngFor=\\\"let option of ApplicantType\\\">{{option.type}}</option>\\n</select>\\n\\n<table class=\\\"table-bordered table-condensed table-striped\\\">\\n  <tr *ngFor=\\\"let control of controls\\\">\\n    <td>{{control.type}}</td>\\n    <td *ngIf=\\\"!control.isMultiField\\\"></td>\\n    <td *ngIf=\\\"control.isMultiField\\\">\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"control.optionCount\\\">\\n    </td>\\n    <td>\\n      <a (click)=\\\"AddControl(control)\\\">Add</a>\\n    </td>\\n  </tr>\\n</table>\\n\\n<div *ngIf=\\\"ProfileFormControlCount >0\\\">\\n  <div *ngFor=\\\"let item of SelectedForm.FormFields; let i = index;\\\">\\n    <div [ngSwitch]=\\\"item.type\\\">\\n      <label>{{item.type}}</label>\\n      <!-----------------------For Radio Button------------------>\\n      <div *ngSwitchCase=\\\"'Radio'\\\" class=\\\"form-group\\\">\\n        <input [(ngModel)]=\\\"item.label\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        <ul>\\n          <li *ngFor=\\\"let option of item.options; let j = index\\\">\\n            <input [value]=\\\"option\\\" (change)=\\\"OnOptionChange(i,$event.target.value,j)\\\">\\n            <a (click)=\\\"RemoveOption(i,j)\\\">X</a>\\n          </li>\\n        </ul>\\n        <a (click)=\\\"AddOption(i)\\\">Add Options</a>\\n        <a (click)=\\\"RemoveControl(i)\\\">Remove Control</a>\\n      </div>\\n      <!-----------------------End Radio Button------------------>\\n\\n      <!-----------------------For Checkbox Button------------------>\\n      <div *ngSwitchCase=\\\"'Checkbox'\\\" class=\\\"form-group\\\">\\n        <input [(ngModel)]=\\\"item.label\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        <ul>\\n          <li *ngFor=\\\"let option of item.options; let j = index\\\">\\n            <input [value]=\\\"option\\\" (change)=\\\"OnOptionChange(i,$event.target.value,j)\\\">\\n            <a (click)=\\\"RemoveOption(i,j)\\\">X</a>\\n          </li>\\n        </ul>\\n        <a (click)=\\\"AddOption(i)\\\">Add Options</a>\\n        <a (click)=\\\"RemoveControl(i)\\\">Remove Control</a>\\n      </div>\\n      <!-----------------------End Checkbox Button------------------>\\n\\n      <!-----------------------For Dropbox Button------------------>\\n      <div *ngSwitchCase=\\\"'Dropdown'\\\" class=\\\"dropdown\\\">\\n        <input [(ngModel)]=\\\"item.label\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\n        <ul>\\n          <li *ngFor=\\\"let option of item.options; let j = index\\\">\\n            <input [value]=\\\"option\\\" (change)=\\\"OnOptionChange(i,$event.target.value,j)\\\">\\n            <a (click)=\\\"RemoveOption(i,j)\\\">X</a>\\n          </li>\\n        </ul>\\n        <a (click)=\\\"AddOption(i)\\\">Add Options</a>\\n        <a (click)=\\\"RemoveControl(i)\\\">Remove Control</a>\\n      </div>\\n      <!----------------------End Dropbox Button------------------>\\n\\n      <!-----------------------For Textbox Button------------------>\\n      <div *ngSwitchCase=\\\"'Textbox'\\\" class=\\\"form-group\\\">\\n        <input [(ngModel)]=\\\"item.label\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        <a (click)=\\\"RemoveControl(i)\\\">Remove Control</a>\\n      </div>\\n\\n      <!----------------------End Textbox Button------------------>\\n\\n      <!-----------------------For TextArea Button------------------>\\n      <div *ngSwitchCase=\\\"'Textarea'\\\" class=\\\"form-group\\\">\\n        <input [(ngModel)]=\\\"item.label\\\" [value]=\\\"item.label\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        <a (click)=\\\"RemoveControl(i)\\\">Remove Control</a>\\n      </div>\\n      <!----------------------End TextArea Button------------------>\\n    </div>\\n  </div>\\n  <br>\\n\\n  <button class=\\\"btn btn-primary\\\" *ngIf=\\\"ProfileFormControlCount>0\\\" (click)=\\\"OnSave()\\\" type=\\\"submit\\\">Save</button>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/custom-form/custom-form.component.html\n// module id = 482\n// module chunks = 1","module.exports = \"<div id=\\\"wrapper\\\">\\r\\n        <nav class=\\\"navbar navbar-default navbar-fixed-top\\\" role=\\\"navigation\\\" style=\\\"margin-bottom: 0\\\">\\r\\n            <div class=\\\"navbar-header\\\">\\r\\n            </div>\\r\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n                <!-- <li routerLinkActive=\\\"active\\\" *ngIf=\\\"UserType == 'Admin'\\\">\\r\\n                    <a [routerLink]=\\\"['createform']\\\">Create Form</a>\\r\\n                </li> -->\\r\\n                <li routerLinkActive=\\\"active\\\" *ngIf=\\\"UserType == 'Admin'\\\">\\r\\n                    <a [routerLink]=\\\"['forms']\\\">View Form</a>\\r\\n                </li>\\r\\n                <li routerLinkActive=\\\"active\\\" *ngIf=\\\"UserType == 'Admin'\\\">\\r\\n                        <a [routerLink]=\\\"['applicants']\\\">Applicants</a>\\r\\n                    </li>\\r\\n                <li routerLinkActive=\\\"active\\\" *ngIf=\\\"UserType != 'Admin'\\\">\\r\\n                    <a [routerLink]=\\\"['profile']\\\">Profile</a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a style=\\\"cursor: pointer\\\" (click)=\\\"OnLogout()\\\">Logout</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n  <div id=\\\"page-wrapper\\\" style=\\\"margin:100px\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = 483\n// module chunks = 1","module.exports = \"    <h4>Preview</h4>\\n    <h4>{{SelectedForm.FormTitle}}</h4>\\n        <div *ngFor=\\\"let item of SelectedForm.FormFields;\\\">\\n            <div [ngSwitch]=\\\"item.type\\\">\\n                <label>\\n                    {{item.label}}\\n                </label>\\n               <!-----------------------For Radio Button------------------>\\n               <div *ngSwitchCase=\\\"'Radio'\\\" class=\\\"form-group\\\">\\n                 <div *ngFor=\\\"let option of item.options; let j = index\\\" >\\n                     <!-- <label class=\\\"radio-inline\\\">{{option}}</label> -->\\n                     {{option}}\\n                     <input type=\\\"radio\\\" [value]=\\\"option\\\">\\n                    </div>\\n               </div>\\n               <!-----------------------End Radio Button------------------>\\n         \\n               <!-----------------------For Checkbox Button------------------>\\n               <div *ngSwitchCase=\\\"'Checkbox'\\\">\\n                   <div *ngFor=\\\"let option of item.options; let j = index\\\">\\n                     {{option}}\\n                       <input type=\\\"checkbox\\\">\\n                   </div>\\n               </div>\\n               <!-----------------------End Checkbox Button------------------>\\n         \\n               <!-----------------------For Textbox Button------------------>\\n               <div *ngSwitchCase=\\\"'Textbox'\\\" class=\\\"form-group\\\">\\n                   <input type=\\\"text\\\"/>\\n               </div>\\n               <!----------------------End Textbox Button------------------>\\n         \\n               <!-----------------------For Paragraph Button------------------>\\n               <div *ngSwitchCase=\\\"'Textarea'\\\" class=\\\"form-group\\\">\\n                   <textarea></textarea>\\n               </div>\\n               <!----------------------End Paragraph Button------------------>\\n         \\n               <!-----------------------For Dropbox Button------------------>\\n               <div *ngSwitchCase=\\\"'Dropdown'\\\" class=\\\"form-group\\\">\\n                   <select>\\n                       <option selected disabled>Choose one</option>\\n                     <option *ngFor=\\\"let option of item.options;let j=index\\\">{{option}}</option>\\n                   </select>\\n               </div>\\n                <!----------------------End Dropbox Button------------------>\\n             </div>\\n           </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/preview-form/preview-form.component.html\n// module id = 484\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-4\\\">\\n      <ul>\\n        Forms List\\n        <li *ngFor=\\\"let option of FormsList; let j=index\\\"><a (click) =\\\"OnSelectForm(j)\\\">{{option.FormTitle}} ({{option.FormType}})</a></li>\\n      </ul>\\n      <a (click)=\\\"CreateNewForm()\\\">+ New Form</a>\\n    </div>\\n\\n    <div class=\\\"col-xs-4\\\" *ngIf=\\\"isSelected\\\" >\\n        <app-custom-form [SelectedForm]=\\\"SelectedForm\\\"  (FormSaved)=\\\"OnSaveForm($event)\\\"></app-custom-form>\\n    </div>\\n    \\n    <div class=\\\"col-xs-4\\\" *ngIf=\\\"isSelected\\\" >\\n            <app-preview-form [SelectedForm]=\\\"SelectedForm\\\"></app-preview-form>\\n        </div>\\n     \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/view-forms/view-forms.component.html\n// module id = 485\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\r\\n      <span class=\\\"help-block\\\" >{{message}}</span>\\r\\n      <form (ngSubmit)=\\\"OnSignIn(f)\\\" #f=\\\"ngForm\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"userid\\\">Phone No.</label>\\r\\n            <input type=\\\"userid\\\" \\r\\n                     id=\\\"userid\\\" \\r\\n                     class=\\\"form-control\\\" \\r\\n                     ngModel \\r\\n                     name=\\\"userid\\\"\\r\\n                     required\\r\\n                     #userid = \\\"ngModel\\\"> <!-- Just like ngForm ngModel also gives information about control-->\\r\\n            <span class=\\\"help-block\\\" *ngIf=\\\"!userid.valid && userid.touched\\\">Phone No. is invalid</span>\\r\\n           \\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"password\\\">Password</label>\\r\\n            <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" ngModel required #password = \\\"ngModel\\\">\\r\\n            <span class=\\\"help-block\\\" *ngIf=\\\"!password.valid && password.touched\\\" >Password is required</span>\\r\\n  </div>\\r\\n  <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!f.valid && f.touched\\\" type=\\\"submit\\\">Sign In</button>\\r\\n  <button class=\\\"btn btn-default\\\" (click) = \\\"GoToSignup()\\\" type=\\\"button\\\">New User? Sign up</button>\\r\\n  </form>\\r\\n  </div>\\r\\n</div>\\r\\n<!--Email Pattern check pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signin/signin.component.html\n// module id = 486\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\r\\n      <span class=\\\"help-block\\\" >{{message}}</span>\\r\\n        <form (ngSubmit)=\\\"OnSignUp(f)\\\" #f=\\\"ngForm\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"userid\\\">Phone No</label>\\r\\n              <input type=\\\"userid\\\" \\r\\n                       id=\\\"userid\\\" \\r\\n                       class=\\\"form-control\\\" \\r\\n                       name=\\\"userid\\\"\\r\\n                       required\\r\\n                       [(ngModel)]=\\\"phoneno\\\"\\r\\n                       #userid = \\\"ngModel\\\"> <!-- Just like ngForm ngModel also gives information about control-->\\r\\n              <span class=\\\"help-block\\\" *ngIf=\\\"!userid.valid && userid.touched\\\">Phone No. is invalid</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\" *ngIf=\\\"isSMSSent\\\">\\r\\n                <label for=\\\"otp\\\">OTP</label>\\r\\n                  <input type=\\\"text\\\" \\r\\n                           id=\\\"otp\\\" \\r\\n                           class=\\\"form-control\\\" \\r\\n                           name=\\\"otp\\\"\\r\\n                           required\\r\\n                           [(ngModel)]=\\\"otptext\\\"\\r\\n                           #otp = \\\"ngModel\\\"> <!-- Just like ngForm ngModel also gives information about control-->\\r\\n                  <span class=\\\"help-block\\\" *ngIf=\\\"!otp.valid && otp.touched\\\">OTP is invalid</span>\\r\\n                </div>\\r\\n            \\r\\n\\r\\n              <button class=\\\"btn btn-warning\\\" *ngIf=\\\"!isSMSSent\\\" (click)=\\\"SendOTP()\\\" type='button'>Continue</button>\\r\\n              <button class=\\\"btn btn-warning\\\" *ngIf=\\\"isSMSSent && !isPhoneVerified\\\" (click)=\\\"VerifyOTP()\\\" type='button'>Verify OTP</button>\\r\\n            \\r\\n            <div class=\\\"form-group\\\" *ngIf=\\\"isPhoneVerified\\\">\\r\\n              <label for=\\\"type\\\">Type\\r\\n                <select id=\\\"type\\\" name=\\\"type\\\" ngModel required>\\r\\n                    <option selected disabled>Choose one</option>\\r\\n                    <option *ngFor=\\\"let option of ApplicantType;let j=index\\\">{{option.type}}</option>\\r\\n                </select></label>\\r\\n              <label for=\\\"password\\\">Password</label>\\r\\n              <input type=\\\"password\\\" minlength=\\\"6\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" ngModel required #password = \\\"ngModel\\\">\\r\\n              <span class=\\\"help-block\\\" *ngIf=\\\"!password.valid && password.touched\\\" >Password is invalid</span>\\r\\n              <span class=\\\"help-block\\\" *ngIf=\\\"password.errors?.minlength && password.touched\\\">Password must be atleast 6 characters long</span>\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-primary\\\" *ngIf=\\\"isPhoneVerified\\\" [disabled]=\\\"!f.valid && f.touched\\\" type=\\\"submit\\\">Sign Up</button>\\r\\n            <button class=\\\"btn btn-default\\\" (click)=\\\"OnLoginPage()\\\" type='button'>Already have an account? Log in</button>\\r\\n          </form>\\r\\n    </div>\\r\\n</div>\\r\\n  <!-- pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signup/signup.component.html\n// module id = 487\n// module chunks = 1","import { Http } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport * as _ from 'lodash';\r\nimport { map } from 'rxjs/operators/map';\r\n//import 'rxjs/add/operator/map';\r\nimport {Observable} from 'rxjs/observable';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class CustomFormService {\r\n    constructor(private router: Router, private http: Http) { }\r\n\r\n    GetFormControls(){\r\n        return this.http.get('getformcontrols').map(res => {\r\n            if(res.status === 400){\r\n                throw new Error(\"Couldn't get form controls\");\r\n            }\r\n            else{\r\n                return res.json();\r\n            }\r\n        })\r\n    }\r\n\r\n    SaveForm(FormFields,FormTitle, FormType, formid){\r\n        return this.http.post('saveForm',{FormFields:FormFields, FormTitle, FormType, formid}).map(res =>{\r\n            if(res.status == 400){\r\n                throw new Error(\"Couldn't Save Forms\");\r\n            }\r\n            else{\r\n                return res.json();\r\n            }\r\n        })\r\n    }\r\n\r\n    GetForm(type){\r\n        //console.log(\"Get form\");\r\n        return this.http.post('getForm',{type}).map(res =>{\r\n            if(res.status == 400){\r\n                throw new Error(\"Couldn't Get Forms\");\r\n            }\r\n            else{\r\n                var obj = res.json();\r\n                if(!_.isEmpty(obj))\r\n                return res.json();\r\n\r\n                return null;\r\n            }\r\n        });\r\n    }\r\n\r\n    GetAllForms(){\r\n        //console.log(\"Get form\");\r\n        return this.http.get('getAllForms').map(res =>{\r\n            if(res.status == 400){\r\n                throw new Error(\"Couldn't Get Forms\");\r\n            }\r\n            else{\r\n                return res.json();\r\n            }\r\n        });\r\n    }\r\n\r\n    GetAllApplicants(){\r\n        return this.http.get('getAllApplicants').map(res =>{\r\n            if(res.status == 400){\r\n                throw new Error(\"Couldn't Get Applicants List\");\r\n            }\r\n            else{\r\n                var obj = res.json();\r\n                return res.json();\r\n            }\r\n        });\r\n    }\r\n\r\n    SaveApplicantForm(ApplicantDetails){\r\n        return this.http.post('saveApplicantData',ApplicantDetails).map(res =>{\r\n            if(res.status == 400){\r\n                throw new Error(\"Couldn't Get Forms\");\r\n            }\r\n            else{\r\n                var obj = res.json();\r\n                console.log(obj);\r\n\r\n                if(!_.isEmpty(obj))\r\n                return res.json();\r\n\r\n                return null;\r\n            }\r\n        });\r\n    }\r\n\r\n    GetApplicantProfile(_id){\r\n        return this.http.post('getApplicantProfile',{_id}).map(res =>{\r\n            if(res.status == 400){\r\n                throw new Error(\"Couldn't Get Forms\");\r\n            }\r\n            else{\r\n                var obj = res.json();\r\n                if(!_.isEmpty(obj))\r\n                return res.json();\r\n\r\n                return null;\r\n            }\r\n        });\r\n    }\r\n\r\n    UpdateApplicantProfile(oldobj,newobj){\r\n        return this.http.post('UpdateApplicantProfile',{oldobj,newobj}).map(res =>{\r\n            if(res.status == 400){\r\n                throw new Error(\"Couldn't Get Forms\");\r\n            }\r\n            else{\r\n                var obj = res.json();\r\n                console.log(obj);\r\n\r\n                if(!_.isEmpty(obj))\r\n                return res.json();\r\n\r\n                return null;\r\n            }\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/custom-form.service.ts"],"sourceRoot":""}
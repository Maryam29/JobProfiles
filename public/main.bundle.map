{"version":3,"sources":["webpack:///./src/app/home/custom-form.service.ts","webpack:///./src/$_gendir async","webpack:///./src/main.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/home/JsonKeys.pipe.ts","webpack:///./src/app/home/applicant-form/applicant-form.component.ts","webpack:///./src/app/home/applicant-list/applicant-list.component.ts","webpack:///./src/app/home/custom-form/custom-form.component.ts","webpack:///./src/app/home/form-control.model.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/view-forms/view-forms.component.ts","webpack:///./src/app/signin/signin.component.ts","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/home/applicant-form/applicant-form.component.css","webpack:///./src/app/home/applicant-list/applicant-list.component.css","webpack:///./src/app/home/custom-form/custom-form.component.css","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/view-forms/view-forms.component.css","webpack:///./src/app/signin/signin.component.css","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/home/applicant-form/applicant-form.component.html","webpack:///./src/app/home/applicant-list/applicant-list.component.html","webpack:///./src/app/home/custom-form/custom-form.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/view-forms/view-forms.component.html","webpack:///./src/app/signin/signin.component.html","webpack:///./src/app/signup/signup.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Http } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { error } from 'util';\r\nimport 'rxjs/rx';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class CustomFormService {\r\n    constructor(private router: Router, private http: Http) { }\r\n\r\n    GetFormControls(){\r\n        return this.http.get('getformcontrols').map(res => {\r\n            if(res.status === 400){\r\n                throw new Error(\"Couldn't get form controls\");\r\n            }\r\n            else{\r\n                return res.json();\r\n            }\r\n        })\r\n    }\r\n\r\n    SaveForm(FormFields,FormTitle, FormType){\r\n        return this.http.post('saveForm',{FormFields:FormFields, FormTitle, FormType}).map(res =>{\r\n            if(res.status == 400){\r\n                throw new Error(\"Couldn't Save Forms\");\r\n            }\r\n            else{\r\n                console.log(res);\r\n                return res.json();\r\n            }\r\n        }).subscribe(obj =>{\r\n            return obj;\r\n        })\r\n    }\r\n\r\n    GetForm(type){\r\n        //console.log(\"Get form\");\r\n        return this.http.post('getForm',{type}).map(res =>{\r\n            if(res.status == 400){\r\n                throw new Error(\"Couldn't Get Forms\");\r\n            }\r\n            else{\r\n                console.log(res);\r\n                return res.json();\r\n            }\r\n        });\r\n    }\r\n\r\n    GetAllForms(){\r\n        //console.log(\"Get form\");\r\n        return this.http.get('getAllForms').map(res =>{\r\n            if(res.status == 400){\r\n                throw new Error(\"Couldn't Get Forms\");\r\n            }\r\n            else{\r\n                return res.json();\r\n            }\r\n        });\r\n    }\r\n\r\n    GetAllApplicants(){\r\n        return this.http.get('getAllApplicants').map(res =>{\r\n            if(res.status == 400){\r\n                throw new Error(\"Couldn't Get Applicants List\");\r\n            }\r\n            else{\r\n                return res.json();\r\n            }\r\n        });\r\n    }\r\n\r\n    SaveApplicantForm(ApplicantDetails){\r\n        return this.http.post('saveApplicantData',ApplicantDetails).map(res =>{\r\n            if(res.status == 400){\r\n                throw new Error(\"Couldn't Get Forms\");\r\n            }\r\n            else{\r\n                console.log(res);\r\n                return res.json();\r\n            }\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/custom-form.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 533;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir async\n// module id = 533\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Http } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { error } from 'util';\r\nimport 'rxjs/rx';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    isAuthenticated = new Subject<boolean>();\r\n    sessionData;\r\n    constructor(private router: Router, private http: Http) { }\r\n\r\n    Signin(userid, password) {\r\n        //console.log(userid,password);\r\n        return this.http.post(`login`, { username: userid, password: password }).map(res => {\r\n            if (res.status === 400) {\r\n                this.router.navigate(['/signin']);\r\n                throw new Error(\"\" + res.status);\r\n            }\r\n            else {\r\n                this.sessionData = res.json().sessionData;\r\n                return res.json();\r\n            }\r\n        })\r\n    }\r\n\r\n    Signup(userid, password, type) {\r\n        return this.http.post(`register`, {userid:userid, password: password , type}).map(res => {\r\n           if (res.status == 400) {\r\n                this.router.navigate(['/signup']);\r\n                throw new Error(\"\"+res.status);\r\n            }\r\n            else {\r\n                return res.json();\r\n            }\r\n        });\r\n    }\r\n\r\n    getApplicantType(){\r\n        return this.http.get('getApplicantType').map(res =>{\r\n            if(res.status == 400){\r\n                throw new Error(\"400\");\r\n            }\r\n            else{\r\n                return res.json();\r\n            }\r\n        })\r\n    }\r\n\r\n    isSessionOpen() {\r\n        //console.log(\"isSession Open\");\r\n        return this.http.get(`isSessionOpen`).map(res => {\r\n            if (res.status !== 200)\r\n                throw new Error(\"Couldn't authenticate. Some Error Occured\" + res.status);\r\n            else {\r\n                var obj = res.json();\r\n                \r\n                if (obj.isSessionOpen === true) {\r\n                    this.isAuthenticated.next(true);\r\n                    this.sessionData = obj.sessionData;\r\n                    //console.log(this.sessionData);\r\n                    return true;\r\n                }\r\n                else {\r\n                    this.isAuthenticated.next(false);\r\n                    this.sessionData = null;\r\n                    return false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    SendOTP(phoneno){\r\n        console.log(\"SendOTP Auth\")\r\n       return this.http.post('sendOTP',{phoneno:phoneno}).map(res =>{\r\n            if(res.status == 400){\r\n                throw new Error(\"Couldn't Verify. Some Error Occured\" + res.status);\r\n            }\r\n            else{\r\n              return res.json();\r\n            }\r\n          })\r\n        }\r\n\r\n    VerifyOTP(otp, phoneno){\r\n        console.log(\"Verify OTP\")\r\n        return this.http.post('verifyOTP',{phoneno:phoneno, otp:otp}).map(res =>{\r\n             if(res.status == 400){\r\n                 throw new Error(\"Couldn't Verify. Some Error Occured\" + res.status);\r\n             }\r\n             else{\r\n               return res.json();\r\n             }\r\n           })\r\n    }\r\n    Logout() {\r\n        return this.http.get('logout').subscribe(obj => {\r\n            console.log(\"Logged out successfully\");\r\n            this.isAuthenticated.next(false);\r\n            this.router.navigate(['/signin']);\r\n        })\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/auth.service.ts","import { Component } from '@angular/core';\r\nimport { AuthService } from './auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Job Portal';\r\n  IsAuthenticated = false;\r\n  constructor(private AuthService:  AuthService){}\r\n\r\n  ngOnInit(){\r\n    console.log(\"Nginit app compo\");\r\n    this.AuthService.isAuthenticated.subscribe((isauth) => {\r\n      console.log(\"Set Is Authenticated\");\r\n      this.IsAuthenticated = isauth;\r\n    });\r\n    \r\n  }\r\n  OnLogout(){\r\n   //this.AuthService.Logout();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {DropdownModule} from \"ngx-dropdown\";\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AuthGuard } from './auth/auth-guard.service';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { CustomFormService } from './home/custom-form.service';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { CustomFormComponent } from './home/custom-form/custom-form.component';\r\nimport { ApplicantFormComponent } from './home/applicant-form/applicant-form.component';\r\nimport { ViewFormsComponent } from './home/view-forms/view-forms.component';\r\nimport { ApplicantListComponent } from './home/applicant-list/applicant-list.component';\r\n\r\nimport { KeysPipe } from './home/JsonKeys.pipe';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'signin', component: SigninComponent},\r\n  { path: 'signup', component: SignupComponent},\r\n  { path: 'home', component: HomeComponent, canActivate:[AuthGuard],children: [\r\n    { path: 'createform', component: CustomFormComponent, canActivate:[AuthGuard]},\r\n    { path: 'viewforms', component: ViewFormsComponent, canActivate:[AuthGuard]},\r\n    { path: 'applicants', component: ApplicantListComponent, canActivate:[AuthGuard]},\r\n    { path: 'form', component: ApplicantFormComponent, canActivate:[AuthGuard]}\r\n]},\r\n  { path: '**', redirectTo: '/home', pathMatch: 'full' }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SigninComponent,\r\n    HomeComponent,\r\n    SignupComponent,\r\n    CustomFormComponent,\r\n    KeysPipe,\r\n    ApplicantFormComponent,\r\n    ViewFormsComponent,\r\n    ApplicantListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    DropdownModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  providers: [AuthService, AuthGuard, CustomFormService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { CanActivate, CanLoad, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route, ActivatedRoute } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate, CanLoad {\r\n\r\n    constructor(private route: ActivatedRoute, private router: Router, private authService: AuthService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean>|boolean{\r\n    // return true;\r\n    //    2.) If token is not set, which means a new tab is opened, then check the node server if session is still open. if open then take action similar to 1, ese redirect to sigin page\r\n    //     console.log(\"Check for session\");\r\n        return this.authService.isSessionOpen().take(1).map(obj => {\r\n            console.log(obj);\r\n            if (obj == true) {\r\n                return obj;\r\n            }\r\n            else {\r\n                this.router.navigate(['/signin']);\r\n                return obj;\r\n            }\r\n        }\r\n        );\r\n    }\r\n\r\n    canLoad(route: Route) {\r\n        return true;\r\n        // if(this.authService.isAuthenticated()){\r\n        //     return true;\r\n        // }\r\n        // else\r\n        // {\r\n        //     this.router.navigate(['/signin']);\r\n        // }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/auth-guard.service.ts","import { PipeTransform, Pipe } from '@angular/core';\r\n\r\n@Pipe(\r\n    {name: 'keys'}\r\n)\r\nexport class KeysPipe implements PipeTransform {\r\n  transform(JsonObj) : any {\r\n      return Object.keys(JsonObj)[0];\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/JsonKeys.pipe.ts","import { Component, OnInit } from '@angular/core';\nimport { CustomFormService } from '../custom-form.service';\nimport { AuthService } from '../../auth/auth.service';\nimport { FormControl, FormGroup, Validators, FormArray, FormBuilder } from '@angular/forms';\nimport { concat } from 'rxjs/operator/concat';\n\n@Component({\n  selector: 'app-applicant-form',\n  templateUrl: './applicant-form.component.html',\n  styleUrls: ['./applicant-form.component.css']\n})\nexport class ApplicantFormComponent implements OnInit {\n  type:string;\n  fieldcount : number;\n  FormFields = new Array();\n  ProfileForm : FormGroup;\n  FormTitle: string;\n  sessionData;\n  constructor(private customFormService:CustomFormService,private authService:AuthService, private fb : FormBuilder) { }\n\n  ngOnInit() {\n    //console.log(this.authService.sessionData);\n    this.sessionData = this.authService.sessionData;\n    this.type = this.sessionData.type;\n    this.ProfileForm = this.fb.group({\n      customcontrols:new FormArray([])\n    });\n\n    this.customFormService.GetForm(this.type).subscribe((obj) =>{\n\n      if(obj){\n        //console.log(obj);\n        this.FormTitle = obj.FormTitle;\n        \n        this.FormFields = obj.FormFields\n        if(obj.FormFields)\n          this.fieldcount = obj.FormFields.length;\n        for(var i=0; i<this.fieldcount;i++){\n\n          if(this.FormFields[i].type == 'Checkbox'){\n\n            const newArray = new FormArray([]);\n            for(var count=0;count<this.FormFields[i].optionCount;count++){\n              const optioncontrol = new FormControl(false);\n              newArray.push(optioncontrol);\n            }\n            const FormControlsList = this.ProfileForm.get('customcontrols') as FormArray;\n            FormControlsList.push(newArray);\n\n          }\n          else{\n            const newcontrol = new FormControl(null, Validators.required);\n            const FormControlsList = this.ProfileForm.get('customcontrols') as FormArray;\n            //FormControlsList.add\n            FormControlsList.push(newcontrol);\n          }\n        }\n      }\n      \n    });\n\n  }\n\n  onSave(){\n    const FormControlsList = this.ProfileForm.get('customcontrols') as FormArray;\n    //console.log(FormControlsList.value);\n\n    var FormValues = FormControlsList.value;\n    var obj = {_id:  this.sessionData._id};\n    for(var i=0;i<this.FormFields.length;i++){\n      var label = this.FormFields[i].label;\n\n      if(this.FormFields[i].type === \"Checkbox\"){\n        obj[label] = new Array();\n        for(var j=0;j<this.FormFields[i].optionCount;j++){\n          if(FormValues[i][j]){\n            obj[label].push(this.FormFields[i].options[j]);\n          }\n        }\n      }\n      else{\n        obj[label] = FormValues[i];\n      }\n    }\n    console.log(obj);\n    this.customFormService.SaveApplicantForm(obj).subscribe(res =>{\n      console.log(res);\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/applicant-form/applicant-form.component.ts","import { Component, OnInit } from '@angular/core';\nimport { CustomFormService } from '../custom-form.service';\n\n@Component({\n  selector: 'app-applicant-list',\n  templateUrl: './applicant-list.component.html',\n  styleUrls: ['./applicant-list.component.css']\n})\nexport class ApplicantListComponent implements OnInit {\n  ApplicantsList : any[];\n  constructor(private customFormService:CustomFormService){}\n\n  ngOnInit() {\n    this.customFormService.GetAllApplicants().subscribe(obj =>{\n      if(obj && obj.length){\n        this.ApplicantsList = obj;\n        console.log(this.ApplicantsList);\n      }\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/applicant-list/applicant-list.component.ts","import { Component, OnInit } from '@angular/core';\nimport { CustomFormService } from '../custom-form.service';\n\nimport { FormControlModel } from '../form-control.model'\nimport { concat } from 'rxjs/observable/concat';\nimport { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-custom-form',\n  templateUrl: './custom-form.component.html',\n  styleUrls: ['./custom-form.component.css']\n})\nexport class CustomFormComponent implements OnInit {\n  controls : Array<FormControlModel>;\n  FormLabelList: Array<FormControlModel>; // This contains the control type, label and options \n  ProfileFormControlCount = 0;\n  FormType:string;\n  FormTitle:string;\n  ApplicantType;\n  constructor(private customFormService:CustomFormService, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authService.getApplicantType().subscribe(obj =>{\n      //console.log(obj);\n      this.ApplicantType = obj;\n    })\n\n    this.customFormService.GetFormControls().subscribe((obj) =>{\n      this.controls = new Array();\n      for(var i=0;i<obj.length;i++){\n        const control = new FormControlModel();\n        control.type = obj[i].FieldType;\n        control.label = \"\";\n        control.isMultiField = obj[i].isMultipleOption;\n        if(control.isMultiField == 1){\n          control.optionCount = 1;\n          control.options = ['option0'];\n        }\n        \n        this.controls.push(control);\n      }\n    });\n    this.FormLabelList = new Array();\n  }\n\n  AddControl(control){\n    const labelname = \"Label\"+ this.ProfileFormControlCount;\n    const newitem = new FormControlModel();\n    newitem.label = labelname;\n    newitem.type = control.type;\n    newitem.optionCount = control.optionCount;\n    //console.log(control.optionCount);\n    newitem.options = new Array();\n    for(var count=0;count<newitem.optionCount;count++){\n      var optionlabel = \"option\"+count;\n      newitem.options.push(optionlabel);\n    }\n    this.FormLabelList.push(newitem);\n    //console.log(this.FormLabelList);\n    this.ProfileFormControlCount++;\n  }\n\n  OnSave(){\n    //console.log(this.FormLabelList);\n    this.customFormService.SaveForm(this.FormLabelList, this.FormTitle, this.FormType);\n  }\n\n\n  OnOptionChange(i,newvalue,j){\n    this.FormLabelList[i].options[j] = newvalue;\n    //console.log(this.FormLabelList[i]);\n  }\n  AddOption(i){\n    var optionlabel = \"option\"+this.FormLabelList[i].optionCount;\n    this.FormLabelList[i].optionCount++;\n    this.FormLabelList[i].options.push(optionlabel);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/custom-form/custom-form.component.ts","export class FormControlModel {\r\n    type:string;\r\n    optionCount :number;\r\n    options:any[];\r\n    label:string;\r\n    isMultiField;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/form-control.model.ts","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  UserType:string\r\n\r\n  constructor(private authService:AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.UserType = this.authService.sessionData.type;\r\n  }\r\n\r\n  OnLogout(){\r\n    this.authService.Logout();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","import { Component, OnInit } from '@angular/core';\nimport { CustomFormService } from '../custom-form.service';\n\n@Component({\n  selector: 'app-view-forms',\n  templateUrl: './view-forms.component.html',\n  styleUrls: ['./view-forms.component.css']\n})\nexport class ViewFormsComponent implements OnInit {\n  FormsList : any[];\n  SelectedForm;\n  isSelected:boolean = false;\n  FormsCount:number = 0;\n  constructor(private customFormService:CustomFormService){}\n\n  ngOnInit() {\n    this.customFormService.GetAllForms().subscribe(obj =>{\n      if(obj && obj.length){\n        this.FormsList = obj;\n        this.FormsCount = this.FormsList.length;\n        //console.log(this.FormsList);\n      }\n    })\n  }\n\n  OnSelectForm(index){\n    this.isSelected = true;\n    //console.log(this.FormsList[index]);\n    this.SelectedForm = this.FormsList[index];\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/view-forms/view-forms.component.ts","import { Component, OnInit,Input } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.css']\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  @Input() message:string;\r\n  constructor(private router:Router, private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  OnSignIn(form:NgForm){\r\n    const userid = form.value.userid;\r\n    const password = form.value.password;\r\n    this.authService.Signin(userid, password).subscribe(obj => {\r\n      if(obj.user == false){\r\n          this.message = \"Your username or password is incorrect\";\r\n      }\r\n      else{\r\n        this.authService.sessionData = obj.user;\r\n        this.authService.isAuthenticated.next(true);\r\n        this.router.navigate(['/']);\r\n      }\r\n  }, error => this.router.navigate(['/signin']));;\r\n  }\r\n\r\n  GoToSignup(){\r\n    this.router.navigate(['/signup']);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/signin/signin.component.ts","import { Component, OnInit , Input} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { concat } from 'rxjs/operator/concat';\r\nimport { Router } from '@angular/router';\r\nimport 'rxjs/rx';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  @Input() otptext:string;\r\n  @Input() phoneno:string;\r\n  @Input() message:string;\r\n  \r\n  ApplicantType: any[];\r\n  isPhoneVerified = false;\r\n  isSMSSent = false;\r\n  constructor(private router: Router, private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.getApplicantType().subscribe(obj =>{\r\n      //console.log(obj);\r\n      this.ApplicantType = obj;\r\n    })\r\n  }\r\n\r\n  OnSignUp(form:NgForm){\r\n    const userid = form.value.userid;\r\n    const password = form.value.password;\r\n    const type = form.value.type;\r\n    this.authService.Signup(userid, password, type).subscribe(obj => {\r\n      if(obj.user == false){\r\n        this.message = \"Some Error Occured. Try Again\";\r\n      }\r\n      else{\r\n        this.authService.sessionData = obj.user;\r\n        this.authService.isAuthenticated.next(true);\r\n        this.router.navigate(['/']);\r\n      }\r\n  }, error => this.router.navigate(['/signup']));\r\n  }\r\n\r\n  SendOTP(){\r\n    this.authService.SendOTP(this.phoneno).subscribe(obj =>{\r\n        if(obj.OTPSent){\r\n        this.isSMSSent = true;\r\n        this.message = \"SMS successfully sent.\";\r\n      }\r\n      else{\r\n        this.message = obj.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  VerifyOTP(){\r\n    this.authService.VerifyOTP(this.otptext,this.phoneno).subscribe(obj =>{\r\n      if(obj.OTPVerified){\r\n        this.isPhoneVerified = true;\r\n        this.message = \"Phone No. verified.\";\r\n      }\r\n      else{\r\n        this.message = obj.message;\r\n      }\r\n    });\r\n  }\r\n  OnLoginPage(){\r\n    this.router.navigate(['/signin']);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/signup/signup.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 820\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-form/applicant-form.component.css\n// module id = 821\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-list/applicant-list.component.css\n// module id = 822\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/custom-form/custom-form.component.css\n// module id = 823\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = 824\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/view-forms/view-forms.component.css\n// module id = 825\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signin/signin.component.css\n// module id = 826\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signup/signup.component.css\n// module id = 827\n// module chunks = 1","module.exports = \"<div id=\\\"wrapper\\\">\\r\\n    <!-- <ng-template [ngIf]=\\\"!IsAuthenticated()\\\">\\r\\n        <nav class=\\\"navbar navbar-default navbar-fixed-top\\\" role=\\\"navigation\\\" style=\\\"margin-bottom: 0\\\">\\r\\n            <div class=\\\"navbar-header\\\">\\r\\n            </div>\\r\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n                <!-- <li routerLinkActive=\\\"active\\\">\\r\\n                    <a [routerLink]=\\\"['/report']\\\">Report</a>\\r\\n                </li>\\r\\n                <li routerLinkActive=\\\"active\\\">\\r\\n                    <a [routerLink]=\\\"['/overrides']\\\">Overrides</a>\\r\\n                </li> \\r\\n                <li>\\r\\n                    <a style=\\\"cursor: pointer\\\" (click)=\\\"OnLogout()\\\">Logout</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n    </ng-template> -->\\r\\n  <div id=\\\"page-wrapper\\\" style=\\\"margin:100px\\\">\\r\\n     <!-- <ng-template [ngIf]=\\\"!IsAuthenticated()\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n              <app-signin></app-signin>\\r\\n          </div>\\r\\n      </ng-template> -->\\r\\n      <router-outlet></router-outlet>\\r\\n\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 828\n// module chunks = 1","module.exports = \"<form (ngSubmit)=\\\"onSave()\\\" *ngIf=\\\"fieldcount >0\\\" [formGroup]=\\\"ProfileForm\\\">\\n    <h3>{{FormTitle}}</h3>\\n  <div formArrayName=\\\"customcontrols\\\" *ngFor=\\\"let item of ProfileForm.get('customcontrols').controls; let i = index;\\\">\\n   <div [ngSwitch]=\\\"FormFields[i].type\\\">\\n\\n      <!-----------------------For Radio Button------------------>\\n      <div *ngSwitchCase=\\\"'Radio'\\\" class=\\\"form-group\\\">\\n        <label>\\n          {{FormFields[i].label}}\\n          <div *ngFor=\\\"let option of FormFields[i].options; let j = index\\\" >\\n            <!-- <label class=\\\"radio-inline\\\">{{option}}</label> -->\\n            {{option}}\\n              <input type=\\\"radio\\\" [formControlName]=\\\"i\\\" [value]=\\\"option\\\">\\n          </div>\\n        </label>\\n      </div>\\n      <!-----------------------End Radio Button------------------>\\n\\n      <!-----------------------For Checkbox Button------------------>\\n      <div *ngSwitchCase=\\\"'Checkbox'\\\">\\n        <label [for]=\\\"i\\\">\\n          {{FormFields[i].label}}\\n          <div *ngFor=\\\"let option of FormFields[i].options; let j = index\\\" [formArrayName]=\\\"i\\\">\\n            {{option}}\\n              <input type=\\\"checkbox\\\" [formControlName]=\\\"j\\\">\\n          </div>\\n        </label>\\n      </div>\\n      <!-----------------------End Checkbox Button------------------>\\n\\n      <!-----------------------For Textbox Button------------------>\\n      <div *ngSwitchCase=\\\"'Textbox'\\\" class=\\\"form-group\\\">\\n        <label [for]=\\\"i\\\">\\n          {{FormFields[i].label}}\\n          <input type=\\\"text\\\" [formControlName]=\\\"i\\\">\\n        </label>\\n      </div>\\n      <!----------------------End Textbox Button------------------>\\n\\n      <!-----------------------For Paragraph Button------------------>\\n      <div *ngSwitchCase=\\\"'Textarea'\\\" class=\\\"form-group\\\">\\n        <label [for]=\\\"i\\\">\\n          {{FormFields[i].label}}\\n          <textarea [formControlName]=\\\"i\\\"></textarea>\\n        </label>\\n      </div>\\n      <!----------------------End Paragraph Button------------------>\\n\\n      <!-----------------------For Dropbox Button------------------>\\n      <div *ngSwitchCase=\\\"'Dropdown'\\\" class=\\\"form-group\\\">\\n        <label [for]=\\\"i\\\">\\n          {{FormFields[i].label}}\\n          <select [formControlName]=\\\"i\\\">\\n              <option selected disabled>Choose one</option>\\n            <option *ngFor=\\\"let option of FormFields[i].options;let j=index\\\">{{option}}</option>\\n          </select>\\n        </label>\\n      </div>\\n       <!----------------------End Dropbox Button------------------>\\n    </div>\\n  </div>\\n  <br>\\n  <button [disabled]=\\\"!ProfileForm.valid\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-form/applicant-form.component.html\n// module id = 829\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n    <table class=\\\"table-striped table-bordered\\\">\\n      <tr *ngFor=\\\"let item of ApplicantsList\\\">\\n        \\n      </tr>\\n    </table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/applicant-list/applicant-list.component.html\n// module id = 830\n// module chunks = 1","module.exports = \"<span>\\n  Form Title :\\n</span>\\n<input [(ngModel)]=\\\"FormTitle\\\">\\n<br>\\n<span>\\n    Form Type :\\n  </span>\\n  <select id=\\\"type\\\" name=\\\"type\\\" [(ngModel)]=\\\"FormType\\\" required>\\n    <option selected disabled>Choose one</option>\\n    <option *ngFor=\\\"let option of ApplicantType\\\">{{option.type}}</option>\\n  </select>\\n<div class=\\\"dropdown\\\" dropdown [dropdownToggle]=\\\"false\\\">\\n  <button class=\\\"btn btn-default\\\" dropdown-open>Controls list</button>\\n  <div class=\\\"dropdown-menu\\\" dropdown-not-closable-zone>\\n    <table class=\\\"table-bordered table-condensed table-striped\\\">\\n      <tr *ngFor=\\\"let control of controls\\\">\\n        <td>{{control.type}}</td>\\n        <td *ngIf=\\\"!control.isMultiField\\\"></td>\\n        <td *ngIf=\\\"control.isMultiField\\\">\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"control.optionCount\\\">\\n        </td>\\n        <td>\\n          <a (click)=\\\"AddControl(control)\\\">Add</a>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n</div>\\n<div *ngIf=\\\"ProfileFormControlCount >0\\\">\\n  <div *ngFor=\\\"let item of FormLabelList; let i = index;\\\">\\n    <div [ngSwitch]=\\\"item.type\\\">\\n      <label>{{item.type}}</label>\\n      <!-----------------------For Radio Button------------------>\\n      <div *ngSwitchCase=\\\"'Radio'\\\" class=\\\"form-group\\\">\\n        <input [(ngModel)]=\\\"item.label\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        <ul>\\n            <li *ngFor=\\\"let option of item.options; let j = index\\\">\\n                  <input [value]=\\\"option\\\" (change)=\\\"OnOptionChange(i,$event.target.value,j)\\\">\\n              </li>\\n        </ul>\\n        <a (click)=\\\"AddOption(i)\\\">Add Options</a>\\n      </div>\\n      <!-----------------------End Radio Button------------------>\\n\\n      <!-----------------------For Checkbox Button------------------>\\n      <div *ngSwitchCase=\\\"'Checkbox'\\\" class=\\\"form-group\\\">\\n        <input [(ngModel)]=\\\"item.label\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n        <ul>\\n          <li *ngFor=\\\"let option of item.options; let j = index\\\">\\n              <input [value]=\\\"option\\\" (change)=\\\"OnOptionChange(i,$event.target.value,j)\\\">\\n          </li>\\n        </ul>\\n        <a (click)=\\\"AddOption(i)\\\">Add Options</a>\\n      </div>\\n      <!-----------------------End Checkbox Button------------------>\\n\\n      <!-----------------------For Dropbox Button------------------>\\n      <div *ngSwitchCase=\\\"'Dropdown'\\\" class=\\\"dropdown\\\" dropdown [dropdownToggle]=\\\"false\\\">\\n        <input [(ngModel)]=\\\"item.label\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\n        <ul>\\n          <li *ngFor=\\\"let option of item.options; let j = index\\\">\\n              <input [value]=\\\"option\\\" (change)=\\\"OnOptionChange(i,$event.target.value,j)\\\">\\n          </li>\\n        </ul>\\n        <a (click)=\\\"AddOption(i)\\\">Add Options</a>\\n      </div>\\n      <!----------------------End Dropbox Button------------------>\\n\\n      <!-----------------------For Textbox Button------------------>\\n      <div *ngSwitchCase=\\\"'Textbox'\\\" class=\\\"form-group\\\">\\n        <input [(ngModel)]=\\\"item.label\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n      </div>\\n\\n      <!----------------------End Textbox Button------------------>\\n\\n      <!-----------------------For TextArea Button------------------>\\n      <div *ngSwitchCase=\\\"'Textarea'\\\" class=\\\"form-group\\\">\\n        <input [(ngModel)]=\\\"item.label\\\" [value]=\\\"item.label\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n      </div>\\n      <!----------------------End TextArea Button------------------>\\n    </div>\\n  </div>\\n  <br>\\n  <button class=\\\"btn btn-primary\\\" *ngIf= \\\"ProfileFormControlCount>0\\\" (click)=\\\"OnSave()\\\" type=\\\"submit\\\">Save</button>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/custom-form/custom-form.component.html\n// module id = 831\n// module chunks = 1","module.exports = \"<div id=\\\"wrapper\\\">\\r\\n        <nav class=\\\"navbar navbar-default navbar-fixed-top\\\" role=\\\"navigation\\\" style=\\\"margin-bottom: 0\\\">\\r\\n            <div class=\\\"navbar-header\\\">\\r\\n            </div>\\r\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n                <li routerLinkActive=\\\"active\\\" *ngIf=\\\"UserType == 'Admin'\\\">\\r\\n                    <a [routerLink]=\\\"['createform']\\\">Create Form</a>\\r\\n                </li>\\r\\n                <li routerLinkActive=\\\"active\\\" *ngIf=\\\"UserType == 'Admin'\\\">\\r\\n                    <a [routerLink]=\\\"['viewforms']\\\">View Form</a>\\r\\n                </li>\\r\\n                <li routerLinkActive=\\\"active\\\" *ngIf=\\\"UserType == 'Admin'\\\">\\r\\n                        <a [routerLink]=\\\"['applicants']\\\">Applicants</a>\\r\\n                    </li>\\r\\n                <li routerLinkActive=\\\"active\\\" *ngIf=\\\"UserType != 'Admin'\\\">\\r\\n                    <a [routerLink]=\\\"['form']\\\">Fill Form</a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a style=\\\"cursor: pointer\\\" (click)=\\\"OnLogout()\\\">Logout</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n  <div id=\\\"page-wrapper\\\" style=\\\"margin:100px\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = 832\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-4\\\">\\n      <ul>\\n        <li *ngFor=\\\"let option of FormsList; let j=index\\\"><a (click) =\\\"OnSelectForm(j)\\\">{{option.FormTitle}} ({{option.FormType}})</a></li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-xs-8\\\" *ngIf=\\\"isSelected\\\">\\n      <h3>{{SelectedForm.FormTitle}}</h3>\\n          <div *ngFor=\\\"let item of SelectedForm.FormFields;\\\">\\n              <div [ngSwitch]=\\\"item.type\\\">\\n                  <label>\\n                      {{item.label}}\\n                  </label>\\n                 <!-----------------------For Radio Button------------------>\\n                 <div *ngSwitchCase=\\\"'Radio'\\\" class=\\\"form-group\\\">\\n                   <div *ngFor=\\\"let option of item.options; let j = index\\\" >\\n                       <!-- <label class=\\\"radio-inline\\\">{{option}}</label> -->\\n                       {{option}}\\n                       <input type=\\\"radio\\\" [value]=\\\"option\\\">\\n                      </div>\\n                 </div>\\n                 <!-----------------------End Radio Button------------------>\\n           \\n                 <!-----------------------For Checkbox Button------------------>\\n                 <div *ngSwitchCase=\\\"'Checkbox'\\\">\\n                     <div *ngFor=\\\"let option of item.options; let j = index\\\">\\n                       {{option}}\\n                         <input type=\\\"checkbox\\\">\\n                     </div>\\n                 </div>\\n                 <!-----------------------End Checkbox Button------------------>\\n           \\n                 <!-----------------------For Textbox Button------------------>\\n                 <div *ngSwitchCase=\\\"'Textbox'\\\" class=\\\"form-group\\\">\\n                     <input type=\\\"text\\\"/>\\n                 </div>\\n                 <!----------------------End Textbox Button------------------>\\n           \\n                 <!-----------------------For Paragraph Button------------------>\\n                 <div *ngSwitchCase=\\\"'Textarea'\\\" class=\\\"form-group\\\">\\n                     <textarea></textarea>\\n                 </div>\\n                 <!----------------------End Paragraph Button------------------>\\n           \\n                 <!-----------------------For Dropbox Button------------------>\\n                 <div *ngSwitchCase=\\\"'Dropdown'\\\" class=\\\"form-group\\\">\\n                     <select>\\n                         <option selected disabled>Choose one</option>\\n                       <option *ngFor=\\\"let option of item.options;let j=index\\\">{{option}}</option>\\n                     </select>\\n                 </div>\\n                  <!----------------------End Dropbox Button------------------>\\n               </div>\\n             </div>\\n    </div>\\n    <div class=\\\"col-xs-8\\\" *ngIf=\\\"!isSelected\\\">\\n        <h3>Select a Form</h3>\\n      </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/view-forms/view-forms.component.html\n// module id = 833\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\r\\n      <span class=\\\"help-block\\\" >{{message}}</span>\\r\\n      <form (ngSubmit)=\\\"OnSignIn(f)\\\" #f=\\\"ngForm\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"userid\\\">Phone No.</label>\\r\\n            <input type=\\\"userid\\\" \\r\\n                     id=\\\"userid\\\" \\r\\n                     class=\\\"form-control\\\" \\r\\n                     ngModel \\r\\n                     name=\\\"userid\\\"\\r\\n                     required\\r\\n                     #userid = \\\"ngModel\\\"> <!-- Just like ngForm ngModel also gives information about control-->\\r\\n            <span class=\\\"help-block\\\" *ngIf=\\\"!userid.valid && userid.touched\\\">Phone No. is invalid</span>\\r\\n           \\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"password\\\">Password</label>\\r\\n            <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" ngModel required #password = \\\"ngModel\\\">\\r\\n            <span class=\\\"help-block\\\" *ngIf=\\\"!password.valid && password.touched\\\" >Password is required</span>\\r\\n  </div>\\r\\n  <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!f.valid && f.touched\\\" type=\\\"submit\\\">Sign In</button>\\r\\n  <button class=\\\"btn btn-default\\\" (click) = \\\"GoToSignup()\\\" type=\\\"button\\\">New User? Sign up</button>\\r\\n  </form>\\r\\n  </div>\\r\\n</div>\\r\\n<!--Email Pattern check pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signin/signin.component.html\n// module id = 834\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\r\\n      <span class=\\\"help-block\\\" >{{message}}</span>\\r\\n        <form (ngSubmit)=\\\"OnSignUp(f)\\\" #f=\\\"ngForm\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"userid\\\">Phone No</label>\\r\\n              <input type=\\\"userid\\\" \\r\\n                       id=\\\"userid\\\" \\r\\n                       class=\\\"form-control\\\" \\r\\n                       name=\\\"userid\\\"\\r\\n                       required\\r\\n                       [(ngModel)]=\\\"phoneno\\\"\\r\\n                       #userid = \\\"ngModel\\\"> <!-- Just like ngForm ngModel also gives information about control-->\\r\\n              <span class=\\\"help-block\\\" *ngIf=\\\"!userid.valid && userid.touched\\\">Phone No. is invalid</span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\" *ngIf=\\\"isSMSSent\\\">\\r\\n                <label for=\\\"otp\\\">OTP</label>\\r\\n                  <input type=\\\"text\\\" \\r\\n                           id=\\\"otp\\\" \\r\\n                           class=\\\"form-control\\\" \\r\\n                           name=\\\"otp\\\"\\r\\n                           required\\r\\n                           [(ngModel)]=\\\"otptext\\\"\\r\\n                           #otp = \\\"ngModel\\\"> <!-- Just like ngForm ngModel also gives information about control-->\\r\\n                  <span class=\\\"help-block\\\" *ngIf=\\\"!otp.valid && otp.touched\\\">OTP is invalid</span>\\r\\n                </div>\\r\\n            \\r\\n\\r\\n              <button class=\\\"btn btn-warning\\\" *ngIf=\\\"!isSMSSent\\\" (click)=\\\"SendOTP()\\\" type='button'>Continue</button>\\r\\n              <button class=\\\"btn btn-warning\\\" *ngIf=\\\"isSMSSent && !isPhoneVerified\\\" (click)=\\\"VerifyOTP()\\\" type='button'>Verify OTP</button>\\r\\n            \\r\\n            <div class=\\\"form-group\\\" *ngIf=\\\"isPhoneVerified\\\">\\r\\n              <label for=\\\"type\\\">Type\\r\\n                <select id=\\\"type\\\" name=\\\"type\\\" ngModel required>\\r\\n                    <option selected disabled>Choose one</option>\\r\\n                    <option *ngFor=\\\"let option of ApplicantType;let j=index\\\">{{option.type}}</option>\\r\\n                </select></label>\\r\\n              <label for=\\\"password\\\">Password</label>\\r\\n              <input type=\\\"password\\\" minlength=\\\"6\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" ngModel required #password = \\\"ngModel\\\">\\r\\n              <span class=\\\"help-block\\\" *ngIf=\\\"!password.valid && password.touched\\\" >Password is invalid</span>\\r\\n              <span class=\\\"help-block\\\" *ngIf=\\\"password.errors?.minlength && password.touched\\\">Password must be atleast 6 characters long</span>\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-primary\\\" *ngIf=\\\"isPhoneVerified\\\" [disabled]=\\\"!f.valid && f.touched\\\" type=\\\"submit\\\">Sign Up</button>\\r\\n            <button class=\\\"btn btn-default\\\" (click)=\\\"OnLoginPage()\\\" type='button'>Already have an account? Log in</button>\\r\\n          </form>\\r\\n    </div>\\r\\n</div>\\r\\n  <!-- pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/signup/signup.component.html\n// module id = 835\n// module chunks = 1"],"sourceRoot":""}